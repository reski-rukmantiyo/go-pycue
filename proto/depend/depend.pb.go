// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.25.3
// source: OpenCue/proto/depend.proto

package depend

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Defines the type of dependency.  The names are pretty much self
// explanatory except for FrameByFrame, which is basically a hard
// depend.
type DependType int32

const (
	DependType_JOB_ON_JOB         DependType = 0
	DependType_JOB_ON_LAYER       DependType = 1
	DependType_JOB_ON_FRAME       DependType = 2
	DependType_LAYER_ON_JOB       DependType = 3
	DependType_LAYER_ON_LAYER     DependType = 4
	DependType_LAYER_ON_FRAME     DependType = 5
	DependType_FRAME_ON_JOB       DependType = 6
	DependType_FRAME_ON_LAYER     DependType = 7
	DependType_FRAME_ON_FRAME     DependType = 8
	DependType_FRAME_BY_FRAME     DependType = 9
	DependType_PREVIOUS_FRAME     DependType = 10
	DependType_LAYER_ON_SIM_FRAME DependType = 11
)

// Enum value maps for DependType.
var (
	DependType_name = map[int32]string{
		0:  "JOB_ON_JOB",
		1:  "JOB_ON_LAYER",
		2:  "JOB_ON_FRAME",
		3:  "LAYER_ON_JOB",
		4:  "LAYER_ON_LAYER",
		5:  "LAYER_ON_FRAME",
		6:  "FRAME_ON_JOB",
		7:  "FRAME_ON_LAYER",
		8:  "FRAME_ON_FRAME",
		9:  "FRAME_BY_FRAME",
		10: "PREVIOUS_FRAME",
		11: "LAYER_ON_SIM_FRAME",
	}
	DependType_value = map[string]int32{
		"JOB_ON_JOB":         0,
		"JOB_ON_LAYER":       1,
		"JOB_ON_FRAME":       2,
		"LAYER_ON_JOB":       3,
		"LAYER_ON_LAYER":     4,
		"LAYER_ON_FRAME":     5,
		"FRAME_ON_JOB":       6,
		"FRAME_ON_LAYER":     7,
		"FRAME_ON_FRAME":     8,
		"FRAME_BY_FRAME":     9,
		"PREVIOUS_FRAME":     10,
		"LAYER_ON_SIM_FRAME": 11,
	}
)

func (x DependType) Enum() *DependType {
	p := new(DependType)
	*p = x
	return p
}

func (x DependType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DependType) Descriptor() protoreflect.EnumDescriptor {
	return file_OpenCue_proto_depend_proto_enumTypes[0].Descriptor()
}

func (DependType) Type() protoreflect.EnumType {
	return &file_OpenCue_proto_depend_proto_enumTypes[0]
}

func (x DependType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DependType.Descriptor instead.
func (DependType) EnumDescriptor() ([]byte, []int) {
	return file_OpenCue_proto_depend_proto_rawDescGZIP(), []int{0}
}

// The depend visibility.  If the depend-er-job and the depend-on-job is
// the same, the depend is Internal, if not, its External.
type DependTarget int32

const (
	DependTarget_INTERNAL   DependTarget = 0
	DependTarget_EXTERNAL   DependTarget = 1
	DependTarget_ANY_TARGET DependTarget = 2
)

// Enum value maps for DependTarget.
var (
	DependTarget_name = map[int32]string{
		0: "INTERNAL",
		1: "EXTERNAL",
		2: "ANY_TARGET",
	}
	DependTarget_value = map[string]int32{
		"INTERNAL":   0,
		"EXTERNAL":   1,
		"ANY_TARGET": 2,
	}
)

func (x DependTarget) Enum() *DependTarget {
	p := new(DependTarget)
	*p = x
	return p
}

func (x DependTarget) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DependTarget) Descriptor() protoreflect.EnumDescriptor {
	return file_OpenCue_proto_depend_proto_enumTypes[1].Descriptor()
}

func (DependTarget) Type() protoreflect.EnumType {
	return &file_OpenCue_proto_depend_proto_enumTypes[1]
}

func (x DependTarget) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DependTarget.Descriptor instead.
func (DependTarget) EnumDescriptor() ([]byte, []int) {
	return file_OpenCue_proto_depend_proto_rawDescGZIP(), []int{1}
}

// The Depend object repesents a unique dependency on the Cuebot server.
type Depend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Id for the depend
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The type of depend.
	Type DependType `protobuf:"varint,2,opt,name=type,proto3,enum=depend.DependType" json:"type,omitempty"`
	// The target of depend, either internal or external.
	Target DependTarget `protobuf:"varint,3,opt,name=target,proto3,enum=depend.DependTarget" json:"target,omitempty"`
	// True if the depend is an any frame depend.
	AnyFrame bool `protobuf:"varint,4,opt,name=any_frame,json=anyFrame,proto3" json:"any_frame,omitempty"`
	// True if the depend is active.
	Active bool `protobuf:"varint,5,opt,name=active,proto3" json:"active,omitempty"`
	// Name of the job that is depending.
	DependErJob string `protobuf:"bytes,6,opt,name=depend_er_job,json=dependErJob,proto3" json:"depend_er_job,omitempty"`
	// Name of the layer that is depending.
	DependErLayer string `protobuf:"bytes,7,opt,name=depend_er_layer,json=dependErLayer,proto3" json:"depend_er_layer,omitempty"`
	// Name of the frame that is depending
	DependErFrame string `protobuf:"bytes,8,opt,name=depend_er_frame,json=dependErFrame,proto3" json:"depend_er_frame,omitempty"`
	// Name of the job to depend on
	DependOnJob string `protobuf:"bytes,9,opt,name=depend_on_job,json=dependOnJob,proto3" json:"depend_on_job,omitempty"`
	// Name of the layer to depend on.
	DependOnLayer string `protobuf:"bytes,10,opt,name=depend_on_layer,json=dependOnLayer,proto3" json:"depend_on_layer,omitempty"`
	// Name of the name to depend on.
	DependOnFrame string `protobuf:"bytes,11,opt,name=depend_on_frame,json=dependOnFrame,proto3" json:"depend_on_frame,omitempty"`
}

func (x *Depend) Reset() {
	*x = Depend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_depend_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Depend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Depend) ProtoMessage() {}

func (x *Depend) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_depend_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Depend.ProtoReflect.Descriptor instead.
func (*Depend) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_depend_proto_rawDescGZIP(), []int{0}
}

func (x *Depend) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Depend) GetType() DependType {
	if x != nil {
		return x.Type
	}
	return DependType_JOB_ON_JOB
}

func (x *Depend) GetTarget() DependTarget {
	if x != nil {
		return x.Target
	}
	return DependTarget_INTERNAL
}

func (x *Depend) GetAnyFrame() bool {
	if x != nil {
		return x.AnyFrame
	}
	return false
}

func (x *Depend) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *Depend) GetDependErJob() string {
	if x != nil {
		return x.DependErJob
	}
	return ""
}

func (x *Depend) GetDependErLayer() string {
	if x != nil {
		return x.DependErLayer
	}
	return ""
}

func (x *Depend) GetDependErFrame() string {
	if x != nil {
		return x.DependErFrame
	}
	return ""
}

func (x *Depend) GetDependOnJob() string {
	if x != nil {
		return x.DependOnJob
	}
	return ""
}

func (x *Depend) GetDependOnLayer() string {
	if x != nil {
		return x.DependOnLayer
	}
	return ""
}

func (x *Depend) GetDependOnFrame() string {
	if x != nil {
		return x.DependOnFrame
	}
	return ""
}

// An array of Depend objects
type DependSeq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Depends []*Depend `protobuf:"bytes,1,rep,name=depends,proto3" json:"depends,omitempty"`
}

func (x *DependSeq) Reset() {
	*x = DependSeq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_depend_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DependSeq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DependSeq) ProtoMessage() {}

func (x *DependSeq) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_depend_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DependSeq.ProtoReflect.Descriptor instead.
func (*DependSeq) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_depend_proto_rawDescGZIP(), []int{1}
}

func (x *DependSeq) GetDepends() []*Depend {
	if x != nil {
		return x.Depends
	}
	return nil
}

type DependGetDependRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DependGetDependRequest) Reset() {
	*x = DependGetDependRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_depend_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DependGetDependRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DependGetDependRequest) ProtoMessage() {}

func (x *DependGetDependRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_depend_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DependGetDependRequest.ProtoReflect.Descriptor instead.
func (*DependGetDependRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_depend_proto_rawDescGZIP(), []int{2}
}

func (x *DependGetDependRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DependGetDependResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Depend *Depend `protobuf:"bytes,1,opt,name=depend,proto3" json:"depend,omitempty"`
}

func (x *DependGetDependResponse) Reset() {
	*x = DependGetDependResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_depend_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DependGetDependResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DependGetDependResponse) ProtoMessage() {}

func (x *DependGetDependResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_depend_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DependGetDependResponse.ProtoReflect.Descriptor instead.
func (*DependGetDependResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_depend_proto_rawDescGZIP(), []int{3}
}

func (x *DependGetDependResponse) GetDepend() *Depend {
	if x != nil {
		return x.Depend
	}
	return nil
}

// Satisfy
type DependSatisfyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Depend *Depend `protobuf:"bytes,1,opt,name=depend,proto3" json:"depend,omitempty"`
}

func (x *DependSatisfyRequest) Reset() {
	*x = DependSatisfyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_depend_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DependSatisfyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DependSatisfyRequest) ProtoMessage() {}

func (x *DependSatisfyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_depend_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DependSatisfyRequest.ProtoReflect.Descriptor instead.
func (*DependSatisfyRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_depend_proto_rawDescGZIP(), []int{4}
}

func (x *DependSatisfyRequest) GetDepend() *Depend {
	if x != nil {
		return x.Depend
	}
	return nil
}

type DependSatisfyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DependSatisfyResponse) Reset() {
	*x = DependSatisfyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_depend_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DependSatisfyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DependSatisfyResponse) ProtoMessage() {}

func (x *DependSatisfyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_depend_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DependSatisfyResponse.ProtoReflect.Descriptor instead.
func (*DependSatisfyResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_depend_proto_rawDescGZIP(), []int{5}
}

// Unsatisfy
type DependUnsatisfyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Depend *Depend `protobuf:"bytes,1,opt,name=depend,proto3" json:"depend,omitempty"`
}

func (x *DependUnsatisfyRequest) Reset() {
	*x = DependUnsatisfyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_depend_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DependUnsatisfyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DependUnsatisfyRequest) ProtoMessage() {}

func (x *DependUnsatisfyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_depend_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DependUnsatisfyRequest.ProtoReflect.Descriptor instead.
func (*DependUnsatisfyRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_depend_proto_rawDescGZIP(), []int{6}
}

func (x *DependUnsatisfyRequest) GetDepend() *Depend {
	if x != nil {
		return x.Depend
	}
	return nil
}

type DependUnsatisfyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DependUnsatisfyResponse) Reset() {
	*x = DependUnsatisfyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_depend_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DependUnsatisfyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DependUnsatisfyResponse) ProtoMessage() {}

func (x *DependUnsatisfyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_depend_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DependUnsatisfyResponse.ProtoReflect.Descriptor instead.
func (*DependUnsatisfyResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_depend_proto_rawDescGZIP(), []int{7}
}

var File_OpenCue_proto_depend_proto protoreflect.FileDescriptor

var file_OpenCue_proto_depend_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x75, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x64, 0x65,
	0x70, 0x65, 0x6e, 0x64, 0x22, 0x8b, 0x03, 0x0a, 0x06, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x26, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e,
	0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x2e, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64,
	0x2e, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x06, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x6e, 0x79, 0x5f, 0x66, 0x72, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x61, 0x6e, 0x79, 0x46, 0x72, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x64, 0x65,
	0x70, 0x65, 0x6e, 0x64, 0x5f, 0x65, 0x72, 0x5f, 0x6a, 0x6f, 0x62, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x45, 0x72, 0x4a, 0x6f, 0x62, 0x12, 0x26,
	0x0a, 0x0f, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x5f, 0x65, 0x72, 0x5f, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x45,
	0x72, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0f, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64,
	0x5f, 0x65, 0x72, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x45, 0x72, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x22,
	0x0a, 0x0d, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x5f, 0x6f, 0x6e, 0x5f, 0x6a, 0x6f, 0x62, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x4f, 0x6e, 0x4a,
	0x6f, 0x62, 0x12, 0x26, 0x0a, 0x0f, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x5f, 0x6f, 0x6e, 0x5f,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x65, 0x70,
	0x65, 0x6e, 0x64, 0x4f, 0x6e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0f, 0x64, 0x65,
	0x70, 0x65, 0x6e, 0x64, 0x5f, 0x6f, 0x6e, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x4f, 0x6e, 0x46, 0x72, 0x61,
	0x6d, 0x65, 0x22, 0x35, 0x0a, 0x09, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x53, 0x65, 0x71, 0x12,
	0x28, 0x0a, 0x07, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x2e, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64,
	0x52, 0x07, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x22, 0x28, 0x0a, 0x16, 0x44, 0x65, 0x70,
	0x65, 0x6e, 0x64, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x41, 0x0a, 0x17, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x47, 0x65, 0x74,
	0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26,
	0x0a, 0x06, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x2e, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x52, 0x06,
	0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x22, 0x3e, 0x0a, 0x14, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64,
	0x53, 0x61, 0x74, 0x69, 0x73, 0x66, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26,
	0x0a, 0x06, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x2e, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x52, 0x06,
	0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x22, 0x17, 0x0a, 0x15, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64,
	0x53, 0x61, 0x74, 0x69, 0x73, 0x66, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x40, 0x0a, 0x16, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x55, 0x6e, 0x73, 0x61, 0x74, 0x69, 0x73,
	0x66, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x06, 0x64, 0x65, 0x70,
	0x65, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x64, 0x65, 0x70, 0x65,
	0x6e, 0x64, 0x2e, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x52, 0x06, 0x64, 0x65, 0x70, 0x65, 0x6e,
	0x64, 0x22, 0x19, 0x0a, 0x17, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x55, 0x6e, 0x73, 0x61, 0x74,
	0x69, 0x73, 0x66, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0xf4, 0x01, 0x0a,
	0x0a, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x4a,
	0x4f, 0x42, 0x5f, 0x4f, 0x4e, 0x5f, 0x4a, 0x4f, 0x42, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x4a,
	0x4f, 0x42, 0x5f, 0x4f, 0x4e, 0x5f, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x10, 0x01, 0x12, 0x10, 0x0a,
	0x0c, 0x4a, 0x4f, 0x42, 0x5f, 0x4f, 0x4e, 0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x10, 0x02, 0x12,
	0x10, 0x0a, 0x0c, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x4f, 0x4e, 0x5f, 0x4a, 0x4f, 0x42, 0x10,
	0x03, 0x12, 0x12, 0x0a, 0x0e, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x4f, 0x4e, 0x5f, 0x4c, 0x41,
	0x59, 0x45, 0x52, 0x10, 0x04, 0x12, 0x12, 0x0a, 0x0e, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x4f,
	0x4e, 0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x10, 0x05, 0x12, 0x10, 0x0a, 0x0c, 0x46, 0x52, 0x41,
	0x4d, 0x45, 0x5f, 0x4f, 0x4e, 0x5f, 0x4a, 0x4f, 0x42, 0x10, 0x06, 0x12, 0x12, 0x0a, 0x0e, 0x46,
	0x52, 0x41, 0x4d, 0x45, 0x5f, 0x4f, 0x4e, 0x5f, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x10, 0x07, 0x12,
	0x12, 0x0a, 0x0e, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x5f, 0x4f, 0x4e, 0x5f, 0x46, 0x52, 0x41, 0x4d,
	0x45, 0x10, 0x08, 0x12, 0x12, 0x0a, 0x0e, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x5f, 0x42, 0x59, 0x5f,
	0x46, 0x52, 0x41, 0x4d, 0x45, 0x10, 0x09, 0x12, 0x12, 0x0a, 0x0e, 0x50, 0x52, 0x45, 0x56, 0x49,
	0x4f, 0x55, 0x53, 0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x10, 0x0a, 0x12, 0x16, 0x0a, 0x12, 0x4c,
	0x41, 0x59, 0x45, 0x52, 0x5f, 0x4f, 0x4e, 0x5f, 0x53, 0x49, 0x4d, 0x5f, 0x46, 0x52, 0x41, 0x4d,
	0x45, 0x10, 0x0b, 0x2a, 0x3a, 0x0a, 0x0c, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x12, 0x0c, 0x0a, 0x08, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x10,
	0x00, 0x12, 0x0c, 0x0a, 0x08, 0x45, 0x58, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x10, 0x01, 0x12,
	0x0e, 0x0a, 0x0a, 0x41, 0x4e, 0x59, 0x5f, 0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x10, 0x02, 0x32,
	0xf5, 0x01, 0x0a, 0x0f, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x12, 0x4c, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64,
	0x12, 0x1e, 0x2e, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x2e, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64,
	0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1f, 0x2e, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x2e, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64,
	0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x46, 0x0a, 0x07, 0x53, 0x61, 0x74, 0x69, 0x73, 0x66, 0x79, 0x12, 0x1c, 0x2e, 0x64,
	0x65, 0x70, 0x65, 0x6e, 0x64, 0x2e, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x53, 0x61, 0x74, 0x69,
	0x73, 0x66, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x64, 0x65, 0x70,
	0x65, 0x6e, 0x64, 0x2e, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x53, 0x61, 0x74, 0x69, 0x73, 0x66,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x09, 0x55, 0x6e, 0x73,
	0x61, 0x74, 0x69, 0x73, 0x66, 0x79, 0x12, 0x1e, 0x2e, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x2e,
	0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x55, 0x6e, 0x73, 0x61, 0x74, 0x69, 0x73, 0x66, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x2e,
	0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x55, 0x6e, 0x73, 0x61, 0x74, 0x69, 0x73, 0x66, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x32, 0x0a, 0x20, 0x63, 0x6f, 0x6d, 0x2e, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x2e, 0x73, 0x70, 0x63, 0x75, 0x65, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x50, 0x01, 0x5a, 0x0c, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_OpenCue_proto_depend_proto_rawDescOnce sync.Once
	file_OpenCue_proto_depend_proto_rawDescData = file_OpenCue_proto_depend_proto_rawDesc
)

func file_OpenCue_proto_depend_proto_rawDescGZIP() []byte {
	file_OpenCue_proto_depend_proto_rawDescOnce.Do(func() {
		file_OpenCue_proto_depend_proto_rawDescData = protoimpl.X.CompressGZIP(file_OpenCue_proto_depend_proto_rawDescData)
	})
	return file_OpenCue_proto_depend_proto_rawDescData
}

var file_OpenCue_proto_depend_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_OpenCue_proto_depend_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_OpenCue_proto_depend_proto_goTypes = []interface{}{
	(DependType)(0),                 // 0: depend.DependType
	(DependTarget)(0),               // 1: depend.DependTarget
	(*Depend)(nil),                  // 2: depend.Depend
	(*DependSeq)(nil),               // 3: depend.DependSeq
	(*DependGetDependRequest)(nil),  // 4: depend.DependGetDependRequest
	(*DependGetDependResponse)(nil), // 5: depend.DependGetDependResponse
	(*DependSatisfyRequest)(nil),    // 6: depend.DependSatisfyRequest
	(*DependSatisfyResponse)(nil),   // 7: depend.DependSatisfyResponse
	(*DependUnsatisfyRequest)(nil),  // 8: depend.DependUnsatisfyRequest
	(*DependUnsatisfyResponse)(nil), // 9: depend.DependUnsatisfyResponse
}
var file_OpenCue_proto_depend_proto_depIdxs = []int32{
	0, // 0: depend.Depend.type:type_name -> depend.DependType
	1, // 1: depend.Depend.target:type_name -> depend.DependTarget
	2, // 2: depend.DependSeq.depends:type_name -> depend.Depend
	2, // 3: depend.DependGetDependResponse.depend:type_name -> depend.Depend
	2, // 4: depend.DependSatisfyRequest.depend:type_name -> depend.Depend
	2, // 5: depend.DependUnsatisfyRequest.depend:type_name -> depend.Depend
	4, // 6: depend.DependInterface.GetDepend:input_type -> depend.DependGetDependRequest
	6, // 7: depend.DependInterface.Satisfy:input_type -> depend.DependSatisfyRequest
	8, // 8: depend.DependInterface.Unsatisfy:input_type -> depend.DependUnsatisfyRequest
	5, // 9: depend.DependInterface.GetDepend:output_type -> depend.DependGetDependResponse
	7, // 10: depend.DependInterface.Satisfy:output_type -> depend.DependSatisfyResponse
	9, // 11: depend.DependInterface.Unsatisfy:output_type -> depend.DependUnsatisfyResponse
	9, // [9:12] is the sub-list for method output_type
	6, // [6:9] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_OpenCue_proto_depend_proto_init() }
func file_OpenCue_proto_depend_proto_init() {
	if File_OpenCue_proto_depend_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_OpenCue_proto_depend_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Depend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_depend_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DependSeq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_depend_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DependGetDependRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_depend_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DependGetDependResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_depend_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DependSatisfyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_depend_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DependSatisfyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_depend_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DependUnsatisfyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_depend_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DependUnsatisfyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_OpenCue_proto_depend_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_OpenCue_proto_depend_proto_goTypes,
		DependencyIndexes: file_OpenCue_proto_depend_proto_depIdxs,
		EnumInfos:         file_OpenCue_proto_depend_proto_enumTypes,
		MessageInfos:      file_OpenCue_proto_depend_proto_msgTypes,
	}.Build()
	File_OpenCue_proto_depend_proto = out.File
	file_OpenCue_proto_depend_proto_rawDesc = nil
	file_OpenCue_proto_depend_proto_goTypes = nil
	file_OpenCue_proto_depend_proto_depIdxs = nil
}
