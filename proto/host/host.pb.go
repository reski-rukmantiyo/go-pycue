// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.25.3
// source: OpenCue/proto/host.proto

package host

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	comment "github.com/reski-rukmantiyo/go-pycue/proto/comment"
	criterion "github.com/reski-rukmantiyo/go-pycue/proto/criterion"
	job_proto "github.com/reski-rukmantiyo/go-pycue/proto/job.proto"
	renderPartition "github.com/reski-rukmantiyo/go-pycue/proto/renderPartition"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HardwareState int32

const (
	HardwareState_UP               HardwareState = 0
	HardwareState_DOWN             HardwareState = 1
	HardwareState_REBOOTING        HardwareState = 2
	HardwareState_REBOOT_WHEN_IDLE HardwareState = 3
	HardwareState_REPAIR           HardwareState = 4
)

// Enum value maps for HardwareState.
var (
	HardwareState_name = map[int32]string{
		0: "UP",
		1: "DOWN",
		2: "REBOOTING",
		3: "REBOOT_WHEN_IDLE",
		4: "REPAIR",
	}
	HardwareState_value = map[string]int32{
		"UP":               0,
		"DOWN":             1,
		"REBOOTING":        2,
		"REBOOT_WHEN_IDLE": 3,
		"REPAIR":           4,
	}
)

func (x HardwareState) Enum() *HardwareState {
	p := new(HardwareState)
	*p = x
	return p
}

func (x HardwareState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HardwareState) Descriptor() protoreflect.EnumDescriptor {
	return file_OpenCue_proto_host_proto_enumTypes[0].Descriptor()
}

func (HardwareState) Type() protoreflect.EnumType {
	return &file_OpenCue_proto_host_proto_enumTypes[0]
}

func (x HardwareState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HardwareState.Descriptor instead.
func (HardwareState) EnumDescriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{0}
}

type HostTagType int32

const (
	HostTagType_MANUAL   HostTagType = 0
	HostTagType_HARDWARE HostTagType = 1
	HostTagType_ALLOC    HostTagType = 2
	HostTagType_HOSTNAME HostTagType = 3
)

// Enum value maps for HostTagType.
var (
	HostTagType_name = map[int32]string{
		0: "MANUAL",
		1: "HARDWARE",
		2: "ALLOC",
		3: "HOSTNAME",
	}
	HostTagType_value = map[string]int32{
		"MANUAL":   0,
		"HARDWARE": 1,
		"ALLOC":    2,
		"HOSTNAME": 3,
	}
)

func (x HostTagType) Enum() *HostTagType {
	p := new(HostTagType)
	*p = x
	return p
}

func (x HostTagType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HostTagType) Descriptor() protoreflect.EnumDescriptor {
	return file_OpenCue_proto_host_proto_enumTypes[1].Descriptor()
}

func (HostTagType) Type() protoreflect.EnumType {
	return &file_OpenCue_proto_host_proto_enumTypes[1]
}

func (x HostTagType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HostTagType.Descriptor instead.
func (HostTagType) EnumDescriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{1}
}

type LockState int32

const (
	LockState_OPEN         LockState = 0
	LockState_LOCKED       LockState = 1
	LockState_NIMBY_LOCKED LockState = 2
)

// Enum value maps for LockState.
var (
	LockState_name = map[int32]string{
		0: "OPEN",
		1: "LOCKED",
		2: "NIMBY_LOCKED",
	}
	LockState_value = map[string]int32{
		"OPEN":         0,
		"LOCKED":       1,
		"NIMBY_LOCKED": 2,
	}
)

func (x LockState) Enum() *LockState {
	p := new(LockState)
	*p = x
	return p
}

func (x LockState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LockState) Descriptor() protoreflect.EnumDescriptor {
	return file_OpenCue_proto_host_proto_enumTypes[2].Descriptor()
}

func (LockState) Type() protoreflect.EnumType {
	return &file_OpenCue_proto_host_proto_enumTypes[2]
}

func (x LockState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LockState.Descriptor instead.
func (LockState) EnumDescriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{2}
}

// Proc redirects can have two different types of destinations, jobs and groups.
type RedirectType int32

const (
	RedirectType_JOB_REDIRECT   RedirectType = 0
	RedirectType_GROUP_REDIRECT RedirectType = 1
)

// Enum value maps for RedirectType.
var (
	RedirectType_name = map[int32]string{
		0: "JOB_REDIRECT",
		1: "GROUP_REDIRECT",
	}
	RedirectType_value = map[string]int32{
		"JOB_REDIRECT":   0,
		"GROUP_REDIRECT": 1,
	}
)

func (x RedirectType) Enum() *RedirectType {
	p := new(RedirectType)
	*p = x
	return p
}

func (x RedirectType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RedirectType) Descriptor() protoreflect.EnumDescriptor {
	return file_OpenCue_proto_host_proto_enumTypes[3].Descriptor()
}

func (RedirectType) Type() protoreflect.EnumType {
	return &file_OpenCue_proto_host_proto_enumTypes[3]
}

func (x RedirectType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RedirectType.Descriptor instead.
func (RedirectType) EnumDescriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{3}
}

// Defines the possible states for a core or proc
type RunState int32

const (
	// Entity is idle, which means it can be booked.
	RunState_IDLE RunState = 0
	// Entity is booked, which means its in use on a render proc
	RunState_BOOKED RunState = 1
)

// Enum value maps for RunState.
var (
	RunState_name = map[int32]string{
		0: "IDLE",
		1: "BOOKED",
	}
	RunState_value = map[string]int32{
		"IDLE":   0,
		"BOOKED": 1,
	}
)

func (x RunState) Enum() *RunState {
	p := new(RunState)
	*p = x
	return p
}

func (x RunState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RunState) Descriptor() protoreflect.EnumDescriptor {
	return file_OpenCue_proto_host_proto_enumTypes[4].Descriptor()
}

func (RunState) Type() protoreflect.EnumType {
	return &file_OpenCue_proto_host_proto_enumTypes[4]
}

func (x RunState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RunState.Descriptor instead.
func (RunState) EnumDescriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{4}
}

type ThreadMode int32

const (
	// Auto determines the number of threads to use automatically
	// based on the amount of memory used by the frame.
	ThreadMode_AUTO ThreadMode = 0
	// All always uses all of the cores available on the proc.
	// These hosts are always booked on threadable layers.
	ThreadMode_ALL ThreadMode = 1
	// All mode during the day, auto-mode at night.
	ThreadMode_VARIABLE ThreadMode = 2
)

// Enum value maps for ThreadMode.
var (
	ThreadMode_name = map[int32]string{
		0: "AUTO",
		1: "ALL",
		2: "VARIABLE",
	}
	ThreadMode_value = map[string]int32{
		"AUTO":     0,
		"ALL":      1,
		"VARIABLE": 2,
	}
)

func (x ThreadMode) Enum() *ThreadMode {
	p := new(ThreadMode)
	*p = x
	return p
}

func (x ThreadMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ThreadMode) Descriptor() protoreflect.EnumDescriptor {
	return file_OpenCue_proto_host_proto_enumTypes[5].Descriptor()
}

func (ThreadMode) Type() protoreflect.EnumType {
	return &file_OpenCue_proto_host_proto_enumTypes[5]
}

func (x ThreadMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ThreadMode.Descriptor instead.
func (ThreadMode) EnumDescriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{5}
}

type Deed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Host  string `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	Owner string `protobuf:"bytes,3,opt,name=owner,proto3" json:"owner,omitempty"`
	Show  string `protobuf:"bytes,4,opt,name=show,proto3" json:"show,omitempty"`
}

func (x *Deed) Reset() {
	*x = Deed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Deed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Deed) ProtoMessage() {}

func (x *Deed) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Deed.ProtoReflect.Descriptor instead.
func (*Deed) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{0}
}

func (x *Deed) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Deed) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *Deed) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *Deed) GetShow() string {
	if x != nil {
		return x.Show
	}
	return ""
}

type DeedSeq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Deeds []*Deed `protobuf:"bytes,1,rep,name=deeds,proto3" json:"deeds,omitempty"`
}

func (x *DeedSeq) Reset() {
	*x = DeedSeq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeedSeq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeedSeq) ProtoMessage() {}

func (x *DeedSeq) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeedSeq.ProtoReflect.Descriptor instead.
func (*DeedSeq) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{1}
}

func (x *DeedSeq) GetDeeds() []*Deed {
	if x != nil {
		return x.Deeds
	}
	return nil
}

type HardwareStateSeq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State []HardwareState `protobuf:"varint,1,rep,packed,name=state,proto3,enum=host.HardwareState" json:"state,omitempty"`
}

func (x *HardwareStateSeq) Reset() {
	*x = HardwareStateSeq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HardwareStateSeq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HardwareStateSeq) ProtoMessage() {}

func (x *HardwareStateSeq) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HardwareStateSeq.ProtoReflect.Descriptor instead.
func (*HardwareStateSeq) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{2}
}

func (x *HardwareStateSeq) GetState() []HardwareState {
	if x != nil {
		return x.State
	}
	return nil
}

type Host struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name           string        `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	AllocName      string        `protobuf:"bytes,3,opt,name=alloc_name,json=allocName,proto3" json:"alloc_name,omitempty"`
	NimbyEnabled   bool          `protobuf:"varint,4,opt,name=nimby_enabled,json=nimbyEnabled,proto3" json:"nimby_enabled,omitempty"`
	HasComment     bool          `protobuf:"varint,5,opt,name=has_comment,json=hasComment,proto3" json:"has_comment,omitempty"`
	Cores          float32       `protobuf:"fixed32,6,opt,name=cores,proto3" json:"cores,omitempty"`
	IdleCores      float32       `protobuf:"fixed32,7,opt,name=idle_cores,json=idleCores,proto3" json:"idle_cores,omitempty"`
	Memory         int64         `protobuf:"varint,8,opt,name=memory,proto3" json:"memory,omitempty"`
	IdleMemory     int64         `protobuf:"varint,9,opt,name=idle_memory,json=idleMemory,proto3" json:"idle_memory,omitempty"`
	GpuMemory      int64         `protobuf:"varint,10,opt,name=gpu_memory,json=gpuMemory,proto3" json:"gpu_memory,omitempty"`
	IdleGpuMemory  int64         `protobuf:"varint,11,opt,name=idle_gpu_memory,json=idleGpuMemory,proto3" json:"idle_gpu_memory,omitempty"`
	TotalSwap      int64         `protobuf:"varint,12,opt,name=total_swap,json=totalSwap,proto3" json:"total_swap,omitempty"`
	TotalMemory    int64         `protobuf:"varint,13,opt,name=total_memory,json=totalMemory,proto3" json:"total_memory,omitempty"`
	TotalGpuMemory int64         `protobuf:"varint,14,opt,name=total_gpu_memory,json=totalGpuMemory,proto3" json:"total_gpu_memory,omitempty"`
	TotalMcp       int64         `protobuf:"varint,15,opt,name=total_mcp,json=totalMcp,proto3" json:"total_mcp,omitempty"`
	FreeSwap       int64         `protobuf:"varint,16,opt,name=free_swap,json=freeSwap,proto3" json:"free_swap,omitempty"`
	FreeMemory     int64         `protobuf:"varint,17,opt,name=free_memory,json=freeMemory,proto3" json:"free_memory,omitempty"`
	FreeMcp        int64         `protobuf:"varint,18,opt,name=free_mcp,json=freeMcp,proto3" json:"free_mcp,omitempty"`
	FreeGpuMemory  int64         `protobuf:"varint,19,opt,name=free_gpu_memory,json=freeGpuMemory,proto3" json:"free_gpu_memory,omitempty"`
	Load           int32         `protobuf:"varint,20,opt,name=load,proto3" json:"load,omitempty"`
	BootTime       int32         `protobuf:"varint,21,opt,name=boot_time,json=bootTime,proto3" json:"boot_time,omitempty"`
	PingTime       int32         `protobuf:"varint,22,opt,name=ping_time,json=pingTime,proto3" json:"ping_time,omitempty"`
	Os             string        `protobuf:"bytes,23,opt,name=os,proto3" json:"os,omitempty"`
	Tags           []string      `protobuf:"bytes,24,rep,name=tags,proto3" json:"tags,omitempty"`
	State          HardwareState `protobuf:"varint,25,opt,name=state,proto3,enum=host.HardwareState" json:"state,omitempty"`
	LockState      LockState     `protobuf:"varint,26,opt,name=lock_state,json=lockState,proto3,enum=host.LockState" json:"lock_state,omitempty"`
	ThreadMode     ThreadMode    `protobuf:"varint,27,opt,name=thread_mode,json=threadMode,proto3,enum=host.ThreadMode" json:"thread_mode,omitempty"`
	Gpus           float32       `protobuf:"fixed32,28,opt,name=gpus,proto3" json:"gpus,omitempty"`
	IdleGpus       float32       `protobuf:"fixed32,29,opt,name=idle_gpus,json=idleGpus,proto3" json:"idle_gpus,omitempty"`
}

func (x *Host) Reset() {
	*x = Host{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Host) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Host) ProtoMessage() {}

func (x *Host) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Host.ProtoReflect.Descriptor instead.
func (*Host) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{3}
}

func (x *Host) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Host) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Host) GetAllocName() string {
	if x != nil {
		return x.AllocName
	}
	return ""
}

func (x *Host) GetNimbyEnabled() bool {
	if x != nil {
		return x.NimbyEnabled
	}
	return false
}

func (x *Host) GetHasComment() bool {
	if x != nil {
		return x.HasComment
	}
	return false
}

func (x *Host) GetCores() float32 {
	if x != nil {
		return x.Cores
	}
	return 0
}

func (x *Host) GetIdleCores() float32 {
	if x != nil {
		return x.IdleCores
	}
	return 0
}

func (x *Host) GetMemory() int64 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *Host) GetIdleMemory() int64 {
	if x != nil {
		return x.IdleMemory
	}
	return 0
}

func (x *Host) GetGpuMemory() int64 {
	if x != nil {
		return x.GpuMemory
	}
	return 0
}

func (x *Host) GetIdleGpuMemory() int64 {
	if x != nil {
		return x.IdleGpuMemory
	}
	return 0
}

func (x *Host) GetTotalSwap() int64 {
	if x != nil {
		return x.TotalSwap
	}
	return 0
}

func (x *Host) GetTotalMemory() int64 {
	if x != nil {
		return x.TotalMemory
	}
	return 0
}

func (x *Host) GetTotalGpuMemory() int64 {
	if x != nil {
		return x.TotalGpuMemory
	}
	return 0
}

func (x *Host) GetTotalMcp() int64 {
	if x != nil {
		return x.TotalMcp
	}
	return 0
}

func (x *Host) GetFreeSwap() int64 {
	if x != nil {
		return x.FreeSwap
	}
	return 0
}

func (x *Host) GetFreeMemory() int64 {
	if x != nil {
		return x.FreeMemory
	}
	return 0
}

func (x *Host) GetFreeMcp() int64 {
	if x != nil {
		return x.FreeMcp
	}
	return 0
}

func (x *Host) GetFreeGpuMemory() int64 {
	if x != nil {
		return x.FreeGpuMemory
	}
	return 0
}

func (x *Host) GetLoad() int32 {
	if x != nil {
		return x.Load
	}
	return 0
}

func (x *Host) GetBootTime() int32 {
	if x != nil {
		return x.BootTime
	}
	return 0
}

func (x *Host) GetPingTime() int32 {
	if x != nil {
		return x.PingTime
	}
	return 0
}

func (x *Host) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *Host) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Host) GetState() HardwareState {
	if x != nil {
		return x.State
	}
	return HardwareState_UP
}

func (x *Host) GetLockState() LockState {
	if x != nil {
		return x.LockState
	}
	return LockState_OPEN
}

func (x *Host) GetThreadMode() ThreadMode {
	if x != nil {
		return x.ThreadMode
	}
	return ThreadMode_AUTO
}

func (x *Host) GetGpus() float32 {
	if x != nil {
		return x.Gpus
	}
	return 0
}

func (x *Host) GetIdleGpus() float32 {
	if x != nil {
		return x.IdleGpus
	}
	return 0
}

type HostSearchCriteria struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hosts  []string          `protobuf:"bytes,1,rep,name=hosts,proto3" json:"hosts,omitempty"`
	Regex  []string          `protobuf:"bytes,2,rep,name=regex,proto3" json:"regex,omitempty"`
	Substr []string          `protobuf:"bytes,3,rep,name=substr,proto3" json:"substr,omitempty"`
	Ids    []string          `protobuf:"bytes,4,rep,name=ids,proto3" json:"ids,omitempty"`
	Allocs []string          `protobuf:"bytes,5,rep,name=allocs,proto3" json:"allocs,omitempty"`
	States *HardwareStateSeq `protobuf:"bytes,6,opt,name=states,proto3" json:"states,omitempty"`
}

func (x *HostSearchCriteria) Reset() {
	*x = HostSearchCriteria{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostSearchCriteria) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostSearchCriteria) ProtoMessage() {}

func (x *HostSearchCriteria) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostSearchCriteria.ProtoReflect.Descriptor instead.
func (*HostSearchCriteria) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{4}
}

func (x *HostSearchCriteria) GetHosts() []string {
	if x != nil {
		return x.Hosts
	}
	return nil
}

func (x *HostSearchCriteria) GetRegex() []string {
	if x != nil {
		return x.Regex
	}
	return nil
}

func (x *HostSearchCriteria) GetSubstr() []string {
	if x != nil {
		return x.Substr
	}
	return nil
}

func (x *HostSearchCriteria) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *HostSearchCriteria) GetAllocs() []string {
	if x != nil {
		return x.Allocs
	}
	return nil
}

func (x *HostSearchCriteria) GetStates() *HardwareStateSeq {
	if x != nil {
		return x.States
	}
	return nil
}

type HostSeq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hosts []*Host `protobuf:"bytes,1,rep,name=hosts,proto3" json:"hosts,omitempty"`
}

func (x *HostSeq) Reset() {
	*x = HostSeq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostSeq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostSeq) ProtoMessage() {}

func (x *HostSeq) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostSeq.ProtoReflect.Descriptor instead.
func (*HostSeq) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{5}
}

func (x *HostSeq) GetHosts() []*Host {
	if x != nil {
		return x.Hosts
	}
	return nil
}

type NestedHost struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name           string         `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	AllocName      string         `protobuf:"bytes,3,opt,name=alloc_name,json=allocName,proto3" json:"alloc_name,omitempty"`
	NimbyEnabled   bool           `protobuf:"varint,4,opt,name=nimby_enabled,json=nimbyEnabled,proto3" json:"nimby_enabled,omitempty"`
	HasComment     bool           `protobuf:"varint,5,opt,name=has_comment,json=hasComment,proto3" json:"has_comment,omitempty"`
	Cores          float32        `protobuf:"fixed32,6,opt,name=cores,proto3" json:"cores,omitempty"`
	IdleCores      float32        `protobuf:"fixed32,7,opt,name=idle_cores,json=idleCores,proto3" json:"idle_cores,omitempty"`
	Memory         int64          `protobuf:"varint,8,opt,name=memory,proto3" json:"memory,omitempty"`
	IdleMemory     int64          `protobuf:"varint,9,opt,name=idle_memory,json=idleMemory,proto3" json:"idle_memory,omitempty"`
	GpuMemory      int64          `protobuf:"varint,10,opt,name=gpu_memory,json=gpuMemory,proto3" json:"gpu_memory,omitempty"`
	IdleGpuMemory  int64          `protobuf:"varint,11,opt,name=idle_gpu_memory,json=idleGpuMemory,proto3" json:"idle_gpu_memory,omitempty"`
	TotalSwap      int64          `protobuf:"varint,12,opt,name=total_swap,json=totalSwap,proto3" json:"total_swap,omitempty"`
	TotalMemory    int64          `protobuf:"varint,13,opt,name=total_memory,json=totalMemory,proto3" json:"total_memory,omitempty"`
	TotalGpuMemory int64          `protobuf:"varint,14,opt,name=total_gpu_memory,json=totalGpuMemory,proto3" json:"total_gpu_memory,omitempty"`
	TotalMcp       int64          `protobuf:"varint,15,opt,name=total_mcp,json=totalMcp,proto3" json:"total_mcp,omitempty"`
	FreeSwap       int64          `protobuf:"varint,16,opt,name=free_swap,json=freeSwap,proto3" json:"free_swap,omitempty"`
	FreeMemory     int64          `protobuf:"varint,17,opt,name=free_memory,json=freeMemory,proto3" json:"free_memory,omitempty"`
	FreeMcp        int64          `protobuf:"varint,18,opt,name=free_mcp,json=freeMcp,proto3" json:"free_mcp,omitempty"`
	FreeGpuMemory  int64          `protobuf:"varint,19,opt,name=free_gpu_memory,json=freeGpuMemory,proto3" json:"free_gpu_memory,omitempty"`
	Load           int32          `protobuf:"varint,20,opt,name=load,proto3" json:"load,omitempty"`
	BootTime       int32          `protobuf:"varint,21,opt,name=boot_time,json=bootTime,proto3" json:"boot_time,omitempty"`
	PingTime       int32          `protobuf:"varint,22,opt,name=ping_time,json=pingTime,proto3" json:"ping_time,omitempty"`
	Os             string         `protobuf:"bytes,23,opt,name=os,proto3" json:"os,omitempty"`
	Tags           []string       `protobuf:"bytes,24,rep,name=tags,proto3" json:"tags,omitempty"`
	State          HardwareState  `protobuf:"varint,25,opt,name=state,proto3,enum=host.HardwareState" json:"state,omitempty"`
	LockState      LockState      `protobuf:"varint,26,opt,name=lock_state,json=lockState,proto3,enum=host.LockState" json:"lock_state,omitempty"`
	ThreadMode     ThreadMode     `protobuf:"varint,27,opt,name=thread_mode,json=threadMode,proto3,enum=host.ThreadMode" json:"thread_mode,omitempty"`
	Procs          *NestedProcSeq `protobuf:"bytes,28,opt,name=procs,proto3" json:"procs,omitempty"`
	Gpus           float32        `protobuf:"fixed32,29,opt,name=gpus,proto3" json:"gpus,omitempty"`
	IdleGpus       float32        `protobuf:"fixed32,30,opt,name=idle_gpus,json=idleGpus,proto3" json:"idle_gpus,omitempty"`
}

func (x *NestedHost) Reset() {
	*x = NestedHost{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NestedHost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NestedHost) ProtoMessage() {}

func (x *NestedHost) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NestedHost.ProtoReflect.Descriptor instead.
func (*NestedHost) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{6}
}

func (x *NestedHost) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *NestedHost) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NestedHost) GetAllocName() string {
	if x != nil {
		return x.AllocName
	}
	return ""
}

func (x *NestedHost) GetNimbyEnabled() bool {
	if x != nil {
		return x.NimbyEnabled
	}
	return false
}

func (x *NestedHost) GetHasComment() bool {
	if x != nil {
		return x.HasComment
	}
	return false
}

func (x *NestedHost) GetCores() float32 {
	if x != nil {
		return x.Cores
	}
	return 0
}

func (x *NestedHost) GetIdleCores() float32 {
	if x != nil {
		return x.IdleCores
	}
	return 0
}

func (x *NestedHost) GetMemory() int64 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *NestedHost) GetIdleMemory() int64 {
	if x != nil {
		return x.IdleMemory
	}
	return 0
}

func (x *NestedHost) GetGpuMemory() int64 {
	if x != nil {
		return x.GpuMemory
	}
	return 0
}

func (x *NestedHost) GetIdleGpuMemory() int64 {
	if x != nil {
		return x.IdleGpuMemory
	}
	return 0
}

func (x *NestedHost) GetTotalSwap() int64 {
	if x != nil {
		return x.TotalSwap
	}
	return 0
}

func (x *NestedHost) GetTotalMemory() int64 {
	if x != nil {
		return x.TotalMemory
	}
	return 0
}

func (x *NestedHost) GetTotalGpuMemory() int64 {
	if x != nil {
		return x.TotalGpuMemory
	}
	return 0
}

func (x *NestedHost) GetTotalMcp() int64 {
	if x != nil {
		return x.TotalMcp
	}
	return 0
}

func (x *NestedHost) GetFreeSwap() int64 {
	if x != nil {
		return x.FreeSwap
	}
	return 0
}

func (x *NestedHost) GetFreeMemory() int64 {
	if x != nil {
		return x.FreeMemory
	}
	return 0
}

func (x *NestedHost) GetFreeMcp() int64 {
	if x != nil {
		return x.FreeMcp
	}
	return 0
}

func (x *NestedHost) GetFreeGpuMemory() int64 {
	if x != nil {
		return x.FreeGpuMemory
	}
	return 0
}

func (x *NestedHost) GetLoad() int32 {
	if x != nil {
		return x.Load
	}
	return 0
}

func (x *NestedHost) GetBootTime() int32 {
	if x != nil {
		return x.BootTime
	}
	return 0
}

func (x *NestedHost) GetPingTime() int32 {
	if x != nil {
		return x.PingTime
	}
	return 0
}

func (x *NestedHost) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *NestedHost) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *NestedHost) GetState() HardwareState {
	if x != nil {
		return x.State
	}
	return HardwareState_UP
}

func (x *NestedHost) GetLockState() LockState {
	if x != nil {
		return x.LockState
	}
	return LockState_OPEN
}

func (x *NestedHost) GetThreadMode() ThreadMode {
	if x != nil {
		return x.ThreadMode
	}
	return ThreadMode_AUTO
}

func (x *NestedHost) GetProcs() *NestedProcSeq {
	if x != nil {
		return x.Procs
	}
	return nil
}

func (x *NestedHost) GetGpus() float32 {
	if x != nil {
		return x.Gpus
	}
	return 0
}

func (x *NestedHost) GetIdleGpus() float32 {
	if x != nil {
		return x.IdleGpus
	}
	return 0
}

type NestedHostSeq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NestedHosts []*NestedHost `protobuf:"bytes,1,rep,name=nested_hosts,json=nestedHosts,proto3" json:"nested_hosts,omitempty"`
}

func (x *NestedHostSeq) Reset() {
	*x = NestedHostSeq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NestedHostSeq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NestedHostSeq) ProtoMessage() {}

func (x *NestedHostSeq) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NestedHostSeq.ProtoReflect.Descriptor instead.
func (*NestedHostSeq) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{7}
}

func (x *NestedHostSeq) GetNestedHosts() []*NestedHost {
	if x != nil {
		return x.NestedHosts
	}
	return nil
}

type NestedProc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name              string      `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ShowName          string      `protobuf:"bytes,3,opt,name=show_name,json=showName,proto3" json:"show_name,omitempty"`
	JobName           string      `protobuf:"bytes,4,opt,name=job_name,json=jobName,proto3" json:"job_name,omitempty"`
	FrameName         string      `protobuf:"bytes,5,opt,name=frame_name,json=frameName,proto3" json:"frame_name,omitempty"`
	GroupName         string      `protobuf:"bytes,6,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
	PingTime          int32       `protobuf:"varint,7,opt,name=ping_time,json=pingTime,proto3" json:"ping_time,omitempty"`
	BookedTime        int32       `protobuf:"varint,8,opt,name=bookedTime,proto3" json:"bookedTime,omitempty"`
	DispatchTime      int32       `protobuf:"varint,9,opt,name=dispatch_time,json=dispatchTime,proto3" json:"dispatch_time,omitempty"`
	ReservedMemory    int64       `protobuf:"varint,10,opt,name=reserved_memory,json=reservedMemory,proto3" json:"reserved_memory,omitempty"`
	ReservedGpuMemory int64       `protobuf:"varint,11,opt,name=reserved_gpu_memory,json=reservedGpuMemory,proto3" json:"reserved_gpu_memory,omitempty"`
	UsedMemory        int64       `protobuf:"varint,12,opt,name=used_memory,json=usedMemory,proto3" json:"used_memory,omitempty"`
	ReservedCores     float32     `protobuf:"fixed32,13,opt,name=reserved_cores,json=reservedCores,proto3" json:"reserved_cores,omitempty"`
	Unbooked          bool        `protobuf:"varint,14,opt,name=unbooked,proto3" json:"unbooked,omitempty"`
	LogPath           string      `protobuf:"bytes,15,opt,name=log_path,json=logPath,proto3" json:"log_path,omitempty"`
	RedirectTarget    string      `protobuf:"bytes,16,opt,name=redirect_target,json=redirectTarget,proto3" json:"redirect_target,omitempty"`
	Services          []string    `protobuf:"bytes,17,rep,name=services,proto3" json:"services,omitempty"`
	Parent            *NestedHost `protobuf:"bytes,18,opt,name=parent,proto3" json:"parent,omitempty"`
	UsedGpuMemory     int64       `protobuf:"varint,19,opt,name=used_gpu_memory,json=usedGpuMemory,proto3" json:"used_gpu_memory,omitempty"`
	ReservedGpus      float32     `protobuf:"fixed32,20,opt,name=reserved_gpus,json=reservedGpus,proto3" json:"reserved_gpus,omitempty"`
}

func (x *NestedProc) Reset() {
	*x = NestedProc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NestedProc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NestedProc) ProtoMessage() {}

func (x *NestedProc) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NestedProc.ProtoReflect.Descriptor instead.
func (*NestedProc) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{8}
}

func (x *NestedProc) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *NestedProc) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NestedProc) GetShowName() string {
	if x != nil {
		return x.ShowName
	}
	return ""
}

func (x *NestedProc) GetJobName() string {
	if x != nil {
		return x.JobName
	}
	return ""
}

func (x *NestedProc) GetFrameName() string {
	if x != nil {
		return x.FrameName
	}
	return ""
}

func (x *NestedProc) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *NestedProc) GetPingTime() int32 {
	if x != nil {
		return x.PingTime
	}
	return 0
}

func (x *NestedProc) GetBookedTime() int32 {
	if x != nil {
		return x.BookedTime
	}
	return 0
}

func (x *NestedProc) GetDispatchTime() int32 {
	if x != nil {
		return x.DispatchTime
	}
	return 0
}

func (x *NestedProc) GetReservedMemory() int64 {
	if x != nil {
		return x.ReservedMemory
	}
	return 0
}

func (x *NestedProc) GetReservedGpuMemory() int64 {
	if x != nil {
		return x.ReservedGpuMemory
	}
	return 0
}

func (x *NestedProc) GetUsedMemory() int64 {
	if x != nil {
		return x.UsedMemory
	}
	return 0
}

func (x *NestedProc) GetReservedCores() float32 {
	if x != nil {
		return x.ReservedCores
	}
	return 0
}

func (x *NestedProc) GetUnbooked() bool {
	if x != nil {
		return x.Unbooked
	}
	return false
}

func (x *NestedProc) GetLogPath() string {
	if x != nil {
		return x.LogPath
	}
	return ""
}

func (x *NestedProc) GetRedirectTarget() string {
	if x != nil {
		return x.RedirectTarget
	}
	return ""
}

func (x *NestedProc) GetServices() []string {
	if x != nil {
		return x.Services
	}
	return nil
}

func (x *NestedProc) GetParent() *NestedHost {
	if x != nil {
		return x.Parent
	}
	return nil
}

func (x *NestedProc) GetUsedGpuMemory() int64 {
	if x != nil {
		return x.UsedGpuMemory
	}
	return 0
}

func (x *NestedProc) GetReservedGpus() float32 {
	if x != nil {
		return x.ReservedGpus
	}
	return 0
}

type NestedProcSeq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NestedProcs []*NestedProc `protobuf:"bytes,1,rep,name=nested_procs,json=nestedProcs,proto3" json:"nested_procs,omitempty"`
}

func (x *NestedProcSeq) Reset() {
	*x = NestedProcSeq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NestedProcSeq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NestedProcSeq) ProtoMessage() {}

func (x *NestedProcSeq) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NestedProcSeq.ProtoReflect.Descriptor instead.
func (*NestedProcSeq) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{9}
}

func (x *NestedProcSeq) GetNestedProcs() []*NestedProc {
	if x != nil {
		return x.NestedProcs
	}
	return nil
}

type Owner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Show      string `protobuf:"bytes,3,opt,name=show,proto3" json:"show,omitempty"`
	HostCount int32  `protobuf:"varint,4,opt,name=host_count,json=hostCount,proto3" json:"host_count,omitempty"`
}

func (x *Owner) Reset() {
	*x = Owner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Owner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Owner) ProtoMessage() {}

func (x *Owner) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Owner.ProtoReflect.Descriptor instead.
func (*Owner) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{10}
}

func (x *Owner) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Owner) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Owner) GetShow() string {
	if x != nil {
		return x.Show
	}
	return ""
}

func (x *Owner) GetHostCount() int32 {
	if x != nil {
		return x.HostCount
	}
	return 0
}

type Proc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name              string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ShowName          string   `protobuf:"bytes,3,opt,name=show_name,json=showName,proto3" json:"show_name,omitempty"`
	JobName           string   `protobuf:"bytes,4,opt,name=job_name,json=jobName,proto3" json:"job_name,omitempty"`
	FrameName         string   `protobuf:"bytes,5,opt,name=frame_name,json=frameName,proto3" json:"frame_name,omitempty"`
	GroupName         string   `protobuf:"bytes,6,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
	PingTime          int32    `protobuf:"varint,7,opt,name=ping_time,json=pingTime,proto3" json:"ping_time,omitempty"`
	BookedTime        int32    `protobuf:"varint,8,opt,name=bookedTime,proto3" json:"bookedTime,omitempty"`
	DispatchTime      int32    `protobuf:"varint,9,opt,name=dispatch_time,json=dispatchTime,proto3" json:"dispatch_time,omitempty"`
	ReservedMemory    int64    `protobuf:"varint,10,opt,name=reserved_memory,json=reservedMemory,proto3" json:"reserved_memory,omitempty"`
	ReservedGpuMemory int64    `protobuf:"varint,11,opt,name=reserved_gpu_memory,json=reservedGpuMemory,proto3" json:"reserved_gpu_memory,omitempty"`
	UsedMemory        int64    `protobuf:"varint,12,opt,name=used_memory,json=usedMemory,proto3" json:"used_memory,omitempty"`
	ReservedCores     float32  `protobuf:"fixed32,13,opt,name=reserved_cores,json=reservedCores,proto3" json:"reserved_cores,omitempty"`
	Unbooked          bool     `protobuf:"varint,14,opt,name=unbooked,proto3" json:"unbooked,omitempty"`
	LogPath           string   `protobuf:"bytes,15,opt,name=log_path,json=logPath,proto3" json:"log_path,omitempty"`
	RedirectTarget    string   `protobuf:"bytes,16,opt,name=redirect_target,json=redirectTarget,proto3" json:"redirect_target,omitempty"`
	Services          []string `protobuf:"bytes,17,rep,name=services,proto3" json:"services,omitempty"`
	UsedGpuMemory     int64    `protobuf:"varint,18,opt,name=used_gpu_memory,json=usedGpuMemory,proto3" json:"used_gpu_memory,omitempty"`
	ReservedGpus      float32  `protobuf:"fixed32,19,opt,name=reserved_gpus,json=reservedGpus,proto3" json:"reserved_gpus,omitempty"`
	ChildProcesses    []byte   `protobuf:"bytes,20,opt,name=child_processes,json=childProcesses,proto3" json:"child_processes,omitempty"`
}

func (x *Proc) Reset() {
	*x = Proc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Proc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Proc) ProtoMessage() {}

func (x *Proc) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Proc.ProtoReflect.Descriptor instead.
func (*Proc) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{11}
}

func (x *Proc) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Proc) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Proc) GetShowName() string {
	if x != nil {
		return x.ShowName
	}
	return ""
}

func (x *Proc) GetJobName() string {
	if x != nil {
		return x.JobName
	}
	return ""
}

func (x *Proc) GetFrameName() string {
	if x != nil {
		return x.FrameName
	}
	return ""
}

func (x *Proc) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *Proc) GetPingTime() int32 {
	if x != nil {
		return x.PingTime
	}
	return 0
}

func (x *Proc) GetBookedTime() int32 {
	if x != nil {
		return x.BookedTime
	}
	return 0
}

func (x *Proc) GetDispatchTime() int32 {
	if x != nil {
		return x.DispatchTime
	}
	return 0
}

func (x *Proc) GetReservedMemory() int64 {
	if x != nil {
		return x.ReservedMemory
	}
	return 0
}

func (x *Proc) GetReservedGpuMemory() int64 {
	if x != nil {
		return x.ReservedGpuMemory
	}
	return 0
}

func (x *Proc) GetUsedMemory() int64 {
	if x != nil {
		return x.UsedMemory
	}
	return 0
}

func (x *Proc) GetReservedCores() float32 {
	if x != nil {
		return x.ReservedCores
	}
	return 0
}

func (x *Proc) GetUnbooked() bool {
	if x != nil {
		return x.Unbooked
	}
	return false
}

func (x *Proc) GetLogPath() string {
	if x != nil {
		return x.LogPath
	}
	return ""
}

func (x *Proc) GetRedirectTarget() string {
	if x != nil {
		return x.RedirectTarget
	}
	return ""
}

func (x *Proc) GetServices() []string {
	if x != nil {
		return x.Services
	}
	return nil
}

func (x *Proc) GetUsedGpuMemory() int64 {
	if x != nil {
		return x.UsedGpuMemory
	}
	return 0
}

func (x *Proc) GetReservedGpus() float32 {
	if x != nil {
		return x.ReservedGpus
	}
	return 0
}

func (x *Proc) GetChildProcesses() []byte {
	if x != nil {
		return x.ChildProcesses
	}
	return nil
}

type ProcSearchCriteria struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// An array of host names to match.
	Hosts []string `protobuf:"bytes,1,rep,name=hosts,proto3" json:"hosts,omitempty"`
	// An array of job names to match.
	Jobs []string `protobuf:"bytes,2,rep,name=jobs,proto3" json:"jobs,omitempty"`
	// An array of layer names to match.
	Layers []string `protobuf:"bytes,3,rep,name=layers,proto3" json:"layers,omitempty"`
	// An array of show names to match.
	Shows []string `protobuf:"bytes,4,rep,name=shows,proto3" json:"shows,omitempty"`
	// An array of allocation names to match.
	Allocs []string `protobuf:"bytes,5,rep,name=allocs,proto3" json:"allocs,omitempty"`
	// A range of memory usage. Values are in KB.
	MemoryRange []*criterion.InRangeIntegerSearchCriterion `protobuf:"bytes,6,rep,name=memory_range,json=memoryRange,proto3" json:"memory_range,omitempty"`
	// A duration range. Values are in seconds.
	DurationRange []*criterion.InRangeIntegerSearchCriterion `protobuf:"bytes,7,rep,name=duration_range,json=durationRange,proto3" json:"duration_range,omitempty"`
	// The maximum number of results.
	MaxResults []int32 `protobuf:"varint,8,rep,packed,name=max_results,json=maxResults,proto3" json:"max_results,omitempty"`
	// The offset of the first result.
	FirstResult int32 `protobuf:"varint,9,opt,name=first_result,json=firstResult,proto3" json:"first_result,omitempty"`
}

func (x *ProcSearchCriteria) Reset() {
	*x = ProcSearchCriteria{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcSearchCriteria) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcSearchCriteria) ProtoMessage() {}

func (x *ProcSearchCriteria) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcSearchCriteria.ProtoReflect.Descriptor instead.
func (*ProcSearchCriteria) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{12}
}

func (x *ProcSearchCriteria) GetHosts() []string {
	if x != nil {
		return x.Hosts
	}
	return nil
}

func (x *ProcSearchCriteria) GetJobs() []string {
	if x != nil {
		return x.Jobs
	}
	return nil
}

func (x *ProcSearchCriteria) GetLayers() []string {
	if x != nil {
		return x.Layers
	}
	return nil
}

func (x *ProcSearchCriteria) GetShows() []string {
	if x != nil {
		return x.Shows
	}
	return nil
}

func (x *ProcSearchCriteria) GetAllocs() []string {
	if x != nil {
		return x.Allocs
	}
	return nil
}

func (x *ProcSearchCriteria) GetMemoryRange() []*criterion.InRangeIntegerSearchCriterion {
	if x != nil {
		return x.MemoryRange
	}
	return nil
}

func (x *ProcSearchCriteria) GetDurationRange() []*criterion.InRangeIntegerSearchCriterion {
	if x != nil {
		return x.DurationRange
	}
	return nil
}

func (x *ProcSearchCriteria) GetMaxResults() []int32 {
	if x != nil {
		return x.MaxResults
	}
	return nil
}

func (x *ProcSearchCriteria) GetFirstResult() int32 {
	if x != nil {
		return x.FirstResult
	}
	return 0
}

type ProcSeq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Procs []*Proc `protobuf:"bytes,1,rep,name=procs,proto3" json:"procs,omitempty"`
}

func (x *ProcSeq) Reset() {
	*x = ProcSeq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcSeq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcSeq) ProtoMessage() {}

func (x *ProcSeq) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcSeq.ProtoReflect.Descriptor instead.
func (*ProcSeq) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{13}
}

func (x *ProcSeq) GetProcs() []*Proc {
	if x != nil {
		return x.Procs
	}
	return nil
}

// DEED ----
// Delete
type DeedDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Deed *Deed `protobuf:"bytes,1,opt,name=deed,proto3" json:"deed,omitempty"`
}

func (x *DeedDeleteRequest) Reset() {
	*x = DeedDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeedDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeedDeleteRequest) ProtoMessage() {}

func (x *DeedDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeedDeleteRequest.ProtoReflect.Descriptor instead.
func (*DeedDeleteRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{14}
}

func (x *DeedDeleteRequest) GetDeed() *Deed {
	if x != nil {
		return x.Deed
	}
	return nil
}

type DeedDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeedDeleteResponse) Reset() {
	*x = DeedDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeedDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeedDeleteResponse) ProtoMessage() {}

func (x *DeedDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeedDeleteResponse.ProtoReflect.Descriptor instead.
func (*DeedDeleteResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{15}
}

// GetHost
type DeedGetHostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Deed *Deed `protobuf:"bytes,1,opt,name=deed,proto3" json:"deed,omitempty"`
}

func (x *DeedGetHostRequest) Reset() {
	*x = DeedGetHostRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeedGetHostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeedGetHostRequest) ProtoMessage() {}

func (x *DeedGetHostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeedGetHostRequest.ProtoReflect.Descriptor instead.
func (*DeedGetHostRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{16}
}

func (x *DeedGetHostRequest) GetDeed() *Deed {
	if x != nil {
		return x.Deed
	}
	return nil
}

type DeedGetHostResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host *Host `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
}

func (x *DeedGetHostResponse) Reset() {
	*x = DeedGetHostResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeedGetHostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeedGetHostResponse) ProtoMessage() {}

func (x *DeedGetHostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeedGetHostResponse.ProtoReflect.Descriptor instead.
func (*DeedGetHostResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{17}
}

func (x *DeedGetHostResponse) GetHost() *Host {
	if x != nil {
		return x.Host
	}
	return nil
}

// GetOwner
type DeedGetOwnerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Deed *Deed `protobuf:"bytes,1,opt,name=deed,proto3" json:"deed,omitempty"`
}

func (x *DeedGetOwnerRequest) Reset() {
	*x = DeedGetOwnerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeedGetOwnerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeedGetOwnerRequest) ProtoMessage() {}

func (x *DeedGetOwnerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeedGetOwnerRequest.ProtoReflect.Descriptor instead.
func (*DeedGetOwnerRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{18}
}

func (x *DeedGetOwnerRequest) GetDeed() *Deed {
	if x != nil {
		return x.Deed
	}
	return nil
}

type DeedGetOwnerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Owner *Owner `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
}

func (x *DeedGetOwnerResponse) Reset() {
	*x = DeedGetOwnerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeedGetOwnerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeedGetOwnerResponse) ProtoMessage() {}

func (x *DeedGetOwnerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeedGetOwnerResponse.ProtoReflect.Descriptor instead.
func (*DeedGetOwnerResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{19}
}

func (x *DeedGetOwnerResponse) GetOwner() *Owner {
	if x != nil {
		return x.Owner
	}
	return nil
}

// HOST ----
// AddComment
type HostAddCommentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host       *Host            `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	NewComment *comment.Comment `protobuf:"bytes,2,opt,name=new_comment,json=newComment,proto3" json:"new_comment,omitempty"`
}

func (x *HostAddCommentRequest) Reset() {
	*x = HostAddCommentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostAddCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostAddCommentRequest) ProtoMessage() {}

func (x *HostAddCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostAddCommentRequest.ProtoReflect.Descriptor instead.
func (*HostAddCommentRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{20}
}

func (x *HostAddCommentRequest) GetHost() *Host {
	if x != nil {
		return x.Host
	}
	return nil
}

func (x *HostAddCommentRequest) GetNewComment() *comment.Comment {
	if x != nil {
		return x.NewComment
	}
	return nil
}

type HostAddCommentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HostAddCommentResponse) Reset() {
	*x = HostAddCommentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostAddCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostAddCommentResponse) ProtoMessage() {}

func (x *HostAddCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostAddCommentResponse.ProtoReflect.Descriptor instead.
func (*HostAddCommentResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{21}
}

// AddTags
type HostAddTagsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host *Host    `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Tags []string `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *HostAddTagsRequest) Reset() {
	*x = HostAddTagsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostAddTagsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostAddTagsRequest) ProtoMessage() {}

func (x *HostAddTagsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostAddTagsRequest.ProtoReflect.Descriptor instead.
func (*HostAddTagsRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{22}
}

func (x *HostAddTagsRequest) GetHost() *Host {
	if x != nil {
		return x.Host
	}
	return nil
}

func (x *HostAddTagsRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type HostAddTagsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HostAddTagsResponse) Reset() {
	*x = HostAddTagsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostAddTagsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostAddTagsResponse) ProtoMessage() {}

func (x *HostAddTagsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostAddTagsResponse.ProtoReflect.Descriptor instead.
func (*HostAddTagsResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{23}
}

// Delete
type HostDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host *Host `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
}

func (x *HostDeleteRequest) Reset() {
	*x = HostDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostDeleteRequest) ProtoMessage() {}

func (x *HostDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostDeleteRequest.ProtoReflect.Descriptor instead.
func (*HostDeleteRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{24}
}

func (x *HostDeleteRequest) GetHost() *Host {
	if x != nil {
		return x.Host
	}
	return nil
}

type HostDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HostDeleteResponse) Reset() {
	*x = HostDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostDeleteResponse) ProtoMessage() {}

func (x *HostDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostDeleteResponse.ProtoReflect.Descriptor instead.
func (*HostDeleteResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{25}
}

// FindHost
type HostFindHostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *HostFindHostRequest) Reset() {
	*x = HostFindHostRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostFindHostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostFindHostRequest) ProtoMessage() {}

func (x *HostFindHostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostFindHostRequest.ProtoReflect.Descriptor instead.
func (*HostFindHostRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{26}
}

func (x *HostFindHostRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type HostFindHostResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host *Host `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
}

func (x *HostFindHostResponse) Reset() {
	*x = HostFindHostResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostFindHostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostFindHostResponse) ProtoMessage() {}

func (x *HostFindHostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostFindHostResponse.ProtoReflect.Descriptor instead.
func (*HostFindHostResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{27}
}

func (x *HostFindHostResponse) GetHost() *Host {
	if x != nil {
		return x.Host
	}
	return nil
}

// GetComments
type HostGetCommentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host *Host `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
}

func (x *HostGetCommentsRequest) Reset() {
	*x = HostGetCommentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostGetCommentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostGetCommentsRequest) ProtoMessage() {}

func (x *HostGetCommentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostGetCommentsRequest.ProtoReflect.Descriptor instead.
func (*HostGetCommentsRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{28}
}

func (x *HostGetCommentsRequest) GetHost() *Host {
	if x != nil {
		return x.Host
	}
	return nil
}

type HostGetCommentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Comments *comment.CommentSeq `protobuf:"bytes,1,opt,name=comments,proto3" json:"comments,omitempty"`
}

func (x *HostGetCommentsResponse) Reset() {
	*x = HostGetCommentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostGetCommentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostGetCommentsResponse) ProtoMessage() {}

func (x *HostGetCommentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostGetCommentsResponse.ProtoReflect.Descriptor instead.
func (*HostGetCommentsResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{29}
}

func (x *HostGetCommentsResponse) GetComments() *comment.CommentSeq {
	if x != nil {
		return x.Comments
	}
	return nil
}

// GetDeed
type HostGetDeedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host *Host `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
}

func (x *HostGetDeedRequest) Reset() {
	*x = HostGetDeedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostGetDeedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostGetDeedRequest) ProtoMessage() {}

func (x *HostGetDeedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostGetDeedRequest.ProtoReflect.Descriptor instead.
func (*HostGetDeedRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{30}
}

func (x *HostGetDeedRequest) GetHost() *Host {
	if x != nil {
		return x.Host
	}
	return nil
}

type HostGetDeedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Deed *Deed `protobuf:"bytes,1,opt,name=deed,proto3" json:"deed,omitempty"`
}

func (x *HostGetDeedResponse) Reset() {
	*x = HostGetDeedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostGetDeedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostGetDeedResponse) ProtoMessage() {}

func (x *HostGetDeedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostGetDeedResponse.ProtoReflect.Descriptor instead.
func (*HostGetDeedResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{31}
}

func (x *HostGetDeedResponse) GetDeed() *Deed {
	if x != nil {
		return x.Deed
	}
	return nil
}

// GetHost
type HostGetHostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *HostGetHostRequest) Reset() {
	*x = HostGetHostRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostGetHostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostGetHostRequest) ProtoMessage() {}

func (x *HostGetHostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostGetHostRequest.ProtoReflect.Descriptor instead.
func (*HostGetHostRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{32}
}

func (x *HostGetHostRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type HostGetHostResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host *Host `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
}

func (x *HostGetHostResponse) Reset() {
	*x = HostGetHostResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostGetHostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostGetHostResponse) ProtoMessage() {}

func (x *HostGetHostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostGetHostResponse.ProtoReflect.Descriptor instead.
func (*HostGetHostResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{33}
}

func (x *HostGetHostResponse) GetHost() *Host {
	if x != nil {
		return x.Host
	}
	return nil
}

// GetHosts
type HostGetHostsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	R *HostSearchCriteria `protobuf:"bytes,1,opt,name=r,proto3" json:"r,omitempty"`
}

func (x *HostGetHostsRequest) Reset() {
	*x = HostGetHostsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostGetHostsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostGetHostsRequest) ProtoMessage() {}

func (x *HostGetHostsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostGetHostsRequest.ProtoReflect.Descriptor instead.
func (*HostGetHostsRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{34}
}

func (x *HostGetHostsRequest) GetR() *HostSearchCriteria {
	if x != nil {
		return x.R
	}
	return nil
}

type HostGetHostsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hosts *HostSeq `protobuf:"bytes,1,opt,name=hosts,proto3" json:"hosts,omitempty"`
}

func (x *HostGetHostsResponse) Reset() {
	*x = HostGetHostsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostGetHostsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostGetHostsResponse) ProtoMessage() {}

func (x *HostGetHostsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostGetHostsResponse.ProtoReflect.Descriptor instead.
func (*HostGetHostsResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{35}
}

func (x *HostGetHostsResponse) GetHosts() *HostSeq {
	if x != nil {
		return x.Hosts
	}
	return nil
}

// GetHostWhiteboard
type HostGetHostWhiteboardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HostGetHostWhiteboardRequest) Reset() {
	*x = HostGetHostWhiteboardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostGetHostWhiteboardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostGetHostWhiteboardRequest) ProtoMessage() {}

func (x *HostGetHostWhiteboardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostGetHostWhiteboardRequest.ProtoReflect.Descriptor instead.
func (*HostGetHostWhiteboardRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{36}
}

type HostGetHostWhiteboardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NestedHosts *NestedHostSeq `protobuf:"bytes,1,opt,name=nested_hosts,json=nestedHosts,proto3" json:"nested_hosts,omitempty"`
}

func (x *HostGetHostWhiteboardResponse) Reset() {
	*x = HostGetHostWhiteboardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostGetHostWhiteboardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostGetHostWhiteboardResponse) ProtoMessage() {}

func (x *HostGetHostWhiteboardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostGetHostWhiteboardResponse.ProtoReflect.Descriptor instead.
func (*HostGetHostWhiteboardResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{37}
}

func (x *HostGetHostWhiteboardResponse) GetNestedHosts() *NestedHostSeq {
	if x != nil {
		return x.NestedHosts
	}
	return nil
}

// GetOwner
type HostGetOwnerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host *Host `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
}

func (x *HostGetOwnerRequest) Reset() {
	*x = HostGetOwnerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostGetOwnerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostGetOwnerRequest) ProtoMessage() {}

func (x *HostGetOwnerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostGetOwnerRequest.ProtoReflect.Descriptor instead.
func (*HostGetOwnerRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{38}
}

func (x *HostGetOwnerRequest) GetHost() *Host {
	if x != nil {
		return x.Host
	}
	return nil
}

type HostGetOwnerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Owner *Owner `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
}

func (x *HostGetOwnerResponse) Reset() {
	*x = HostGetOwnerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostGetOwnerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostGetOwnerResponse) ProtoMessage() {}

func (x *HostGetOwnerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostGetOwnerResponse.ProtoReflect.Descriptor instead.
func (*HostGetOwnerResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{39}
}

func (x *HostGetOwnerResponse) GetOwner() *Owner {
	if x != nil {
		return x.Owner
	}
	return nil
}

// GetProcs
type HostGetProcsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host *Host `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
}

func (x *HostGetProcsRequest) Reset() {
	*x = HostGetProcsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostGetProcsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostGetProcsRequest) ProtoMessage() {}

func (x *HostGetProcsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostGetProcsRequest.ProtoReflect.Descriptor instead.
func (*HostGetProcsRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{40}
}

func (x *HostGetProcsRequest) GetHost() *Host {
	if x != nil {
		return x.Host
	}
	return nil
}

type HostGetProcsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Procs *ProcSeq `protobuf:"bytes,1,opt,name=procs,proto3" json:"procs,omitempty"`
}

func (x *HostGetProcsResponse) Reset() {
	*x = HostGetProcsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostGetProcsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostGetProcsResponse) ProtoMessage() {}

func (x *HostGetProcsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostGetProcsResponse.ProtoReflect.Descriptor instead.
func (*HostGetProcsResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{41}
}

func (x *HostGetProcsResponse) GetProcs() *ProcSeq {
	if x != nil {
		return x.Procs
	}
	return nil
}

// GetRenderPartitions
type HostGetRenderPartitionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host *Host `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
}

func (x *HostGetRenderPartitionsRequest) Reset() {
	*x = HostGetRenderPartitionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostGetRenderPartitionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostGetRenderPartitionsRequest) ProtoMessage() {}

func (x *HostGetRenderPartitionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostGetRenderPartitionsRequest.ProtoReflect.Descriptor instead.
func (*HostGetRenderPartitionsRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{42}
}

func (x *HostGetRenderPartitionsRequest) GetHost() *Host {
	if x != nil {
		return x.Host
	}
	return nil
}

type HostGetRenderPartitionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RenderPartitions *renderPartition.RenderPartitionSeq `protobuf:"bytes,1,opt,name=render_partitions,json=renderPartitions,proto3" json:"render_partitions,omitempty"`
}

func (x *HostGetRenderPartitionsResponse) Reset() {
	*x = HostGetRenderPartitionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostGetRenderPartitionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostGetRenderPartitionsResponse) ProtoMessage() {}

func (x *HostGetRenderPartitionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostGetRenderPartitionsResponse.ProtoReflect.Descriptor instead.
func (*HostGetRenderPartitionsResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{43}
}

func (x *HostGetRenderPartitionsResponse) GetRenderPartitions() *renderPartition.RenderPartitionSeq {
	if x != nil {
		return x.RenderPartitions
	}
	return nil
}

// Lock
type HostLockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host *Host `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
}

func (x *HostLockRequest) Reset() {
	*x = HostLockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostLockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostLockRequest) ProtoMessage() {}

func (x *HostLockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostLockRequest.ProtoReflect.Descriptor instead.
func (*HostLockRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{44}
}

func (x *HostLockRequest) GetHost() *Host {
	if x != nil {
		return x.Host
	}
	return nil
}

type HostLockResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HostLockResponse) Reset() {
	*x = HostLockResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostLockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostLockResponse) ProtoMessage() {}

func (x *HostLockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostLockResponse.ProtoReflect.Descriptor instead.
func (*HostLockResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{45}
}

// Reboot
type HostRebootRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host *Host `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
}

func (x *HostRebootRequest) Reset() {
	*x = HostRebootRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostRebootRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostRebootRequest) ProtoMessage() {}

func (x *HostRebootRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostRebootRequest.ProtoReflect.Descriptor instead.
func (*HostRebootRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{46}
}

func (x *HostRebootRequest) GetHost() *Host {
	if x != nil {
		return x.Host
	}
	return nil
}

type HostRebootResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HostRebootResponse) Reset() {
	*x = HostRebootResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostRebootResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostRebootResponse) ProtoMessage() {}

func (x *HostRebootResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostRebootResponse.ProtoReflect.Descriptor instead.
func (*HostRebootResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{47}
}

// RebootWhenIdle
type HostRebootWhenIdleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host *Host `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
}

func (x *HostRebootWhenIdleRequest) Reset() {
	*x = HostRebootWhenIdleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostRebootWhenIdleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostRebootWhenIdleRequest) ProtoMessage() {}

func (x *HostRebootWhenIdleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostRebootWhenIdleRequest.ProtoReflect.Descriptor instead.
func (*HostRebootWhenIdleRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{48}
}

func (x *HostRebootWhenIdleRequest) GetHost() *Host {
	if x != nil {
		return x.Host
	}
	return nil
}

type HostRebootWhenIdleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HostRebootWhenIdleResponse) Reset() {
	*x = HostRebootWhenIdleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostRebootWhenIdleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostRebootWhenIdleResponse) ProtoMessage() {}

func (x *HostRebootWhenIdleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostRebootWhenIdleResponse.ProtoReflect.Descriptor instead.
func (*HostRebootWhenIdleResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{49}
}

// RedirectToJob
type HostRedirectToJobRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host      *Host    `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	ProcNames []string `protobuf:"bytes,2,rep,name=proc_names,json=procNames,proto3" json:"proc_names,omitempty"`
	JobId     string   `protobuf:"bytes,3,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
}

func (x *HostRedirectToJobRequest) Reset() {
	*x = HostRedirectToJobRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostRedirectToJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostRedirectToJobRequest) ProtoMessage() {}

func (x *HostRedirectToJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostRedirectToJobRequest.ProtoReflect.Descriptor instead.
func (*HostRedirectToJobRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{50}
}

func (x *HostRedirectToJobRequest) GetHost() *Host {
	if x != nil {
		return x.Host
	}
	return nil
}

func (x *HostRedirectToJobRequest) GetProcNames() []string {
	if x != nil {
		return x.ProcNames
	}
	return nil
}

func (x *HostRedirectToJobRequest) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

type HostRedirectToJobResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value bool `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *HostRedirectToJobResponse) Reset() {
	*x = HostRedirectToJobResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostRedirectToJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostRedirectToJobResponse) ProtoMessage() {}

func (x *HostRedirectToJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostRedirectToJobResponse.ProtoReflect.Descriptor instead.
func (*HostRedirectToJobResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{51}
}

func (x *HostRedirectToJobResponse) GetValue() bool {
	if x != nil {
		return x.Value
	}
	return false
}

// RemoveTags
type HostRemoveTagsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host *Host    `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Tags []string `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *HostRemoveTagsRequest) Reset() {
	*x = HostRemoveTagsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostRemoveTagsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostRemoveTagsRequest) ProtoMessage() {}

func (x *HostRemoveTagsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostRemoveTagsRequest.ProtoReflect.Descriptor instead.
func (*HostRemoveTagsRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{52}
}

func (x *HostRemoveTagsRequest) GetHost() *Host {
	if x != nil {
		return x.Host
	}
	return nil
}

func (x *HostRemoveTagsRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type HostRemoveTagsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HostRemoveTagsResponse) Reset() {
	*x = HostRemoveTagsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostRemoveTagsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostRemoveTagsResponse) ProtoMessage() {}

func (x *HostRemoveTagsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostRemoveTagsResponse.ProtoReflect.Descriptor instead.
func (*HostRemoveTagsResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{53}
}

// RenameTag
type HostRenameTagRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host   *Host  `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	OldTag string `protobuf:"bytes,2,opt,name=old_tag,json=oldTag,proto3" json:"old_tag,omitempty"`
	NewTag string `protobuf:"bytes,3,opt,name=new_tag,json=newTag,proto3" json:"new_tag,omitempty"`
}

func (x *HostRenameTagRequest) Reset() {
	*x = HostRenameTagRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostRenameTagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostRenameTagRequest) ProtoMessage() {}

func (x *HostRenameTagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostRenameTagRequest.ProtoReflect.Descriptor instead.
func (*HostRenameTagRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{54}
}

func (x *HostRenameTagRequest) GetHost() *Host {
	if x != nil {
		return x.Host
	}
	return nil
}

func (x *HostRenameTagRequest) GetOldTag() string {
	if x != nil {
		return x.OldTag
	}
	return ""
}

func (x *HostRenameTagRequest) GetNewTag() string {
	if x != nil {
		return x.NewTag
	}
	return ""
}

type HostRenameTagResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HostRenameTagResponse) Reset() {
	*x = HostRenameTagResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostRenameTagResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostRenameTagResponse) ProtoMessage() {}

func (x *HostRenameTagResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostRenameTagResponse.ProtoReflect.Descriptor instead.
func (*HostRenameTagResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{55}
}

// SetAllocation
type HostSetAllocationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host         *Host  `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	AllocationId string `protobuf:"bytes,2,opt,name=allocation_id,json=allocationId,proto3" json:"allocation_id,omitempty"`
}

func (x *HostSetAllocationRequest) Reset() {
	*x = HostSetAllocationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostSetAllocationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostSetAllocationRequest) ProtoMessage() {}

func (x *HostSetAllocationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostSetAllocationRequest.ProtoReflect.Descriptor instead.
func (*HostSetAllocationRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{56}
}

func (x *HostSetAllocationRequest) GetHost() *Host {
	if x != nil {
		return x.Host
	}
	return nil
}

func (x *HostSetAllocationRequest) GetAllocationId() string {
	if x != nil {
		return x.AllocationId
	}
	return ""
}

type HostSetAllocationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HostSetAllocationResponse) Reset() {
	*x = HostSetAllocationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostSetAllocationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostSetAllocationResponse) ProtoMessage() {}

func (x *HostSetAllocationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostSetAllocationResponse.ProtoReflect.Descriptor instead.
func (*HostSetAllocationResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{57}
}

// SetHardwareState
type HostSetHardwareStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host  *Host         `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	State HardwareState `protobuf:"varint,2,opt,name=state,proto3,enum=host.HardwareState" json:"state,omitempty"`
}

func (x *HostSetHardwareStateRequest) Reset() {
	*x = HostSetHardwareStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostSetHardwareStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostSetHardwareStateRequest) ProtoMessage() {}

func (x *HostSetHardwareStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostSetHardwareStateRequest.ProtoReflect.Descriptor instead.
func (*HostSetHardwareStateRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{58}
}

func (x *HostSetHardwareStateRequest) GetHost() *Host {
	if x != nil {
		return x.Host
	}
	return nil
}

func (x *HostSetHardwareStateRequest) GetState() HardwareState {
	if x != nil {
		return x.State
	}
	return HardwareState_UP
}

type HostSetHardwareStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HostSetHardwareStateResponse) Reset() {
	*x = HostSetHardwareStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostSetHardwareStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostSetHardwareStateResponse) ProtoMessage() {}

func (x *HostSetHardwareStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostSetHardwareStateResponse.ProtoReflect.Descriptor instead.
func (*HostSetHardwareStateResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{59}
}

// SetOs
type HostSetOsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host *Host  `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Os   string `protobuf:"bytes,2,opt,name=os,proto3" json:"os,omitempty"`
}

func (x *HostSetOsRequest) Reset() {
	*x = HostSetOsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostSetOsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostSetOsRequest) ProtoMessage() {}

func (x *HostSetOsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostSetOsRequest.ProtoReflect.Descriptor instead.
func (*HostSetOsRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{60}
}

func (x *HostSetOsRequest) GetHost() *Host {
	if x != nil {
		return x.Host
	}
	return nil
}

func (x *HostSetOsRequest) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

type HostSetOsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HostSetOsResponse) Reset() {
	*x = HostSetOsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostSetOsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostSetOsResponse) ProtoMessage() {}

func (x *HostSetOsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostSetOsResponse.ProtoReflect.Descriptor instead.
func (*HostSetOsResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{61}
}

// SetThreadMode
type HostSetThreadModeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host *Host      `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Mode ThreadMode `protobuf:"varint,2,opt,name=mode,proto3,enum=host.ThreadMode" json:"mode,omitempty"`
}

func (x *HostSetThreadModeRequest) Reset() {
	*x = HostSetThreadModeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostSetThreadModeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostSetThreadModeRequest) ProtoMessage() {}

func (x *HostSetThreadModeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostSetThreadModeRequest.ProtoReflect.Descriptor instead.
func (*HostSetThreadModeRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{62}
}

func (x *HostSetThreadModeRequest) GetHost() *Host {
	if x != nil {
		return x.Host
	}
	return nil
}

func (x *HostSetThreadModeRequest) GetMode() ThreadMode {
	if x != nil {
		return x.Mode
	}
	return ThreadMode_AUTO
}

type HostSetThreadModeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HostSetThreadModeResponse) Reset() {
	*x = HostSetThreadModeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostSetThreadModeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostSetThreadModeResponse) ProtoMessage() {}

func (x *HostSetThreadModeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostSetThreadModeResponse.ProtoReflect.Descriptor instead.
func (*HostSetThreadModeResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{63}
}

// Unlock
type HostUnlockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host *Host `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
}

func (x *HostUnlockRequest) Reset() {
	*x = HostUnlockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostUnlockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostUnlockRequest) ProtoMessage() {}

func (x *HostUnlockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostUnlockRequest.ProtoReflect.Descriptor instead.
func (*HostUnlockRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{64}
}

func (x *HostUnlockRequest) GetHost() *Host {
	if x != nil {
		return x.Host
	}
	return nil
}

type HostUnlockResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HostUnlockResponse) Reset() {
	*x = HostUnlockResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostUnlockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostUnlockResponse) ProtoMessage() {}

func (x *HostUnlockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostUnlockResponse.ProtoReflect.Descriptor instead.
func (*HostUnlockResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{65}
}

// OWNER ----
// Delete
type OwnerDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Owner *Owner `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
}

func (x *OwnerDeleteRequest) Reset() {
	*x = OwnerDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OwnerDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OwnerDeleteRequest) ProtoMessage() {}

func (x *OwnerDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OwnerDeleteRequest.ProtoReflect.Descriptor instead.
func (*OwnerDeleteRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{66}
}

func (x *OwnerDeleteRequest) GetOwner() *Owner {
	if x != nil {
		return x.Owner
	}
	return nil
}

type OwnerDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OwnerDeleteResponse) Reset() {
	*x = OwnerDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OwnerDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OwnerDeleteResponse) ProtoMessage() {}

func (x *OwnerDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OwnerDeleteResponse.ProtoReflect.Descriptor instead.
func (*OwnerDeleteResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{67}
}

// GetDeeds
type OwnerGetDeedsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Owner *Owner `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
}

func (x *OwnerGetDeedsRequest) Reset() {
	*x = OwnerGetDeedsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OwnerGetDeedsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OwnerGetDeedsRequest) ProtoMessage() {}

func (x *OwnerGetDeedsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OwnerGetDeedsRequest.ProtoReflect.Descriptor instead.
func (*OwnerGetDeedsRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{68}
}

func (x *OwnerGetDeedsRequest) GetOwner() *Owner {
	if x != nil {
		return x.Owner
	}
	return nil
}

type OwnerGetDeedsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Deeds *DeedSeq `protobuf:"bytes,1,opt,name=deeds,proto3" json:"deeds,omitempty"`
}

func (x *OwnerGetDeedsResponse) Reset() {
	*x = OwnerGetDeedsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OwnerGetDeedsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OwnerGetDeedsResponse) ProtoMessage() {}

func (x *OwnerGetDeedsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OwnerGetDeedsResponse.ProtoReflect.Descriptor instead.
func (*OwnerGetDeedsResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{69}
}

func (x *OwnerGetDeedsResponse) GetDeeds() *DeedSeq {
	if x != nil {
		return x.Deeds
	}
	return nil
}

// GetHosts
type OwnerGetHostsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Owner *Owner `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
}

func (x *OwnerGetHostsRequest) Reset() {
	*x = OwnerGetHostsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OwnerGetHostsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OwnerGetHostsRequest) ProtoMessage() {}

func (x *OwnerGetHostsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OwnerGetHostsRequest.ProtoReflect.Descriptor instead.
func (*OwnerGetHostsRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{70}
}

func (x *OwnerGetHostsRequest) GetOwner() *Owner {
	if x != nil {
		return x.Owner
	}
	return nil
}

type OwnerGetHostsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hosts *HostSeq `protobuf:"bytes,1,opt,name=hosts,proto3" json:"hosts,omitempty"`
}

func (x *OwnerGetHostsResponse) Reset() {
	*x = OwnerGetHostsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OwnerGetHostsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OwnerGetHostsResponse) ProtoMessage() {}

func (x *OwnerGetHostsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OwnerGetHostsResponse.ProtoReflect.Descriptor instead.
func (*OwnerGetHostsResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{71}
}

func (x *OwnerGetHostsResponse) GetHosts() *HostSeq {
	if x != nil {
		return x.Hosts
	}
	return nil
}

// GetOwner
type OwnerGetOwnerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *OwnerGetOwnerRequest) Reset() {
	*x = OwnerGetOwnerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OwnerGetOwnerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OwnerGetOwnerRequest) ProtoMessage() {}

func (x *OwnerGetOwnerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OwnerGetOwnerRequest.ProtoReflect.Descriptor instead.
func (*OwnerGetOwnerRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{72}
}

func (x *OwnerGetOwnerRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type OwnerGetOwnerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Owner *Owner `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
}

func (x *OwnerGetOwnerResponse) Reset() {
	*x = OwnerGetOwnerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OwnerGetOwnerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OwnerGetOwnerResponse) ProtoMessage() {}

func (x *OwnerGetOwnerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OwnerGetOwnerResponse.ProtoReflect.Descriptor instead.
func (*OwnerGetOwnerResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{73}
}

func (x *OwnerGetOwnerResponse) GetOwner() *Owner {
	if x != nil {
		return x.Owner
	}
	return nil
}

// SetShow
type OwnerSetShowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Owner *Owner `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	Show  string `protobuf:"bytes,2,opt,name=show,proto3" json:"show,omitempty"`
}

func (x *OwnerSetShowRequest) Reset() {
	*x = OwnerSetShowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OwnerSetShowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OwnerSetShowRequest) ProtoMessage() {}

func (x *OwnerSetShowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OwnerSetShowRequest.ProtoReflect.Descriptor instead.
func (*OwnerSetShowRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{74}
}

func (x *OwnerSetShowRequest) GetOwner() *Owner {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (x *OwnerSetShowRequest) GetShow() string {
	if x != nil {
		return x.Show
	}
	return ""
}

type OwnerSetShowResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OwnerSetShowResponse) Reset() {
	*x = OwnerSetShowResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OwnerSetShowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OwnerSetShowResponse) ProtoMessage() {}

func (x *OwnerSetShowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OwnerSetShowResponse.ProtoReflect.Descriptor instead.
func (*OwnerSetShowResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{75}
}

// TakeOwnership
type OwnerTakeOwnershipRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Owner *Owner `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	Host  string `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
}

func (x *OwnerTakeOwnershipRequest) Reset() {
	*x = OwnerTakeOwnershipRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OwnerTakeOwnershipRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OwnerTakeOwnershipRequest) ProtoMessage() {}

func (x *OwnerTakeOwnershipRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OwnerTakeOwnershipRequest.ProtoReflect.Descriptor instead.
func (*OwnerTakeOwnershipRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{76}
}

func (x *OwnerTakeOwnershipRequest) GetOwner() *Owner {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (x *OwnerTakeOwnershipRequest) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

type OwnerTakeOwnershipResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OwnerTakeOwnershipResponse) Reset() {
	*x = OwnerTakeOwnershipResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OwnerTakeOwnershipResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OwnerTakeOwnershipResponse) ProtoMessage() {}

func (x *OwnerTakeOwnershipResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OwnerTakeOwnershipResponse.ProtoReflect.Descriptor instead.
func (*OwnerTakeOwnershipResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{77}
}

// PROC ---
// ClearRedirect
type ProcClearRedirectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Proc *Proc `protobuf:"bytes,1,opt,name=proc,proto3" json:"proc,omitempty"`
}

func (x *ProcClearRedirectRequest) Reset() {
	*x = ProcClearRedirectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcClearRedirectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcClearRedirectRequest) ProtoMessage() {}

func (x *ProcClearRedirectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcClearRedirectRequest.ProtoReflect.Descriptor instead.
func (*ProcClearRedirectRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{78}
}

func (x *ProcClearRedirectRequest) GetProc() *Proc {
	if x != nil {
		return x.Proc
	}
	return nil
}

type ProcClearRedirectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value bool `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ProcClearRedirectResponse) Reset() {
	*x = ProcClearRedirectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcClearRedirectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcClearRedirectResponse) ProtoMessage() {}

func (x *ProcClearRedirectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcClearRedirectResponse.ProtoReflect.Descriptor instead.
func (*ProcClearRedirectResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{79}
}

func (x *ProcClearRedirectResponse) GetValue() bool {
	if x != nil {
		return x.Value
	}
	return false
}

// GetFrame
type ProcGetFrameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Proc *Proc `protobuf:"bytes,1,opt,name=proc,proto3" json:"proc,omitempty"`
}

func (x *ProcGetFrameRequest) Reset() {
	*x = ProcGetFrameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcGetFrameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcGetFrameRequest) ProtoMessage() {}

func (x *ProcGetFrameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcGetFrameRequest.ProtoReflect.Descriptor instead.
func (*ProcGetFrameRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{80}
}

func (x *ProcGetFrameRequest) GetProc() *Proc {
	if x != nil {
		return x.Proc
	}
	return nil
}

type ProcGetFrameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Frame *job_proto.Frame `protobuf:"bytes,1,opt,name=frame,proto3" json:"frame,omitempty"`
}

func (x *ProcGetFrameResponse) Reset() {
	*x = ProcGetFrameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcGetFrameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcGetFrameResponse) ProtoMessage() {}

func (x *ProcGetFrameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcGetFrameResponse.ProtoReflect.Descriptor instead.
func (*ProcGetFrameResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{81}
}

func (x *ProcGetFrameResponse) GetFrame() *job_proto.Frame {
	if x != nil {
		return x.Frame
	}
	return nil
}

// GetHost
type ProcGetHostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Proc *Proc `protobuf:"bytes,1,opt,name=proc,proto3" json:"proc,omitempty"`
}

func (x *ProcGetHostRequest) Reset() {
	*x = ProcGetHostRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcGetHostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcGetHostRequest) ProtoMessage() {}

func (x *ProcGetHostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcGetHostRequest.ProtoReflect.Descriptor instead.
func (*ProcGetHostRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{82}
}

func (x *ProcGetHostRequest) GetProc() *Proc {
	if x != nil {
		return x.Proc
	}
	return nil
}

type ProcGetHostResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host *Host `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
}

func (x *ProcGetHostResponse) Reset() {
	*x = ProcGetHostResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcGetHostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcGetHostResponse) ProtoMessage() {}

func (x *ProcGetHostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcGetHostResponse.ProtoReflect.Descriptor instead.
func (*ProcGetHostResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{83}
}

func (x *ProcGetHostResponse) GetHost() *Host {
	if x != nil {
		return x.Host
	}
	return nil
}

// GetJob
type ProcGetJobRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Proc *Proc `protobuf:"bytes,1,opt,name=proc,proto3" json:"proc,omitempty"`
}

func (x *ProcGetJobRequest) Reset() {
	*x = ProcGetJobRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcGetJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcGetJobRequest) ProtoMessage() {}

func (x *ProcGetJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcGetJobRequest.ProtoReflect.Descriptor instead.
func (*ProcGetJobRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{84}
}

func (x *ProcGetJobRequest) GetProc() *Proc {
	if x != nil {
		return x.Proc
	}
	return nil
}

type ProcGetJobResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Job *job_proto.Job `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
}

func (x *ProcGetJobResponse) Reset() {
	*x = ProcGetJobResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcGetJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcGetJobResponse) ProtoMessage() {}

func (x *ProcGetJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcGetJobResponse.ProtoReflect.Descriptor instead.
func (*ProcGetJobResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{85}
}

func (x *ProcGetJobResponse) GetJob() *job_proto.Job {
	if x != nil {
		return x.Job
	}
	return nil
}

// GetLayer
type ProcGetLayerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Proc *Proc `protobuf:"bytes,1,opt,name=proc,proto3" json:"proc,omitempty"`
}

func (x *ProcGetLayerRequest) Reset() {
	*x = ProcGetLayerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcGetLayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcGetLayerRequest) ProtoMessage() {}

func (x *ProcGetLayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcGetLayerRequest.ProtoReflect.Descriptor instead.
func (*ProcGetLayerRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{86}
}

func (x *ProcGetLayerRequest) GetProc() *Proc {
	if x != nil {
		return x.Proc
	}
	return nil
}

type ProcGetLayerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Layer *job_proto.Layer `protobuf:"bytes,1,opt,name=layer,proto3" json:"layer,omitempty"`
}

func (x *ProcGetLayerResponse) Reset() {
	*x = ProcGetLayerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcGetLayerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcGetLayerResponse) ProtoMessage() {}

func (x *ProcGetLayerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcGetLayerResponse.ProtoReflect.Descriptor instead.
func (*ProcGetLayerResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{87}
}

func (x *ProcGetLayerResponse) GetLayer() *job_proto.Layer {
	if x != nil {
		return x.Layer
	}
	return nil
}

// GetProcs
type ProcGetProcsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	R *ProcSearchCriteria `protobuf:"bytes,1,opt,name=r,proto3" json:"r,omitempty"`
}

func (x *ProcGetProcsRequest) Reset() {
	*x = ProcGetProcsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcGetProcsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcGetProcsRequest) ProtoMessage() {}

func (x *ProcGetProcsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcGetProcsRequest.ProtoReflect.Descriptor instead.
func (*ProcGetProcsRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{88}
}

func (x *ProcGetProcsRequest) GetR() *ProcSearchCriteria {
	if x != nil {
		return x.R
	}
	return nil
}

type ProcGetProcsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Procs *ProcSeq `protobuf:"bytes,1,opt,name=procs,proto3" json:"procs,omitempty"`
}

func (x *ProcGetProcsResponse) Reset() {
	*x = ProcGetProcsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcGetProcsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcGetProcsResponse) ProtoMessage() {}

func (x *ProcGetProcsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcGetProcsResponse.ProtoReflect.Descriptor instead.
func (*ProcGetProcsResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{89}
}

func (x *ProcGetProcsResponse) GetProcs() *ProcSeq {
	if x != nil {
		return x.Procs
	}
	return nil
}

// Kill
type ProcKillRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Proc *Proc `protobuf:"bytes,1,opt,name=proc,proto3" json:"proc,omitempty"`
}

func (x *ProcKillRequest) Reset() {
	*x = ProcKillRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcKillRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcKillRequest) ProtoMessage() {}

func (x *ProcKillRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcKillRequest.ProtoReflect.Descriptor instead.
func (*ProcKillRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{90}
}

func (x *ProcKillRequest) GetProc() *Proc {
	if x != nil {
		return x.Proc
	}
	return nil
}

type ProcKillResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ProcKillResponse) Reset() {
	*x = ProcKillResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcKillResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcKillResponse) ProtoMessage() {}

func (x *ProcKillResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcKillResponse.ProtoReflect.Descriptor instead.
func (*ProcKillResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{91}
}

// RedirectToGroup
type ProcRedirectToGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Proc    *Proc  `protobuf:"bytes,1,opt,name=proc,proto3" json:"proc,omitempty"`
	GroupId string `protobuf:"bytes,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	Kill    bool   `protobuf:"varint,3,opt,name=kill,proto3" json:"kill,omitempty"`
}

func (x *ProcRedirectToGroupRequest) Reset() {
	*x = ProcRedirectToGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcRedirectToGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcRedirectToGroupRequest) ProtoMessage() {}

func (x *ProcRedirectToGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcRedirectToGroupRequest.ProtoReflect.Descriptor instead.
func (*ProcRedirectToGroupRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{92}
}

func (x *ProcRedirectToGroupRequest) GetProc() *Proc {
	if x != nil {
		return x.Proc
	}
	return nil
}

func (x *ProcRedirectToGroupRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *ProcRedirectToGroupRequest) GetKill() bool {
	if x != nil {
		return x.Kill
	}
	return false
}

type ProcRedirectToGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value bool `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ProcRedirectToGroupResponse) Reset() {
	*x = ProcRedirectToGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcRedirectToGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcRedirectToGroupResponse) ProtoMessage() {}

func (x *ProcRedirectToGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcRedirectToGroupResponse.ProtoReflect.Descriptor instead.
func (*ProcRedirectToGroupResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{93}
}

func (x *ProcRedirectToGroupResponse) GetValue() bool {
	if x != nil {
		return x.Value
	}
	return false
}

// RedirectToJob
type ProcRedirectToJobRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Proc  *Proc  `protobuf:"bytes,1,opt,name=proc,proto3" json:"proc,omitempty"`
	JobId string `protobuf:"bytes,2,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	Kill  bool   `protobuf:"varint,3,opt,name=kill,proto3" json:"kill,omitempty"`
}

func (x *ProcRedirectToJobRequest) Reset() {
	*x = ProcRedirectToJobRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcRedirectToJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcRedirectToJobRequest) ProtoMessage() {}

func (x *ProcRedirectToJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcRedirectToJobRequest.ProtoReflect.Descriptor instead.
func (*ProcRedirectToJobRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{94}
}

func (x *ProcRedirectToJobRequest) GetProc() *Proc {
	if x != nil {
		return x.Proc
	}
	return nil
}

func (x *ProcRedirectToJobRequest) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *ProcRedirectToJobRequest) GetKill() bool {
	if x != nil {
		return x.Kill
	}
	return false
}

type ProcRedirectToJobResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value bool `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ProcRedirectToJobResponse) Reset() {
	*x = ProcRedirectToJobResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcRedirectToJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcRedirectToJobResponse) ProtoMessage() {}

func (x *ProcRedirectToJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcRedirectToJobResponse.ProtoReflect.Descriptor instead.
func (*ProcRedirectToJobResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{95}
}

func (x *ProcRedirectToJobResponse) GetValue() bool {
	if x != nil {
		return x.Value
	}
	return false
}

// Unbook
type ProcUnbookRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Proc *Proc `protobuf:"bytes,1,opt,name=proc,proto3" json:"proc,omitempty"`
	Kill bool  `protobuf:"varint,2,opt,name=kill,proto3" json:"kill,omitempty"`
}

func (x *ProcUnbookRequest) Reset() {
	*x = ProcUnbookRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcUnbookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcUnbookRequest) ProtoMessage() {}

func (x *ProcUnbookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcUnbookRequest.ProtoReflect.Descriptor instead.
func (*ProcUnbookRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{96}
}

func (x *ProcUnbookRequest) GetProc() *Proc {
	if x != nil {
		return x.Proc
	}
	return nil
}

func (x *ProcUnbookRequest) GetKill() bool {
	if x != nil {
		return x.Kill
	}
	return false
}

type ProcUnbookResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ProcUnbookResponse) Reset() {
	*x = ProcUnbookResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcUnbookResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcUnbookResponse) ProtoMessage() {}

func (x *ProcUnbookResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcUnbookResponse.ProtoReflect.Descriptor instead.
func (*ProcUnbookResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{97}
}

// UnbookProcs
type ProcUnbookProcsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	R    *ProcSearchCriteria `protobuf:"bytes,1,opt,name=r,proto3" json:"r,omitempty"`
	Kill bool                `protobuf:"varint,2,opt,name=kill,proto3" json:"kill,omitempty"`
}

func (x *ProcUnbookProcsRequest) Reset() {
	*x = ProcUnbookProcsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcUnbookProcsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcUnbookProcsRequest) ProtoMessage() {}

func (x *ProcUnbookProcsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcUnbookProcsRequest.ProtoReflect.Descriptor instead.
func (*ProcUnbookProcsRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{98}
}

func (x *ProcUnbookProcsRequest) GetR() *ProcSearchCriteria {
	if x != nil {
		return x.R
	}
	return nil
}

func (x *ProcUnbookProcsRequest) GetKill() bool {
	if x != nil {
		return x.Kill
	}
	return false
}

type ProcUnbookProcsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NumProcs int32 `protobuf:"varint,1,opt,name=num_procs,json=numProcs,proto3" json:"num_procs,omitempty"`
}

func (x *ProcUnbookProcsResponse) Reset() {
	*x = ProcUnbookProcsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcUnbookProcsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcUnbookProcsResponse) ProtoMessage() {}

func (x *ProcUnbookProcsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcUnbookProcsResponse.ProtoReflect.Descriptor instead.
func (*ProcUnbookProcsResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{99}
}

func (x *ProcUnbookProcsResponse) GetNumProcs() int32 {
	if x != nil {
		return x.NumProcs
	}
	return 0
}

// UnbookToJob
type ProcUnbookToJobRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	R    *ProcSearchCriteria `protobuf:"bytes,1,opt,name=r,proto3" json:"r,omitempty"`
	Jobs *job_proto.JobSeq   `protobuf:"bytes,2,opt,name=jobs,proto3" json:"jobs,omitempty"`
	Kill bool                `protobuf:"varint,3,opt,name=kill,proto3" json:"kill,omitempty"`
}

func (x *ProcUnbookToJobRequest) Reset() {
	*x = ProcUnbookToJobRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcUnbookToJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcUnbookToJobRequest) ProtoMessage() {}

func (x *ProcUnbookToJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcUnbookToJobRequest.ProtoReflect.Descriptor instead.
func (*ProcUnbookToJobRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{100}
}

func (x *ProcUnbookToJobRequest) GetR() *ProcSearchCriteria {
	if x != nil {
		return x.R
	}
	return nil
}

func (x *ProcUnbookToJobRequest) GetJobs() *job_proto.JobSeq {
	if x != nil {
		return x.Jobs
	}
	return nil
}

func (x *ProcUnbookToJobRequest) GetKill() bool {
	if x != nil {
		return x.Kill
	}
	return false
}

type ProcUnbookToJobResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NumProcs int32 `protobuf:"varint,1,opt,name=num_procs,json=numProcs,proto3" json:"num_procs,omitempty"`
}

func (x *ProcUnbookToJobResponse) Reset() {
	*x = ProcUnbookToJobResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcUnbookToJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcUnbookToJobResponse) ProtoMessage() {}

func (x *ProcUnbookToJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcUnbookToJobResponse.ProtoReflect.Descriptor instead.
func (*ProcUnbookToJobResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{101}
}

func (x *ProcUnbookToJobResponse) GetNumProcs() int32 {
	if x != nil {
		return x.NumProcs
	}
	return 0
}

// UnbookToGroup
type ProcUnbookToGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	R     *ProcSearchCriteria `protobuf:"bytes,1,opt,name=r,proto3" json:"r,omitempty"`
	Group *job_proto.Group    `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
	Kill  bool                `protobuf:"varint,3,opt,name=kill,proto3" json:"kill,omitempty"`
}

func (x *ProcUnbookToGroupRequest) Reset() {
	*x = ProcUnbookToGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcUnbookToGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcUnbookToGroupRequest) ProtoMessage() {}

func (x *ProcUnbookToGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcUnbookToGroupRequest.ProtoReflect.Descriptor instead.
func (*ProcUnbookToGroupRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{102}
}

func (x *ProcUnbookToGroupRequest) GetR() *ProcSearchCriteria {
	if x != nil {
		return x.R
	}
	return nil
}

func (x *ProcUnbookToGroupRequest) GetGroup() *job_proto.Group {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *ProcUnbookToGroupRequest) GetKill() bool {
	if x != nil {
		return x.Kill
	}
	return false
}

type ProcUnbookToGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NumProcs int32 `protobuf:"varint,1,opt,name=num_procs,json=numProcs,proto3" json:"num_procs,omitempty"`
}

func (x *ProcUnbookToGroupResponse) Reset() {
	*x = ProcUnbookToGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_host_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcUnbookToGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcUnbookToGroupResponse) ProtoMessage() {}

func (x *ProcUnbookToGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_host_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcUnbookToGroupResponse.ProtoReflect.Descriptor instead.
func (*ProcUnbookToGroupResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_host_proto_rawDescGZIP(), []int{103}
}

func (x *ProcUnbookToGroupResponse) GetNumProcs() int32 {
	if x != nil {
		return x.NumProcs
	}
	return 0
}

var File_OpenCue_proto_host_proto protoreflect.FileDescriptor

var file_OpenCue_proto_host_proto_rawDesc = []byte{
	0x0a, 0x18, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x75, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x68, 0x6f, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x68, 0x6f, 0x73, 0x74,
	0x1a, 0x1b, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x75, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x4f,
	0x70, 0x65, 0x6e, 0x43, 0x75, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x72, 0x69,
	0x74, 0x65, 0x72, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x4f, 0x70,
	0x65, 0x6e, 0x43, 0x75, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6a, 0x6f, 0x62, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x75, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x50, 0x61, 0x72, 0x74, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x54, 0x0a, 0x04, 0x44, 0x65,
	0x65, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x68, 0x6f, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x68, 0x6f, 0x77,
	0x22, 0x2b, 0x0a, 0x07, 0x44, 0x65, 0x65, 0x64, 0x53, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x05, 0x64,
	0x65, 0x65, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x68, 0x6f, 0x73,
	0x74, 0x2e, 0x44, 0x65, 0x65, 0x64, 0x52, 0x05, 0x64, 0x65, 0x65, 0x64, 0x73, 0x22, 0x3d, 0x0a,
	0x10, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x53, 0x65,
	0x71, 0x12, 0x29, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0e,
	0x32, 0x13, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0xff, 0x06, 0x0a,
	0x04, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x6c, 0x6c,
	0x6f, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61,
	0x6c, 0x6c, 0x6f, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6e, 0x69, 0x6d, 0x62,
	0x79, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0c, 0x6e, 0x69, 0x6d, 0x62, 0x79, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x68, 0x61, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x68, 0x61, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x63,
	0x6f, 0x72, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x64, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x72,
	0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x69, 0x64, 0x6c, 0x65, 0x43, 0x6f,
	0x72, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x69,
	0x64, 0x6c, 0x65, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x69, 0x64, 0x6c, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x1d, 0x0a, 0x0a,
	0x67, 0x70, 0x75, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x67, 0x70, 0x75, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x26, 0x0a, 0x0f, 0x69,
	0x64, 0x6c, 0x65, 0x5f, 0x67, 0x70, 0x75, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x69, 0x64, 0x6c, 0x65, 0x47, 0x70, 0x75, 0x4d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x77, 0x61,
	0x70, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x77,
	0x61, 0x70, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4d,
	0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x67,
	0x70, 0x75, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x47, 0x70, 0x75, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12,
	0x1b, 0x0a, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6d, 0x63, 0x70, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4d, 0x63, 0x70, 0x12, 0x1b, 0x0a, 0x09,
	0x66, 0x72, 0x65, 0x65, 0x5f, 0x73, 0x77, 0x61, 0x70, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x66, 0x72, 0x65, 0x65, 0x53, 0x77, 0x61, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x72, 0x65,
	0x65, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x66, 0x72, 0x65, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x72,
	0x65, 0x65, 0x5f, 0x6d, 0x63, 0x70, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x66, 0x72,
	0x65, 0x65, 0x4d, 0x63, 0x70, 0x12, 0x26, 0x0a, 0x0f, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x67, 0x70,
	0x75, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d,
	0x66, 0x72, 0x65, 0x65, 0x47, 0x70, 0x75, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x6c, 0x6f, 0x61,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x6f, 0x6f, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x62, 0x6f, 0x6f, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x70, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f,
	0x73, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6f, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x61, 0x67, 0x73, 0x18, 0x18, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12,
	0x29, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13,
	0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x2e, 0x0a, 0x0a, 0x6c, 0x6f,
	0x63, 0x6b, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f,
	0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x4c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x09, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x31, 0x0a, 0x0b, 0x74, 0x68,
	0x72, 0x65, 0x61, 0x64, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x10, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x6f, 0x64,
	0x65, 0x52, 0x0a, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x67, 0x70, 0x75, 0x73, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x67, 0x70, 0x75,
	0x73, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x64, 0x6c, 0x65, 0x5f, 0x67, 0x70, 0x75, 0x73, 0x18, 0x1d,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x69, 0x64, 0x6c, 0x65, 0x47, 0x70, 0x75, 0x73, 0x22, 0xb2,
	0x01, 0x0a, 0x12, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x72, 0x69,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x68, 0x6f, 0x73, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x68, 0x6f, 0x73, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x72,
	0x65, 0x67, 0x65, 0x78, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x72, 0x65, 0x67, 0x65,
	0x78, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x6c, 0x6c, 0x6f, 0x63, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6c, 0x6c,
	0x6f, 0x63, 0x73, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x48, 0x61, 0x72, 0x64, 0x77,
	0x61, 0x72, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x53, 0x65, 0x71, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x73, 0x22, 0x2b, 0x0a, 0x07, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x71, 0x12, 0x20,
	0x0a, 0x05, 0x68, 0x6f, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x68, 0x6f, 0x73, 0x74, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x05, 0x68, 0x6f, 0x73, 0x74, 0x73,
	0x22, 0xb0, 0x07, 0x0a, 0x0a, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x48, 0x6f, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6e, 0x69, 0x6d, 0x62, 0x79, 0x5f, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x6e, 0x69, 0x6d, 0x62, 0x79,
	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x68, 0x61, 0x73, 0x5f, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x68, 0x61,
	0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x72, 0x65,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x69, 0x64, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x09, 0x69, 0x64, 0x6c, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6d,
	0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x64, 0x6c, 0x65, 0x5f, 0x6d, 0x65,
	0x6d, 0x6f, 0x72, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x69, 0x64, 0x6c, 0x65,
	0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x70, 0x75, 0x5f, 0x6d, 0x65,
	0x6d, 0x6f, 0x72, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x67, 0x70, 0x75, 0x4d,
	0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x64, 0x6c, 0x65, 0x5f, 0x67, 0x70,
	0x75, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d,
	0x69, 0x64, 0x6c, 0x65, 0x47, 0x70, 0x75, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x1d, 0x0a,
	0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x77, 0x61, 0x70, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x77, 0x61, 0x70, 0x12, 0x21, 0x0a, 0x0c,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12,
	0x28, 0x0a, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x67, 0x70, 0x75, 0x5f, 0x6d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x47, 0x70, 0x75, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x6d, 0x63, 0x70, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x4d, 0x63, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x73,
	0x77, 0x61, 0x70, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x66, 0x72, 0x65, 0x65, 0x53,
	0x77, 0x61, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x6d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x66, 0x72, 0x65, 0x65, 0x4d, 0x65,
	0x6d, 0x6f, 0x72, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x6d, 0x63, 0x70,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x66, 0x72, 0x65, 0x65, 0x4d, 0x63, 0x70, 0x12,
	0x26, 0x0a, 0x0f, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x67, 0x70, 0x75, 0x5f, 0x6d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x66, 0x72, 0x65, 0x65, 0x47, 0x70,
	0x75, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x61, 0x64, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x62,
	0x6f, 0x6f, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x62, 0x6f, 0x6f, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x69, 0x6e, 0x67,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x69, 0x6e,
	0x67, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x73, 0x18, 0x17, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x6f, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x18, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x29, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e,
	0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x2e, 0x0a, 0x0a, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e,
	0x4c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x6b, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x31, 0x0a, 0x0b, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x6d,
	0x6f, 0x64, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x68, 0x6f, 0x73, 0x74,
	0x2e, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x0a, 0x74, 0x68, 0x72,
	0x65, 0x61, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x29, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x63, 0x73,
	0x18, 0x1c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x4e, 0x65,
	0x73, 0x74, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x63, 0x53, 0x65, 0x71, 0x52, 0x05, 0x70, 0x72, 0x6f,
	0x63, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x70, 0x75, 0x73, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x04, 0x67, 0x70, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x64, 0x6c, 0x65, 0x5f, 0x67,
	0x70, 0x75, 0x73, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x69, 0x64, 0x6c, 0x65, 0x47,
	0x70, 0x75, 0x73, 0x22, 0x44, 0x0a, 0x0d, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x48, 0x6f, 0x73,
	0x74, 0x53, 0x65, 0x71, 0x12, 0x33, 0x0a, 0x0c, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x68,
	0x6f, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x68, 0x6f, 0x73,
	0x74, 0x2e, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x0b, 0x6e, 0x65,
	0x73, 0x74, 0x65, 0x64, 0x48, 0x6f, 0x73, 0x74, 0x73, 0x22, 0x9c, 0x05, 0x0a, 0x0a, 0x4e, 0x65,
	0x73, 0x74, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x63, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x68, 0x6f, 0x77, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x73, 0x68, 0x6f, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x6f, 0x62,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x6f, 0x62,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x62, 0x6f, 0x6f, 0x6b, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x6f, 0x6f, 0x6b, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64,
	0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x72,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x2e, 0x0a,
	0x13, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x5f, 0x67, 0x70, 0x75, 0x5f, 0x6d, 0x65,
	0x6d, 0x6f, 0x72, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x72, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x64, 0x47, 0x70, 0x75, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x1f, 0x0a,
	0x0b, 0x75, 0x73, 0x65, 0x64, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x64, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x25,
	0x0a, 0x0e, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x73,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64,
	0x43, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x6e, 0x62, 0x6f, 0x6f, 0x6b, 0x65,
	0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x75, 0x6e, 0x62, 0x6f, 0x6f, 0x6b, 0x65,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x50, 0x61, 0x74, 0x68, 0x12, 0x27, 0x0a, 0x0f,
	0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x18, 0x11, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x12, 0x28, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x48,
	0x6f, 0x73, 0x74, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x75,
	0x73, 0x65, 0x64, 0x5f, 0x67, 0x70, 0x75, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x75, 0x73, 0x65, 0x64, 0x47, 0x70, 0x75, 0x4d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x5f,
	0x67, 0x70, 0x75, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x64, 0x47, 0x70, 0x75, 0x73, 0x22, 0x44, 0x0a, 0x0d, 0x4e, 0x65, 0x73, 0x74,
	0x65, 0x64, 0x50, 0x72, 0x6f, 0x63, 0x53, 0x65, 0x71, 0x12, 0x33, 0x0a, 0x0c, 0x6e, 0x65, 0x73,
	0x74, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x50, 0x72, 0x6f,
	0x63, 0x52, 0x0b, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x63, 0x73, 0x22, 0x5e,
	0x0a, 0x05, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x68, 0x6f, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x68, 0x6f, 0x77, 0x12,
	0x1d, 0x0a, 0x0a, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x68, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x95,
	0x05, 0x0a, 0x04, 0x50, 0x72, 0x6f, 0x63, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73,
	0x68, 0x6f, 0x77, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x68, 0x6f, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x6f, 0x62, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x6f, 0x62, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x62, 0x6f, 0x6f, 0x6b, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x62, 0x6f, 0x6f, 0x6b, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x64, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x5f,
	0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x72, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x2e, 0x0a, 0x13,
	0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x5f, 0x67, 0x70, 0x75, 0x5f, 0x6d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x72, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x64, 0x47, 0x70, 0x75, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x1f, 0x0a, 0x0b,
	0x75, 0x73, 0x65, 0x64, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x64, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x25, 0x0a,
	0x0e, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x43,
	0x6f, 0x72, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x6e, 0x62, 0x6f, 0x6f, 0x6b, 0x65, 0x64,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x75, 0x6e, 0x62, 0x6f, 0x6f, 0x6b, 0x65, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x50, 0x61, 0x74, 0x68, 0x12, 0x27, 0x0a, 0x0f, 0x72,
	0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x18, 0x11, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x12, 0x26, 0x0a, 0x0f, 0x75, 0x73, 0x65, 0x64, 0x5f, 0x67, 0x70, 0x75, 0x5f, 0x6d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x75, 0x73, 0x65, 0x64, 0x47,
	0x70, 0x75, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x64, 0x5f, 0x67, 0x70, 0x75, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x0c, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x47, 0x70, 0x75, 0x73, 0x12, 0x27, 0x0a,
	0x0f, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x73,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0xe6, 0x02, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x63, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x12, 0x14, 0x0a,
	0x05, 0x68, 0x6f, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x68, 0x6f,
	0x73, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6a, 0x6f, 0x62, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x04, 0x6a, 0x6f, 0x62, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x68, 0x6f, 0x77, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05,
	0x73, 0x68, 0x6f, 0x77, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x73, 0x12, 0x4b, 0x0a,
	0x0c, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x6f, 0x6e, 0x2e,
	0x49, 0x6e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x6d,
	0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x4f, 0x0a, 0x0e, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x6f, 0x6e, 0x2e, 0x49,
	0x6e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d,
	0x61, 0x78, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x05,
	0x52, 0x0a, 0x6d, 0x61, 0x78, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x21, 0x0a, 0x0c,
	0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x66, 0x69, 0x72, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x2b, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x63, 0x53, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x05, 0x70, 0x72,
	0x6f, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x68, 0x6f, 0x73, 0x74,
	0x2e, 0x50, 0x72, 0x6f, 0x63, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x63, 0x73, 0x22, 0x33, 0x0a, 0x11,
	0x44, 0x65, 0x65, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1e, 0x0a, 0x04, 0x64, 0x65, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x44, 0x65, 0x65, 0x64, 0x52, 0x04, 0x64, 0x65, 0x65,
	0x64, 0x22, 0x14, 0x0a, 0x12, 0x44, 0x65, 0x65, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x34, 0x0a, 0x12, 0x44, 0x65, 0x65, 0x64, 0x47,
	0x65, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a,
	0x04, 0x64, 0x65, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x68, 0x6f,
	0x73, 0x74, 0x2e, 0x44, 0x65, 0x65, 0x64, 0x52, 0x04, 0x64, 0x65, 0x65, 0x64, 0x22, 0x35, 0x0a,
	0x13, 0x44, 0x65, 0x65, 0x64, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x04,
	0x68, 0x6f, 0x73, 0x74, 0x22, 0x35, 0x0a, 0x13, 0x44, 0x65, 0x65, 0x64, 0x47, 0x65, 0x74, 0x4f,
	0x77, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x04, 0x64,
	0x65, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x68, 0x6f, 0x73, 0x74,
	0x2e, 0x44, 0x65, 0x65, 0x64, 0x52, 0x04, 0x64, 0x65, 0x65, 0x64, 0x22, 0x39, 0x0a, 0x14, 0x44,
	0x65, 0x65, 0x64, 0x47, 0x65, 0x74, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52,
	0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x22, 0x6a, 0x0a, 0x15, 0x48, 0x6f, 0x73, 0x74, 0x41, 0x64,
	0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1e, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x68, 0x6f, 0x73, 0x74, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12,
	0x31, 0x0a, 0x0b, 0x6e, 0x65, 0x77, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x6e, 0x65, 0x77, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x22, 0x18, 0x0a, 0x16, 0x48, 0x6f, 0x73, 0x74, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x48, 0x0a, 0x12,
	0x48, 0x6f, 0x73, 0x74, 0x41, 0x64, 0x64, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1e, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x04, 0x68, 0x6f,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0x15, 0x0a, 0x13, 0x48, 0x6f, 0x73, 0x74, 0x41, 0x64,
	0x64, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x33, 0x0a,
	0x11, 0x48, 0x6f, 0x73, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1e, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x04, 0x68, 0x6f,
	0x73, 0x74, 0x22, 0x14, 0x0a, 0x12, 0x48, 0x6f, 0x73, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29, 0x0a, 0x13, 0x48, 0x6f, 0x73, 0x74,
	0x46, 0x69, 0x6e, 0x64, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x36, 0x0a, 0x14, 0x48, 0x6f, 0x73, 0x74, 0x46, 0x69, 0x6e, 0x64, 0x48,
	0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x04, 0x68,
	0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x68, 0x6f, 0x73, 0x74,
	0x2e, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x22, 0x38, 0x0a, 0x16, 0x48,
	0x6f, 0x73, 0x74, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x52,
	0x04, 0x68, 0x6f, 0x73, 0x74, 0x22, 0x4a, 0x0a, 0x17, 0x48, 0x6f, 0x73, 0x74, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2f, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x71, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x22, 0x34, 0x0a, 0x12, 0x48, 0x6f, 0x73, 0x74, 0x47, 0x65, 0x74, 0x44, 0x65, 0x65, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x48, 0x6f, 0x73,
	0x74, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x22, 0x35, 0x0a, 0x13, 0x48, 0x6f, 0x73, 0x74, 0x47,
	0x65, 0x74, 0x44, 0x65, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e,
	0x0a, 0x04, 0x64, 0x65, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x68,
	0x6f, 0x73, 0x74, 0x2e, 0x44, 0x65, 0x65, 0x64, 0x52, 0x04, 0x64, 0x65, 0x65, 0x64, 0x22, 0x24,
	0x0a, 0x12, 0x48, 0x6f, 0x73, 0x74, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x35, 0x0a, 0x13, 0x48, 0x6f, 0x73, 0x74, 0x47, 0x65, 0x74, 0x48,
	0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x04, 0x68,
	0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x68, 0x6f, 0x73, 0x74,
	0x2e, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x22, 0x3d, 0x0a, 0x13, 0x48,
	0x6f, 0x73, 0x74, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x26, 0x0a, 0x01, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x68, 0x6f, 0x73, 0x74, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43,
	0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x01, 0x72, 0x22, 0x3b, 0x0a, 0x14, 0x48, 0x6f,
	0x73, 0x74, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x23, 0x0a, 0x05, 0x68, 0x6f, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x71,
	0x52, 0x05, 0x68, 0x6f, 0x73, 0x74, 0x73, 0x22, 0x1e, 0x0a, 0x1c, 0x48, 0x6f, 0x73, 0x74, 0x47,
	0x65, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x57, 0x68, 0x69, 0x74, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x57, 0x0a, 0x1d, 0x48, 0x6f, 0x73, 0x74, 0x47,
	0x65, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x57, 0x68, 0x69, 0x74, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x0c, 0x6e, 0x65, 0x73, 0x74,
	0x65, 0x64, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x48, 0x6f, 0x73, 0x74,
	0x53, 0x65, 0x71, 0x52, 0x0b, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x48, 0x6f, 0x73, 0x74, 0x73,
	0x22, 0x35, 0x0a, 0x13, 0x48, 0x6f, 0x73, 0x74, 0x47, 0x65, 0x74, 0x4f, 0x77, 0x6e, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x48, 0x6f, 0x73,
	0x74, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x22, 0x39, 0x0a, 0x14, 0x48, 0x6f, 0x73, 0x74, 0x47,
	0x65, 0x74, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x21, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x05, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x22, 0x35, 0x0a, 0x13, 0x48, 0x6f, 0x73, 0x74, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x04, 0x68, 0x6f, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x48,
	0x6f, 0x73, 0x74, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x22, 0x3b, 0x0a, 0x14, 0x48, 0x6f, 0x73,
	0x74, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x23, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x63, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x53, 0x65, 0x71, 0x52,
	0x05, 0x70, 0x72, 0x6f, 0x63, 0x73, 0x22, 0x40, 0x0a, 0x1e, 0x48, 0x6f, 0x73, 0x74, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x48, 0x6f,
	0x73, 0x74, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x22, 0x73, 0x0a, 0x1f, 0x48, 0x6f, 0x73, 0x74,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x11, 0x72,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x50,
	0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x50,
	0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x71, 0x52, 0x10, 0x72, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x31, 0x0a,
	0x0f, 0x48, 0x6f, 0x73, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1e, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74,
	0x22, 0x12, 0x0a, 0x10, 0x48, 0x6f, 0x73, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x33, 0x0a, 0x11, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x62, 0x6f,
	0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x04, 0x68, 0x6f, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x48,
	0x6f, 0x73, 0x74, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x22, 0x14, 0x0a, 0x12, 0x48, 0x6f, 0x73,
	0x74, 0x52, 0x65, 0x62, 0x6f, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x3b, 0x0a, 0x19, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x62, 0x6f, 0x6f, 0x74, 0x57, 0x68, 0x65,
	0x6e, 0x49, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x04,
	0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x68, 0x6f, 0x73,
	0x74, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x22, 0x1c, 0x0a, 0x1a,
	0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x62, 0x6f, 0x6f, 0x74, 0x57, 0x68, 0x65, 0x6e, 0x49, 0x64,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x70, 0x0a, 0x18, 0x48, 0x6f,
	0x73, 0x74, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x54, 0x6f, 0x4a, 0x6f, 0x62, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x48, 0x6f, 0x73, 0x74,
	0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x63, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x63,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x22, 0x31, 0x0a, 0x19,
	0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x54, 0x6f, 0x4a, 0x6f,
	0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x4b, 0x0a, 0x15, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x54, 0x61, 0x67,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x48, 0x6f,
	0x73, 0x74, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0x18, 0x0a, 0x16,
	0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x68, 0x0a, 0x14, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65,
	0x6e, 0x61, 0x6d, 0x65, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e,
	0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x68,
	0x6f, 0x73, 0x74, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x6f, 0x6c, 0x64, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6f, 0x6c, 0x64, 0x54, 0x61, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x65, 0x77, 0x5f, 0x74,
	0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x65, 0x77, 0x54, 0x61, 0x67,
	0x22, 0x17, 0x0a, 0x15, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x54, 0x61,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5f, 0x0a, 0x18, 0x48, 0x6f, 0x73,
	0x74, 0x53, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x52,
	0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x6c,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x1b, 0x0a, 0x19, 0x48, 0x6f,
	0x73, 0x74, 0x53, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x68, 0x0a, 0x1b, 0x48, 0x6f, 0x73, 0x74, 0x53,
	0x65, 0x74, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x48, 0x6f, 0x73, 0x74,
	0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x48, 0x61, 0x72,
	0x64, 0x77, 0x61, 0x72, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x22, 0x1e, 0x0a, 0x1c, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x74, 0x48, 0x61, 0x72, 0x64,
	0x77, 0x61, 0x72, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x42, 0x0a, 0x10, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x74, 0x4f, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x52,
	0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x6f, 0x73, 0x22, 0x13, 0x0a, 0x11, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x74,
	0x4f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x60, 0x0a, 0x18, 0x48, 0x6f,
	0x73, 0x74, 0x53, 0x65, 0x74, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x48, 0x6f, 0x73, 0x74,
	0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x54, 0x68, 0x72, 0x65,
	0x61, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x22, 0x1b, 0x0a, 0x19,
	0x48, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x74, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x6f, 0x64,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x33, 0x0a, 0x11, 0x48, 0x6f, 0x73,
	0x74, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e,
	0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x68,
	0x6f, 0x73, 0x74, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x22, 0x14,
	0x0a, 0x12, 0x48, 0x6f, 0x73, 0x74, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x37, 0x0a, 0x12, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x05, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x68, 0x6f, 0x73, 0x74,
	0x2e, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x22, 0x15, 0x0a,
	0x13, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x39, 0x0a, 0x14, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x47, 0x65, 0x74,
	0x44, 0x65, 0x65, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x05,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x68, 0x6f,
	0x73, 0x74, 0x2e, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x22,
	0x3c, 0x0a, 0x15, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x47, 0x65, 0x74, 0x44, 0x65, 0x65, 0x64, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x05, 0x64, 0x65, 0x65, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x44,
	0x65, 0x65, 0x64, 0x53, 0x65, 0x71, 0x52, 0x05, 0x64, 0x65, 0x65, 0x64, 0x73, 0x22, 0x39, 0x0a,
	0x14, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x4f, 0x77, 0x6e, 0x65,
	0x72, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x22, 0x3c, 0x0a, 0x15, 0x4f, 0x77, 0x6e, 0x65,
	0x72, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x23, 0x0a, 0x05, 0x68, 0x6f, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x71, 0x52,
	0x05, 0x68, 0x6f, 0x73, 0x74, 0x73, 0x22, 0x2a, 0x0a, 0x14, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x47,
	0x65, 0x74, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0x3a, 0x0a, 0x15, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x47, 0x65, 0x74, 0x4f, 0x77,
	0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x05, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x68, 0x6f, 0x73,
	0x74, 0x2e, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x22, 0x4c,
	0x0a, 0x13, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x53, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x4f, 0x77, 0x6e, 0x65,
	0x72, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x68, 0x6f, 0x77,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x68, 0x6f, 0x77, 0x22, 0x16, 0x0a, 0x14,
	0x4f, 0x77, 0x6e, 0x65, 0x72, 0x53, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x52, 0x0a, 0x19, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x54, 0x61, 0x6b,
	0x65, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x21, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x05, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x22, 0x1c, 0x0a, 0x1a, 0x4f, 0x77, 0x6e, 0x65,
	0x72, 0x54, 0x61, 0x6b, 0x65, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3a, 0x0a, 0x18, 0x50, 0x72, 0x6f, 0x63, 0x43, 0x6c,
	0x65, 0x61, 0x72, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1e, 0x0a, 0x04, 0x70, 0x72, 0x6f, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x52, 0x04, 0x70, 0x72,
	0x6f, 0x63, 0x22, 0x31, 0x0a, 0x19, 0x50, 0x72, 0x6f, 0x63, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x52,
	0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x35, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x63, 0x47, 0x65, 0x74,
	0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x04,
	0x70, 0x72, 0x6f, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x68, 0x6f, 0x73,
	0x74, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x52, 0x04, 0x70, 0x72, 0x6f, 0x63, 0x22, 0x38, 0x0a, 0x14,
	0x50, 0x72, 0x6f, 0x63, 0x47, 0x65, 0x74, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x05, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52,
	0x05, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x22, 0x34, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x63, 0x47, 0x65,
	0x74, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x04,
	0x70, 0x72, 0x6f, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x68, 0x6f, 0x73,
	0x74, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x52, 0x04, 0x70, 0x72, 0x6f, 0x63, 0x22, 0x35, 0x0a, 0x13,
	0x50, 0x72, 0x6f, 0x63, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x04, 0x68,
	0x6f, 0x73, 0x74, 0x22, 0x33, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x63, 0x47, 0x65, 0x74, 0x4a, 0x6f,
	0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x04, 0x70, 0x72, 0x6f, 0x63,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x50, 0x72,
	0x6f, 0x63, 0x52, 0x04, 0x70, 0x72, 0x6f, 0x63, 0x22, 0x30, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x63,
	0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a,
	0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x6a, 0x6f,
	0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x22, 0x35, 0x0a, 0x13, 0x50, 0x72,
	0x6f, 0x63, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1e, 0x0a, 0x04, 0x70, 0x72, 0x6f, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x52, 0x04, 0x70, 0x72, 0x6f,
	0x63, 0x22, 0x38, 0x0a, 0x14, 0x50, 0x72, 0x6f, 0x63, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x79, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x05, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c,
	0x61, 0x79, 0x65, 0x72, 0x52, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x22, 0x3d, 0x0a, 0x13, 0x50,
	0x72, 0x6f, 0x63, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x26, 0x0a, 0x01, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x68, 0x6f, 0x73, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43,
	0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x01, 0x72, 0x22, 0x3b, 0x0a, 0x14, 0x50, 0x72,
	0x6f, 0x63, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x23, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x63, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x53, 0x65, 0x71,
	0x52, 0x05, 0x70, 0x72, 0x6f, 0x63, 0x73, 0x22, 0x31, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x63, 0x4b,
	0x69, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x04, 0x70, 0x72,
	0x6f, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e,
	0x50, 0x72, 0x6f, 0x63, 0x52, 0x04, 0x70, 0x72, 0x6f, 0x63, 0x22, 0x12, 0x0a, 0x10, 0x50, 0x72,
	0x6f, 0x63, 0x4b, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6b,
	0x0a, 0x1a, 0x50, 0x72, 0x6f, 0x63, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x54, 0x6f,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x04,
	0x70, 0x72, 0x6f, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x68, 0x6f, 0x73,
	0x74, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x52, 0x04, 0x70, 0x72, 0x6f, 0x63, 0x12, 0x19, 0x0a, 0x08,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6c, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6b, 0x69, 0x6c, 0x6c, 0x22, 0x33, 0x0a, 0x1b, 0x50,
	0x72, 0x6f, 0x63, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x54, 0x6f, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x65, 0x0a, 0x18, 0x50, 0x72, 0x6f, 0x63, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x54, 0x6f, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x04,
	0x70, 0x72, 0x6f, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x68, 0x6f, 0x73,
	0x74, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x52, 0x04, 0x70, 0x72, 0x6f, 0x63, 0x12, 0x15, 0x0a, 0x06,
	0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f,
	0x62, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6c, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x04, 0x6b, 0x69, 0x6c, 0x6c, 0x22, 0x31, 0x0a, 0x19, 0x50, 0x72, 0x6f, 0x63, 0x52,
	0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x54, 0x6f, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x47, 0x0a, 0x11, 0x50, 0x72,
	0x6f, 0x63, 0x55, 0x6e, 0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1e, 0x0a, 0x04, 0x70, 0x72, 0x6f, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x68, 0x6f, 0x73, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x52, 0x04, 0x70, 0x72, 0x6f, 0x63, 0x12,
	0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6c, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6b,
	0x69, 0x6c, 0x6c, 0x22, 0x14, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x63, 0x55, 0x6e, 0x62, 0x6f, 0x6f,
	0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x54, 0x0a, 0x16, 0x50, 0x72, 0x6f,
	0x63, 0x55, 0x6e, 0x62, 0x6f, 0x6f, 0x6b, 0x50, 0x72, 0x6f, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x01, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x01, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6b,
	0x69, 0x6c, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6b, 0x69, 0x6c, 0x6c, 0x22,
	0x36, 0x0a, 0x17, 0x50, 0x72, 0x6f, 0x63, 0x55, 0x6e, 0x62, 0x6f, 0x6f, 0x6b, 0x50, 0x72, 0x6f,
	0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x75,
	0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6e,
	0x75, 0x6d, 0x50, 0x72, 0x6f, 0x63, 0x73, 0x22, 0x75, 0x0a, 0x16, 0x50, 0x72, 0x6f, 0x63, 0x55,
	0x6e, 0x62, 0x6f, 0x6f, 0x6b, 0x54, 0x6f, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x26, 0x0a, 0x01, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x68,
	0x6f, 0x73, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x72,
	0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x01, 0x72, 0x12, 0x1f, 0x0a, 0x04, 0x6a, 0x6f, 0x62,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f,
	0x62, 0x53, 0x65, 0x71, 0x52, 0x04, 0x6a, 0x6f, 0x62, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69,
	0x6c, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6b, 0x69, 0x6c, 0x6c, 0x22, 0x36,
	0x0a, 0x17, 0x50, 0x72, 0x6f, 0x63, 0x55, 0x6e, 0x62, 0x6f, 0x6f, 0x6b, 0x54, 0x6f, 0x4a, 0x6f,
	0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x75, 0x6d,
	0x5f, 0x70, 0x72, 0x6f, 0x63, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6e, 0x75,
	0x6d, 0x50, 0x72, 0x6f, 0x63, 0x73, 0x22, 0x78, 0x0a, 0x18, 0x50, 0x72, 0x6f, 0x63, 0x55, 0x6e,
	0x62, 0x6f, 0x6f, 0x6b, 0x54, 0x6f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x26, 0x0a, 0x01, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x68, 0x6f, 0x73, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43,
	0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x01, 0x72, 0x12, 0x20, 0x0a, 0x05, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x6b, 0x69, 0x6c, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6b, 0x69, 0x6c, 0x6c,
	0x22, 0x38, 0x0a, 0x19, 0x50, 0x72, 0x6f, 0x63, 0x55, 0x6e, 0x62, 0x6f, 0x6f, 0x6b, 0x54, 0x6f,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x6e, 0x75, 0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x6e, 0x75, 0x6d, 0x50, 0x72, 0x6f, 0x63, 0x73, 0x2a, 0x52, 0x0a, 0x0d, 0x48, 0x61,
	0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x06, 0x0a, 0x02, 0x55,
	0x50, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x4f, 0x57, 0x4e, 0x10, 0x01, 0x12, 0x0d, 0x0a,
	0x09, 0x52, 0x45, 0x42, 0x4f, 0x4f, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10,
	0x52, 0x45, 0x42, 0x4f, 0x4f, 0x54, 0x5f, 0x57, 0x48, 0x45, 0x4e, 0x5f, 0x49, 0x44, 0x4c, 0x45,
	0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x45, 0x50, 0x41, 0x49, 0x52, 0x10, 0x04, 0x2a, 0x40,
	0x0a, 0x0b, 0x48, 0x6f, 0x73, 0x74, 0x54, 0x61, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a,
	0x06, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x48, 0x41, 0x52,
	0x44, 0x57, 0x41, 0x52, 0x45, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x4c, 0x4c, 0x4f, 0x43,
	0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x48, 0x4f, 0x53, 0x54, 0x4e, 0x41, 0x4d, 0x45, 0x10, 0x03,
	0x2a, 0x33, 0x0a, 0x09, 0x4c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x08, 0x0a,
	0x04, 0x4f, 0x50, 0x45, 0x4e, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4c, 0x4f, 0x43, 0x4b, 0x45,
	0x44, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x4e, 0x49, 0x4d, 0x42, 0x59, 0x5f, 0x4c, 0x4f, 0x43,
	0x4b, 0x45, 0x44, 0x10, 0x02, 0x2a, 0x34, 0x0a, 0x0c, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x4a, 0x4f, 0x42, 0x5f, 0x52, 0x45, 0x44,
	0x49, 0x52, 0x45, 0x43, 0x54, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x47, 0x52, 0x4f, 0x55, 0x50,
	0x5f, 0x52, 0x45, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x10, 0x01, 0x2a, 0x20, 0x0a, 0x08, 0x52,
	0x75, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x44, 0x4c, 0x45, 0x10,
	0x00, 0x12, 0x0a, 0x0a, 0x06, 0x42, 0x4f, 0x4f, 0x4b, 0x45, 0x44, 0x10, 0x01, 0x2a, 0x2d, 0x0a,
	0x0a, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x41,
	0x55, 0x54, 0x4f, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4c, 0x4c, 0x10, 0x01, 0x12, 0x0c,
	0x0a, 0x08, 0x56, 0x41, 0x52, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x02, 0x32, 0xcf, 0x01, 0x0a,
	0x0d, 0x44, 0x65, 0x65, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12, 0x3b,
	0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x17, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e,
	0x44, 0x65, 0x65, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x18, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x44, 0x65, 0x65, 0x64, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x07, 0x47,
	0x65, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x18, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x44, 0x65,
	0x65, 0x64, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x19, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x44, 0x65, 0x65, 0x64, 0x47, 0x65, 0x74, 0x48,
	0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x08, 0x47,
	0x65, 0x74, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x44,
	0x65, 0x65, 0x64, 0x47, 0x65, 0x74, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x44, 0x65, 0x65, 0x64, 0x47, 0x65,
	0x74, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x8f,
	0x0d, 0x0a, 0x0d, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x12, 0x47, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1b,
	0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x68, 0x6f,
	0x73, 0x74, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x07, 0x41, 0x64, 0x64,
	0x54, 0x61, 0x67, 0x73, 0x12, 0x18, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x48, 0x6f, 0x73, 0x74,
	0x41, 0x64, 0x64, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19,
	0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x41, 0x64, 0x64, 0x54, 0x61, 0x67,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x06, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x12, 0x17, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x68,
	0x6f, 0x73, 0x74, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x08, 0x46, 0x69, 0x6e, 0x64, 0x48, 0x6f,
	0x73, 0x74, 0x12, 0x19, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x46, 0x69,
	0x6e, 0x64, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e,
	0x68, 0x6f, 0x73, 0x74, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x46, 0x69, 0x6e, 0x64, 0x48, 0x6f, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0b, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1c, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e,
	0x48, 0x6f, 0x73, 0x74, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x48, 0x6f,
	0x73, 0x74, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x44, 0x65, 0x65, 0x64,
	0x12, 0x18, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x47, 0x65, 0x74, 0x44,
	0x65, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x68, 0x6f, 0x73,
	0x74, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x47, 0x65, 0x74, 0x44, 0x65, 0x65, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x73, 0x74,
	0x12, 0x18, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x47, 0x65, 0x74, 0x48,
	0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x68, 0x6f, 0x73,
	0x74, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x73, 0x74,
	0x73, 0x12, 0x19, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x47, 0x65, 0x74,
	0x48, 0x6f, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x68,
	0x6f, 0x73, 0x74, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x48,
	0x6f, 0x73, 0x74, 0x57, 0x68, 0x69, 0x74, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x22, 0x2e,
	0x68, 0x6f, 0x73, 0x74, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x73, 0x74,
	0x57, 0x68, 0x69, 0x74, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x23, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x47, 0x65, 0x74,
	0x48, 0x6f, 0x73, 0x74, 0x57, 0x68, 0x69, 0x74, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x4f, 0x77, 0x6e,
	0x65, 0x72, 0x12, 0x19, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x47, 0x65,
	0x74, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e,
	0x68, 0x6f, 0x73, 0x74, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x47, 0x65, 0x74, 0x4f, 0x77, 0x6e, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x08, 0x47, 0x65, 0x74,
	0x50, 0x72, 0x6f, 0x63, 0x73, 0x12, 0x19, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x48, 0x6f, 0x73,
	0x74, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1a, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x47, 0x65, 0x74, 0x50,
	0x72, 0x6f, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x24, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x68, 0x6f, 0x73, 0x74,
	0x2e, 0x48, 0x6f, 0x73, 0x74, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x50, 0x61,
	0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x35, 0x0a, 0x04, 0x4c, 0x6f, 0x63, 0x6b, 0x12, 0x15, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e,
	0x48, 0x6f, 0x73, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x06, 0x52, 0x65, 0x62, 0x6f, 0x6f,
	0x74, 0x12, 0x17, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x62,
	0x6f, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x68, 0x6f, 0x73,
	0x74, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x62, 0x6f, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x0e, 0x52, 0x65, 0x62, 0x6f, 0x6f, 0x74, 0x57, 0x68,
	0x65, 0x6e, 0x49, 0x64, 0x6c, 0x65, 0x12, 0x1f, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x48, 0x6f,
	0x73, 0x74, 0x52, 0x65, 0x62, 0x6f, 0x6f, 0x74, 0x57, 0x68, 0x65, 0x6e, 0x49, 0x64, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x48,
	0x6f, 0x73, 0x74, 0x52, 0x65, 0x62, 0x6f, 0x6f, 0x74, 0x57, 0x68, 0x65, 0x6e, 0x49, 0x64, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x0d, 0x52, 0x65, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x54, 0x6f, 0x4a, 0x6f, 0x62, 0x12, 0x1e, 0x2e, 0x68, 0x6f, 0x73,
	0x74, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x54, 0x6f,
	0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x68, 0x6f, 0x73,
	0x74, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x54, 0x6f,
	0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0a, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x54, 0x61, 0x67, 0x73, 0x12, 0x1b, 0x2e, 0x68, 0x6f, 0x73, 0x74,
	0x2e, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x54, 0x61, 0x67, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x48, 0x6f,
	0x73, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x09, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x54, 0x61,
	0x67, 0x12, 0x1a, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x6e,
	0x61, 0x6d, 0x65, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e,
	0x68, 0x6f, 0x73, 0x74, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x54,
	0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x0d, 0x53, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x2e, 0x68, 0x6f,
	0x73, 0x74, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x68, 0x6f,
	0x73, 0x74, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10,
	0x53, 0x65, 0x74, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x21, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x74, 0x48,
	0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x53,
	0x65, 0x74, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x05, 0x53, 0x65, 0x74, 0x4f, 0x73,
	0x12, 0x16, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x74, 0x4f,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e,
	0x48, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x74, 0x4f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x50, 0x0a, 0x0d, 0x53, 0x65, 0x74, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x6f,
	0x64, 0x65, 0x12, 0x1e, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x65,
	0x74, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x65,
	0x74, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x06, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x17, 0x2e,
	0x68, 0x6f, 0x73, 0x74, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x48, 0x6f,
	0x73, 0x74, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x32, 0xb4, 0x03, 0x0a, 0x0e, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x12, 0x3d, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x18, 0x2e,
	0x68, 0x6f, 0x73, 0x74, 0x2e, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x4f,
	0x77, 0x6e, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x43, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x44, 0x65, 0x65, 0x64, 0x73, 0x12, 0x1a,
	0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x47, 0x65, 0x74, 0x44, 0x65,
	0x65, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x68, 0x6f, 0x73,
	0x74, 0x2e, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x47, 0x65, 0x74, 0x44, 0x65, 0x65, 0x64, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x48, 0x6f,
	0x73, 0x74, 0x73, 0x12, 0x1a, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x4f, 0x77, 0x6e, 0x65, 0x72,
	0x47, 0x65, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1b, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x47, 0x65, 0x74, 0x48,
	0x6f, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x08,
	0x47, 0x65, 0x74, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x1a, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e,
	0x4f, 0x77, 0x6e, 0x65, 0x72, 0x47, 0x65, 0x74, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x4f, 0x77, 0x6e, 0x65,
	0x72, 0x47, 0x65, 0x74, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x40, 0x0a, 0x07, 0x53, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x12, 0x19, 0x2e, 0x68,
	0x6f, 0x73, 0x74, 0x2e, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x53, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x77,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x4f,
	0x77, 0x6e, 0x65, 0x72, 0x53, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x0d, 0x54, 0x61, 0x6b, 0x65, 0x4f, 0x77, 0x6e, 0x65, 0x72,
	0x73, 0x68, 0x69, 0x70, 0x12, 0x1f, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x4f, 0x77, 0x6e, 0x65,
	0x72, 0x54, 0x61, 0x6b, 0x65, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x4f, 0x77, 0x6e,
	0x65, 0x72, 0x54, 0x61, 0x6b, 0x65, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xaf, 0x07, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x63,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12, 0x50, 0x0a, 0x0d, 0x43, 0x6c, 0x65,
	0x61, 0x72, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x12, 0x1e, 0x2e, 0x68, 0x6f, 0x73,
	0x74, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x52, 0x65, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x68, 0x6f, 0x73,
	0x74, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x52, 0x65, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x08, 0x47,
	0x65, 0x74, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x50,
	0x72, 0x6f, 0x63, 0x47, 0x65, 0x74, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x47, 0x65,
	0x74, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e,
	0x0a, 0x07, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x18, 0x2e, 0x68, 0x6f, 0x73, 0x74,
	0x2e, 0x50, 0x72, 0x6f, 0x63, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x47,
	0x65, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b,
	0x0a, 0x06, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x12, 0x17, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e,
	0x50, 0x72, 0x6f, 0x63, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x18, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x47, 0x65, 0x74,
	0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x08, 0x47,
	0x65, 0x74, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x50,
	0x72, 0x6f, 0x63, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x47, 0x65,
	0x74, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41,
	0x0a, 0x08, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x73, 0x12, 0x19, 0x2e, 0x68, 0x6f, 0x73,
	0x74, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x50, 0x72, 0x6f,
	0x63, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x35, 0x0a, 0x04, 0x4b, 0x69, 0x6c, 0x6c, 0x12, 0x15, 0x2e, 0x68, 0x6f, 0x73, 0x74,
	0x2e, 0x50, 0x72, 0x6f, 0x63, 0x4b, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x4b, 0x69, 0x6c, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x0f, 0x52, 0x65, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x54, 0x6f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x20, 0x2e, 0x68, 0x6f,
	0x73, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x54,
	0x6f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e,
	0x68, 0x6f, 0x73, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x54, 0x6f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x50, 0x0a, 0x0d, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x54, 0x6f, 0x4a, 0x6f,
	0x62, 0x12, 0x1e, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x52, 0x65, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x54, 0x6f, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1f, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x52, 0x65, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x54, 0x6f, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3b, 0x0a, 0x06, 0x55, 0x6e, 0x62, 0x6f, 0x6f, 0x6b, 0x12, 0x17, 0x2e, 0x68,
	0x6f, 0x73, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x55, 0x6e, 0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x50, 0x72, 0x6f,
	0x63, 0x55, 0x6e, 0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4a, 0x0a, 0x0b, 0x55, 0x6e, 0x62, 0x6f, 0x6f, 0x6b, 0x50, 0x72, 0x6f, 0x63, 0x73, 0x12, 0x1c,
	0x2e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x55, 0x6e, 0x62, 0x6f, 0x6f, 0x6b,
	0x50, 0x72, 0x6f, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x68,
	0x6f, 0x73, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x55, 0x6e, 0x62, 0x6f, 0x6f, 0x6b, 0x50, 0x72,
	0x6f, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x0d, 0x55,
	0x6e, 0x62, 0x6f, 0x6f, 0x6b, 0x54, 0x6f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1e, 0x2e, 0x68,
	0x6f, 0x73, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x55, 0x6e, 0x62, 0x6f, 0x6f, 0x6b, 0x54, 0x6f,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x68,
	0x6f, 0x73, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x55, 0x6e, 0x62, 0x6f, 0x6f, 0x6b, 0x54, 0x6f,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a,
	0x0b, 0x55, 0x6e, 0x62, 0x6f, 0x6f, 0x6b, 0x54, 0x6f, 0x4a, 0x6f, 0x62, 0x12, 0x1c, 0x2e, 0x68,
	0x6f, 0x73, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x55, 0x6e, 0x62, 0x6f, 0x6f, 0x6b, 0x54, 0x6f,
	0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x68, 0x6f, 0x73,
	0x74, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x55, 0x6e, 0x62, 0x6f, 0x6f, 0x6b, 0x54, 0x6f, 0x4a, 0x6f,
	0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x2e, 0x0a, 0x1e, 0x63, 0x6f, 0x6d,
	0x2e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x2e, 0x73, 0x70, 0x63, 0x75,
	0x65, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x50, 0x01, 0x5a, 0x0a, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x68, 0x6f, 0x73, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_OpenCue_proto_host_proto_rawDescOnce sync.Once
	file_OpenCue_proto_host_proto_rawDescData = file_OpenCue_proto_host_proto_rawDesc
)

func file_OpenCue_proto_host_proto_rawDescGZIP() []byte {
	file_OpenCue_proto_host_proto_rawDescOnce.Do(func() {
		file_OpenCue_proto_host_proto_rawDescData = protoimpl.X.CompressGZIP(file_OpenCue_proto_host_proto_rawDescData)
	})
	return file_OpenCue_proto_host_proto_rawDescData
}

var file_OpenCue_proto_host_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_OpenCue_proto_host_proto_msgTypes = make([]protoimpl.MessageInfo, 104)
var file_OpenCue_proto_host_proto_goTypes = []interface{}{
	(HardwareState)(0),                              // 0: host.HardwareState
	(HostTagType)(0),                                // 1: host.HostTagType
	(LockState)(0),                                  // 2: host.LockState
	(RedirectType)(0),                               // 3: host.RedirectType
	(RunState)(0),                                   // 4: host.RunState
	(ThreadMode)(0),                                 // 5: host.ThreadMode
	(*Deed)(nil),                                    // 6: host.Deed
	(*DeedSeq)(nil),                                 // 7: host.DeedSeq
	(*HardwareStateSeq)(nil),                        // 8: host.HardwareStateSeq
	(*Host)(nil),                                    // 9: host.Host
	(*HostSearchCriteria)(nil),                      // 10: host.HostSearchCriteria
	(*HostSeq)(nil),                                 // 11: host.HostSeq
	(*NestedHost)(nil),                              // 12: host.NestedHost
	(*NestedHostSeq)(nil),                           // 13: host.NestedHostSeq
	(*NestedProc)(nil),                              // 14: host.NestedProc
	(*NestedProcSeq)(nil),                           // 15: host.NestedProcSeq
	(*Owner)(nil),                                   // 16: host.Owner
	(*Proc)(nil),                                    // 17: host.Proc
	(*ProcSearchCriteria)(nil),                      // 18: host.ProcSearchCriteria
	(*ProcSeq)(nil),                                 // 19: host.ProcSeq
	(*DeedDeleteRequest)(nil),                       // 20: host.DeedDeleteRequest
	(*DeedDeleteResponse)(nil),                      // 21: host.DeedDeleteResponse
	(*DeedGetHostRequest)(nil),                      // 22: host.DeedGetHostRequest
	(*DeedGetHostResponse)(nil),                     // 23: host.DeedGetHostResponse
	(*DeedGetOwnerRequest)(nil),                     // 24: host.DeedGetOwnerRequest
	(*DeedGetOwnerResponse)(nil),                    // 25: host.DeedGetOwnerResponse
	(*HostAddCommentRequest)(nil),                   // 26: host.HostAddCommentRequest
	(*HostAddCommentResponse)(nil),                  // 27: host.HostAddCommentResponse
	(*HostAddTagsRequest)(nil),                      // 28: host.HostAddTagsRequest
	(*HostAddTagsResponse)(nil),                     // 29: host.HostAddTagsResponse
	(*HostDeleteRequest)(nil),                       // 30: host.HostDeleteRequest
	(*HostDeleteResponse)(nil),                      // 31: host.HostDeleteResponse
	(*HostFindHostRequest)(nil),                     // 32: host.HostFindHostRequest
	(*HostFindHostResponse)(nil),                    // 33: host.HostFindHostResponse
	(*HostGetCommentsRequest)(nil),                  // 34: host.HostGetCommentsRequest
	(*HostGetCommentsResponse)(nil),                 // 35: host.HostGetCommentsResponse
	(*HostGetDeedRequest)(nil),                      // 36: host.HostGetDeedRequest
	(*HostGetDeedResponse)(nil),                     // 37: host.HostGetDeedResponse
	(*HostGetHostRequest)(nil),                      // 38: host.HostGetHostRequest
	(*HostGetHostResponse)(nil),                     // 39: host.HostGetHostResponse
	(*HostGetHostsRequest)(nil),                     // 40: host.HostGetHostsRequest
	(*HostGetHostsResponse)(nil),                    // 41: host.HostGetHostsResponse
	(*HostGetHostWhiteboardRequest)(nil),            // 42: host.HostGetHostWhiteboardRequest
	(*HostGetHostWhiteboardResponse)(nil),           // 43: host.HostGetHostWhiteboardResponse
	(*HostGetOwnerRequest)(nil),                     // 44: host.HostGetOwnerRequest
	(*HostGetOwnerResponse)(nil),                    // 45: host.HostGetOwnerResponse
	(*HostGetProcsRequest)(nil),                     // 46: host.HostGetProcsRequest
	(*HostGetProcsResponse)(nil),                    // 47: host.HostGetProcsResponse
	(*HostGetRenderPartitionsRequest)(nil),          // 48: host.HostGetRenderPartitionsRequest
	(*HostGetRenderPartitionsResponse)(nil),         // 49: host.HostGetRenderPartitionsResponse
	(*HostLockRequest)(nil),                         // 50: host.HostLockRequest
	(*HostLockResponse)(nil),                        // 51: host.HostLockResponse
	(*HostRebootRequest)(nil),                       // 52: host.HostRebootRequest
	(*HostRebootResponse)(nil),                      // 53: host.HostRebootResponse
	(*HostRebootWhenIdleRequest)(nil),               // 54: host.HostRebootWhenIdleRequest
	(*HostRebootWhenIdleResponse)(nil),              // 55: host.HostRebootWhenIdleResponse
	(*HostRedirectToJobRequest)(nil),                // 56: host.HostRedirectToJobRequest
	(*HostRedirectToJobResponse)(nil),               // 57: host.HostRedirectToJobResponse
	(*HostRemoveTagsRequest)(nil),                   // 58: host.HostRemoveTagsRequest
	(*HostRemoveTagsResponse)(nil),                  // 59: host.HostRemoveTagsResponse
	(*HostRenameTagRequest)(nil),                    // 60: host.HostRenameTagRequest
	(*HostRenameTagResponse)(nil),                   // 61: host.HostRenameTagResponse
	(*HostSetAllocationRequest)(nil),                // 62: host.HostSetAllocationRequest
	(*HostSetAllocationResponse)(nil),               // 63: host.HostSetAllocationResponse
	(*HostSetHardwareStateRequest)(nil),             // 64: host.HostSetHardwareStateRequest
	(*HostSetHardwareStateResponse)(nil),            // 65: host.HostSetHardwareStateResponse
	(*HostSetOsRequest)(nil),                        // 66: host.HostSetOsRequest
	(*HostSetOsResponse)(nil),                       // 67: host.HostSetOsResponse
	(*HostSetThreadModeRequest)(nil),                // 68: host.HostSetThreadModeRequest
	(*HostSetThreadModeResponse)(nil),               // 69: host.HostSetThreadModeResponse
	(*HostUnlockRequest)(nil),                       // 70: host.HostUnlockRequest
	(*HostUnlockResponse)(nil),                      // 71: host.HostUnlockResponse
	(*OwnerDeleteRequest)(nil),                      // 72: host.OwnerDeleteRequest
	(*OwnerDeleteResponse)(nil),                     // 73: host.OwnerDeleteResponse
	(*OwnerGetDeedsRequest)(nil),                    // 74: host.OwnerGetDeedsRequest
	(*OwnerGetDeedsResponse)(nil),                   // 75: host.OwnerGetDeedsResponse
	(*OwnerGetHostsRequest)(nil),                    // 76: host.OwnerGetHostsRequest
	(*OwnerGetHostsResponse)(nil),                   // 77: host.OwnerGetHostsResponse
	(*OwnerGetOwnerRequest)(nil),                    // 78: host.OwnerGetOwnerRequest
	(*OwnerGetOwnerResponse)(nil),                   // 79: host.OwnerGetOwnerResponse
	(*OwnerSetShowRequest)(nil),                     // 80: host.OwnerSetShowRequest
	(*OwnerSetShowResponse)(nil),                    // 81: host.OwnerSetShowResponse
	(*OwnerTakeOwnershipRequest)(nil),               // 82: host.OwnerTakeOwnershipRequest
	(*OwnerTakeOwnershipResponse)(nil),              // 83: host.OwnerTakeOwnershipResponse
	(*ProcClearRedirectRequest)(nil),                // 84: host.ProcClearRedirectRequest
	(*ProcClearRedirectResponse)(nil),               // 85: host.ProcClearRedirectResponse
	(*ProcGetFrameRequest)(nil),                     // 86: host.ProcGetFrameRequest
	(*ProcGetFrameResponse)(nil),                    // 87: host.ProcGetFrameResponse
	(*ProcGetHostRequest)(nil),                      // 88: host.ProcGetHostRequest
	(*ProcGetHostResponse)(nil),                     // 89: host.ProcGetHostResponse
	(*ProcGetJobRequest)(nil),                       // 90: host.ProcGetJobRequest
	(*ProcGetJobResponse)(nil),                      // 91: host.ProcGetJobResponse
	(*ProcGetLayerRequest)(nil),                     // 92: host.ProcGetLayerRequest
	(*ProcGetLayerResponse)(nil),                    // 93: host.ProcGetLayerResponse
	(*ProcGetProcsRequest)(nil),                     // 94: host.ProcGetProcsRequest
	(*ProcGetProcsResponse)(nil),                    // 95: host.ProcGetProcsResponse
	(*ProcKillRequest)(nil),                         // 96: host.ProcKillRequest
	(*ProcKillResponse)(nil),                        // 97: host.ProcKillResponse
	(*ProcRedirectToGroupRequest)(nil),              // 98: host.ProcRedirectToGroupRequest
	(*ProcRedirectToGroupResponse)(nil),             // 99: host.ProcRedirectToGroupResponse
	(*ProcRedirectToJobRequest)(nil),                // 100: host.ProcRedirectToJobRequest
	(*ProcRedirectToJobResponse)(nil),               // 101: host.ProcRedirectToJobResponse
	(*ProcUnbookRequest)(nil),                       // 102: host.ProcUnbookRequest
	(*ProcUnbookResponse)(nil),                      // 103: host.ProcUnbookResponse
	(*ProcUnbookProcsRequest)(nil),                  // 104: host.ProcUnbookProcsRequest
	(*ProcUnbookProcsResponse)(nil),                 // 105: host.ProcUnbookProcsResponse
	(*ProcUnbookToJobRequest)(nil),                  // 106: host.ProcUnbookToJobRequest
	(*ProcUnbookToJobResponse)(nil),                 // 107: host.ProcUnbookToJobResponse
	(*ProcUnbookToGroupRequest)(nil),                // 108: host.ProcUnbookToGroupRequest
	(*ProcUnbookToGroupResponse)(nil),               // 109: host.ProcUnbookToGroupResponse
	(*criterion.InRangeIntegerSearchCriterion)(nil), // 110: criterion.InRangeIntegerSearchCriterion
	(*comment.Comment)(nil),                         // 111: comment.Comment
	(*comment.CommentSeq)(nil),                      // 112: comment.CommentSeq
	(*renderPartition.RenderPartitionSeq)(nil),      // 113: renderPartition.RenderPartitionSeq
	(*job_proto.Frame)(nil),                         // 114: job.Frame
	(*job_proto.Job)(nil),                           // 115: job.Job
	(*job_proto.Layer)(nil),                         // 116: job.Layer
	(*job_proto.JobSeq)(nil),                        // 117: job.JobSeq
	(*job_proto.Group)(nil),                         // 118: job.Group
}
var file_OpenCue_proto_host_proto_depIdxs = []int32{
	6,   // 0: host.DeedSeq.deeds:type_name -> host.Deed
	0,   // 1: host.HardwareStateSeq.state:type_name -> host.HardwareState
	0,   // 2: host.Host.state:type_name -> host.HardwareState
	2,   // 3: host.Host.lock_state:type_name -> host.LockState
	5,   // 4: host.Host.thread_mode:type_name -> host.ThreadMode
	8,   // 5: host.HostSearchCriteria.states:type_name -> host.HardwareStateSeq
	9,   // 6: host.HostSeq.hosts:type_name -> host.Host
	0,   // 7: host.NestedHost.state:type_name -> host.HardwareState
	2,   // 8: host.NestedHost.lock_state:type_name -> host.LockState
	5,   // 9: host.NestedHost.thread_mode:type_name -> host.ThreadMode
	15,  // 10: host.NestedHost.procs:type_name -> host.NestedProcSeq
	12,  // 11: host.NestedHostSeq.nested_hosts:type_name -> host.NestedHost
	12,  // 12: host.NestedProc.parent:type_name -> host.NestedHost
	14,  // 13: host.NestedProcSeq.nested_procs:type_name -> host.NestedProc
	110, // 14: host.ProcSearchCriteria.memory_range:type_name -> criterion.InRangeIntegerSearchCriterion
	110, // 15: host.ProcSearchCriteria.duration_range:type_name -> criterion.InRangeIntegerSearchCriterion
	17,  // 16: host.ProcSeq.procs:type_name -> host.Proc
	6,   // 17: host.DeedDeleteRequest.deed:type_name -> host.Deed
	6,   // 18: host.DeedGetHostRequest.deed:type_name -> host.Deed
	9,   // 19: host.DeedGetHostResponse.host:type_name -> host.Host
	6,   // 20: host.DeedGetOwnerRequest.deed:type_name -> host.Deed
	16,  // 21: host.DeedGetOwnerResponse.owner:type_name -> host.Owner
	9,   // 22: host.HostAddCommentRequest.host:type_name -> host.Host
	111, // 23: host.HostAddCommentRequest.new_comment:type_name -> comment.Comment
	9,   // 24: host.HostAddTagsRequest.host:type_name -> host.Host
	9,   // 25: host.HostDeleteRequest.host:type_name -> host.Host
	9,   // 26: host.HostFindHostResponse.host:type_name -> host.Host
	9,   // 27: host.HostGetCommentsRequest.host:type_name -> host.Host
	112, // 28: host.HostGetCommentsResponse.comments:type_name -> comment.CommentSeq
	9,   // 29: host.HostGetDeedRequest.host:type_name -> host.Host
	6,   // 30: host.HostGetDeedResponse.deed:type_name -> host.Deed
	9,   // 31: host.HostGetHostResponse.host:type_name -> host.Host
	10,  // 32: host.HostGetHostsRequest.r:type_name -> host.HostSearchCriteria
	11,  // 33: host.HostGetHostsResponse.hosts:type_name -> host.HostSeq
	13,  // 34: host.HostGetHostWhiteboardResponse.nested_hosts:type_name -> host.NestedHostSeq
	9,   // 35: host.HostGetOwnerRequest.host:type_name -> host.Host
	16,  // 36: host.HostGetOwnerResponse.owner:type_name -> host.Owner
	9,   // 37: host.HostGetProcsRequest.host:type_name -> host.Host
	19,  // 38: host.HostGetProcsResponse.procs:type_name -> host.ProcSeq
	9,   // 39: host.HostGetRenderPartitionsRequest.host:type_name -> host.Host
	113, // 40: host.HostGetRenderPartitionsResponse.render_partitions:type_name -> renderPartition.RenderPartitionSeq
	9,   // 41: host.HostLockRequest.host:type_name -> host.Host
	9,   // 42: host.HostRebootRequest.host:type_name -> host.Host
	9,   // 43: host.HostRebootWhenIdleRequest.host:type_name -> host.Host
	9,   // 44: host.HostRedirectToJobRequest.host:type_name -> host.Host
	9,   // 45: host.HostRemoveTagsRequest.host:type_name -> host.Host
	9,   // 46: host.HostRenameTagRequest.host:type_name -> host.Host
	9,   // 47: host.HostSetAllocationRequest.host:type_name -> host.Host
	9,   // 48: host.HostSetHardwareStateRequest.host:type_name -> host.Host
	0,   // 49: host.HostSetHardwareStateRequest.state:type_name -> host.HardwareState
	9,   // 50: host.HostSetOsRequest.host:type_name -> host.Host
	9,   // 51: host.HostSetThreadModeRequest.host:type_name -> host.Host
	5,   // 52: host.HostSetThreadModeRequest.mode:type_name -> host.ThreadMode
	9,   // 53: host.HostUnlockRequest.host:type_name -> host.Host
	16,  // 54: host.OwnerDeleteRequest.owner:type_name -> host.Owner
	16,  // 55: host.OwnerGetDeedsRequest.owner:type_name -> host.Owner
	7,   // 56: host.OwnerGetDeedsResponse.deeds:type_name -> host.DeedSeq
	16,  // 57: host.OwnerGetHostsRequest.owner:type_name -> host.Owner
	11,  // 58: host.OwnerGetHostsResponse.hosts:type_name -> host.HostSeq
	16,  // 59: host.OwnerGetOwnerResponse.owner:type_name -> host.Owner
	16,  // 60: host.OwnerSetShowRequest.owner:type_name -> host.Owner
	16,  // 61: host.OwnerTakeOwnershipRequest.owner:type_name -> host.Owner
	17,  // 62: host.ProcClearRedirectRequest.proc:type_name -> host.Proc
	17,  // 63: host.ProcGetFrameRequest.proc:type_name -> host.Proc
	114, // 64: host.ProcGetFrameResponse.frame:type_name -> job.Frame
	17,  // 65: host.ProcGetHostRequest.proc:type_name -> host.Proc
	9,   // 66: host.ProcGetHostResponse.host:type_name -> host.Host
	17,  // 67: host.ProcGetJobRequest.proc:type_name -> host.Proc
	115, // 68: host.ProcGetJobResponse.job:type_name -> job.Job
	17,  // 69: host.ProcGetLayerRequest.proc:type_name -> host.Proc
	116, // 70: host.ProcGetLayerResponse.layer:type_name -> job.Layer
	18,  // 71: host.ProcGetProcsRequest.r:type_name -> host.ProcSearchCriteria
	19,  // 72: host.ProcGetProcsResponse.procs:type_name -> host.ProcSeq
	17,  // 73: host.ProcKillRequest.proc:type_name -> host.Proc
	17,  // 74: host.ProcRedirectToGroupRequest.proc:type_name -> host.Proc
	17,  // 75: host.ProcRedirectToJobRequest.proc:type_name -> host.Proc
	17,  // 76: host.ProcUnbookRequest.proc:type_name -> host.Proc
	18,  // 77: host.ProcUnbookProcsRequest.r:type_name -> host.ProcSearchCriteria
	18,  // 78: host.ProcUnbookToJobRequest.r:type_name -> host.ProcSearchCriteria
	117, // 79: host.ProcUnbookToJobRequest.jobs:type_name -> job.JobSeq
	18,  // 80: host.ProcUnbookToGroupRequest.r:type_name -> host.ProcSearchCriteria
	118, // 81: host.ProcUnbookToGroupRequest.group:type_name -> job.Group
	20,  // 82: host.DeedInterface.Delete:input_type -> host.DeedDeleteRequest
	22,  // 83: host.DeedInterface.GetHost:input_type -> host.DeedGetHostRequest
	24,  // 84: host.DeedInterface.GetOwner:input_type -> host.DeedGetOwnerRequest
	26,  // 85: host.HostInterface.AddComment:input_type -> host.HostAddCommentRequest
	28,  // 86: host.HostInterface.AddTags:input_type -> host.HostAddTagsRequest
	30,  // 87: host.HostInterface.Delete:input_type -> host.HostDeleteRequest
	32,  // 88: host.HostInterface.FindHost:input_type -> host.HostFindHostRequest
	34,  // 89: host.HostInterface.GetComments:input_type -> host.HostGetCommentsRequest
	36,  // 90: host.HostInterface.GetDeed:input_type -> host.HostGetDeedRequest
	38,  // 91: host.HostInterface.GetHost:input_type -> host.HostGetHostRequest
	40,  // 92: host.HostInterface.GetHosts:input_type -> host.HostGetHostsRequest
	42,  // 93: host.HostInterface.GetHostWhiteboard:input_type -> host.HostGetHostWhiteboardRequest
	44,  // 94: host.HostInterface.GetOwner:input_type -> host.HostGetOwnerRequest
	46,  // 95: host.HostInterface.GetProcs:input_type -> host.HostGetProcsRequest
	48,  // 96: host.HostInterface.GetRenderPartitions:input_type -> host.HostGetRenderPartitionsRequest
	50,  // 97: host.HostInterface.Lock:input_type -> host.HostLockRequest
	52,  // 98: host.HostInterface.Reboot:input_type -> host.HostRebootRequest
	54,  // 99: host.HostInterface.RebootWhenIdle:input_type -> host.HostRebootWhenIdleRequest
	56,  // 100: host.HostInterface.RedirectToJob:input_type -> host.HostRedirectToJobRequest
	58,  // 101: host.HostInterface.RemoveTags:input_type -> host.HostRemoveTagsRequest
	60,  // 102: host.HostInterface.RenameTag:input_type -> host.HostRenameTagRequest
	62,  // 103: host.HostInterface.SetAllocation:input_type -> host.HostSetAllocationRequest
	64,  // 104: host.HostInterface.SetHardwareState:input_type -> host.HostSetHardwareStateRequest
	66,  // 105: host.HostInterface.SetOs:input_type -> host.HostSetOsRequest
	68,  // 106: host.HostInterface.SetThreadMode:input_type -> host.HostSetThreadModeRequest
	70,  // 107: host.HostInterface.Unlock:input_type -> host.HostUnlockRequest
	72,  // 108: host.OwnerInterface.Delete:input_type -> host.OwnerDeleteRequest
	74,  // 109: host.OwnerInterface.GetDeeds:input_type -> host.OwnerGetDeedsRequest
	76,  // 110: host.OwnerInterface.GetHosts:input_type -> host.OwnerGetHostsRequest
	78,  // 111: host.OwnerInterface.GetOwner:input_type -> host.OwnerGetOwnerRequest
	80,  // 112: host.OwnerInterface.SetShow:input_type -> host.OwnerSetShowRequest
	82,  // 113: host.OwnerInterface.TakeOwnership:input_type -> host.OwnerTakeOwnershipRequest
	84,  // 114: host.ProcInterface.ClearRedirect:input_type -> host.ProcClearRedirectRequest
	86,  // 115: host.ProcInterface.GetFrame:input_type -> host.ProcGetFrameRequest
	88,  // 116: host.ProcInterface.GetHost:input_type -> host.ProcGetHostRequest
	90,  // 117: host.ProcInterface.GetJob:input_type -> host.ProcGetJobRequest
	92,  // 118: host.ProcInterface.GetLayer:input_type -> host.ProcGetLayerRequest
	94,  // 119: host.ProcInterface.GetProcs:input_type -> host.ProcGetProcsRequest
	96,  // 120: host.ProcInterface.Kill:input_type -> host.ProcKillRequest
	98,  // 121: host.ProcInterface.RedirectToGroup:input_type -> host.ProcRedirectToGroupRequest
	100, // 122: host.ProcInterface.RedirectToJob:input_type -> host.ProcRedirectToJobRequest
	102, // 123: host.ProcInterface.Unbook:input_type -> host.ProcUnbookRequest
	104, // 124: host.ProcInterface.UnbookProcs:input_type -> host.ProcUnbookProcsRequest
	108, // 125: host.ProcInterface.UnbookToGroup:input_type -> host.ProcUnbookToGroupRequest
	106, // 126: host.ProcInterface.UnbookToJob:input_type -> host.ProcUnbookToJobRequest
	21,  // 127: host.DeedInterface.Delete:output_type -> host.DeedDeleteResponse
	23,  // 128: host.DeedInterface.GetHost:output_type -> host.DeedGetHostResponse
	25,  // 129: host.DeedInterface.GetOwner:output_type -> host.DeedGetOwnerResponse
	27,  // 130: host.HostInterface.AddComment:output_type -> host.HostAddCommentResponse
	29,  // 131: host.HostInterface.AddTags:output_type -> host.HostAddTagsResponse
	31,  // 132: host.HostInterface.Delete:output_type -> host.HostDeleteResponse
	33,  // 133: host.HostInterface.FindHost:output_type -> host.HostFindHostResponse
	35,  // 134: host.HostInterface.GetComments:output_type -> host.HostGetCommentsResponse
	37,  // 135: host.HostInterface.GetDeed:output_type -> host.HostGetDeedResponse
	39,  // 136: host.HostInterface.GetHost:output_type -> host.HostGetHostResponse
	41,  // 137: host.HostInterface.GetHosts:output_type -> host.HostGetHostsResponse
	43,  // 138: host.HostInterface.GetHostWhiteboard:output_type -> host.HostGetHostWhiteboardResponse
	45,  // 139: host.HostInterface.GetOwner:output_type -> host.HostGetOwnerResponse
	47,  // 140: host.HostInterface.GetProcs:output_type -> host.HostGetProcsResponse
	49,  // 141: host.HostInterface.GetRenderPartitions:output_type -> host.HostGetRenderPartitionsResponse
	51,  // 142: host.HostInterface.Lock:output_type -> host.HostLockResponse
	53,  // 143: host.HostInterface.Reboot:output_type -> host.HostRebootResponse
	55,  // 144: host.HostInterface.RebootWhenIdle:output_type -> host.HostRebootWhenIdleResponse
	57,  // 145: host.HostInterface.RedirectToJob:output_type -> host.HostRedirectToJobResponse
	59,  // 146: host.HostInterface.RemoveTags:output_type -> host.HostRemoveTagsResponse
	61,  // 147: host.HostInterface.RenameTag:output_type -> host.HostRenameTagResponse
	63,  // 148: host.HostInterface.SetAllocation:output_type -> host.HostSetAllocationResponse
	65,  // 149: host.HostInterface.SetHardwareState:output_type -> host.HostSetHardwareStateResponse
	67,  // 150: host.HostInterface.SetOs:output_type -> host.HostSetOsResponse
	69,  // 151: host.HostInterface.SetThreadMode:output_type -> host.HostSetThreadModeResponse
	71,  // 152: host.HostInterface.Unlock:output_type -> host.HostUnlockResponse
	73,  // 153: host.OwnerInterface.Delete:output_type -> host.OwnerDeleteResponse
	75,  // 154: host.OwnerInterface.GetDeeds:output_type -> host.OwnerGetDeedsResponse
	77,  // 155: host.OwnerInterface.GetHosts:output_type -> host.OwnerGetHostsResponse
	79,  // 156: host.OwnerInterface.GetOwner:output_type -> host.OwnerGetOwnerResponse
	81,  // 157: host.OwnerInterface.SetShow:output_type -> host.OwnerSetShowResponse
	83,  // 158: host.OwnerInterface.TakeOwnership:output_type -> host.OwnerTakeOwnershipResponse
	85,  // 159: host.ProcInterface.ClearRedirect:output_type -> host.ProcClearRedirectResponse
	87,  // 160: host.ProcInterface.GetFrame:output_type -> host.ProcGetFrameResponse
	89,  // 161: host.ProcInterface.GetHost:output_type -> host.ProcGetHostResponse
	91,  // 162: host.ProcInterface.GetJob:output_type -> host.ProcGetJobResponse
	93,  // 163: host.ProcInterface.GetLayer:output_type -> host.ProcGetLayerResponse
	95,  // 164: host.ProcInterface.GetProcs:output_type -> host.ProcGetProcsResponse
	97,  // 165: host.ProcInterface.Kill:output_type -> host.ProcKillResponse
	99,  // 166: host.ProcInterface.RedirectToGroup:output_type -> host.ProcRedirectToGroupResponse
	101, // 167: host.ProcInterface.RedirectToJob:output_type -> host.ProcRedirectToJobResponse
	103, // 168: host.ProcInterface.Unbook:output_type -> host.ProcUnbookResponse
	105, // 169: host.ProcInterface.UnbookProcs:output_type -> host.ProcUnbookProcsResponse
	109, // 170: host.ProcInterface.UnbookToGroup:output_type -> host.ProcUnbookToGroupResponse
	107, // 171: host.ProcInterface.UnbookToJob:output_type -> host.ProcUnbookToJobResponse
	127, // [127:172] is the sub-list for method output_type
	82,  // [82:127] is the sub-list for method input_type
	82,  // [82:82] is the sub-list for extension type_name
	82,  // [82:82] is the sub-list for extension extendee
	0,   // [0:82] is the sub-list for field type_name
}

func init() { file_OpenCue_proto_host_proto_init() }
func file_OpenCue_proto_host_proto_init() {
	if File_OpenCue_proto_host_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_OpenCue_proto_host_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Deed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeedSeq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HardwareStateSeq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Host); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostSearchCriteria); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostSeq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NestedHost); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NestedHostSeq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NestedProc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NestedProcSeq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Owner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Proc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcSearchCriteria); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcSeq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeedDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeedDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeedGetHostRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeedGetHostResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeedGetOwnerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeedGetOwnerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostAddCommentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostAddCommentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostAddTagsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostAddTagsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostFindHostRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostFindHostResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostGetCommentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostGetCommentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostGetDeedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostGetDeedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostGetHostRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostGetHostResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostGetHostsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostGetHostsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostGetHostWhiteboardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostGetHostWhiteboardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostGetOwnerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostGetOwnerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostGetProcsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostGetProcsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostGetRenderPartitionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostGetRenderPartitionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostLockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostLockResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostRebootRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostRebootResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostRebootWhenIdleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostRebootWhenIdleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostRedirectToJobRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostRedirectToJobResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostRemoveTagsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostRemoveTagsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostRenameTagRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostRenameTagResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostSetAllocationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostSetAllocationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostSetHardwareStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostSetHardwareStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostSetOsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostSetOsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostSetThreadModeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostSetThreadModeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostUnlockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostUnlockResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OwnerDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OwnerDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OwnerGetDeedsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OwnerGetDeedsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OwnerGetHostsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OwnerGetHostsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OwnerGetOwnerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OwnerGetOwnerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OwnerSetShowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OwnerSetShowResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OwnerTakeOwnershipRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OwnerTakeOwnershipResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcClearRedirectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcClearRedirectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcGetFrameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcGetFrameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcGetHostRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcGetHostResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcGetJobRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcGetJobResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcGetLayerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcGetLayerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcGetProcsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcGetProcsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcKillRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcKillResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcRedirectToGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcRedirectToGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcRedirectToJobRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcRedirectToJobResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcUnbookRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcUnbookResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcUnbookProcsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcUnbookProcsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcUnbookToJobRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcUnbookToJobResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcUnbookToGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_host_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcUnbookToGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_OpenCue_proto_host_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   104,
			NumExtensions: 0,
			NumServices:   4,
		},
		GoTypes:           file_OpenCue_proto_host_proto_goTypes,
		DependencyIndexes: file_OpenCue_proto_host_proto_depIdxs,
		EnumInfos:         file_OpenCue_proto_host_proto_enumTypes,
		MessageInfos:      file_OpenCue_proto_host_proto_msgTypes,
	}.Build()
	File_OpenCue_proto_host_proto = out.File
	file_OpenCue_proto_host_proto_rawDesc = nil
	file_OpenCue_proto_host_proto_goTypes = nil
	file_OpenCue_proto_host_proto_depIdxs = nil
}
