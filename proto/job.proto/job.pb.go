// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.25.3
// source: OpenCue/proto/job.proto

package job_proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	comment "github.com/reski-rukmantiyo/go-pycue/proto/comment"
	depend "github.com/reski-rukmantiyo/go-pycue/proto/depend"
	limit "github.com/reski-rukmantiyo/go-pycue/proto/limit"
	renderPartition "github.com/reski-rukmantiyo/go-pycue/proto/renderPartition"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Define the possible checkpoint states for a frame.
type CheckpointState int32

const (
	CheckpointState_DISABLED CheckpointState = 0
	CheckpointState_ENABLED  CheckpointState = 1
	CheckpointState_COPYING  CheckpointState = 2
	CheckpointState_COMPLETE CheckpointState = 3
)

// Enum value maps for CheckpointState.
var (
	CheckpointState_name = map[int32]string{
		0: "DISABLED",
		1: "ENABLED",
		2: "COPYING",
		3: "COMPLETE",
	}
	CheckpointState_value = map[string]int32{
		"DISABLED": 0,
		"ENABLED":  1,
		"COPYING":  2,
		"COMPLETE": 3,
	}
)

func (x CheckpointState) Enum() *CheckpointState {
	p := new(CheckpointState)
	*p = x
	return p
}

func (x CheckpointState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CheckpointState) Descriptor() protoreflect.EnumDescriptor {
	return file_OpenCue_proto_job_proto_enumTypes[0].Descriptor()
}

func (CheckpointState) Type() protoreflect.EnumType {
	return &file_OpenCue_proto_job_proto_enumTypes[0]
}

func (x CheckpointState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CheckpointState.Descriptor instead.
func (CheckpointState) EnumDescriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{0}
}

// These frame exit status values are used to trigger special dispatcher behavior.  They are greater than 255
// so they don't collide with any real exit status values used by applications running on the cue.
type FrameExitStatus int32

const (
	// The frame was a success
	FrameExitStatus_SUCCESS FrameExitStatus = 0
	// The frame should be automatically retried
	FrameExitStatus_FAILED_LAUNCH FrameExitStatus = 256
	// Retries should not be incremented
	FrameExitStatus_SKIP_RETRY FrameExitStatus = 286
)

// Enum value maps for FrameExitStatus.
var (
	FrameExitStatus_name = map[int32]string{
		0:   "SUCCESS",
		256: "FAILED_LAUNCH",
		286: "SKIP_RETRY",
	}
	FrameExitStatus_value = map[string]int32{
		"SUCCESS":       0,
		"FAILED_LAUNCH": 256,
		"SKIP_RETRY":    286,
	}
)

func (x FrameExitStatus) Enum() *FrameExitStatus {
	p := new(FrameExitStatus)
	*p = x
	return p
}

func (x FrameExitStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FrameExitStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_OpenCue_proto_job_proto_enumTypes[1].Descriptor()
}

func (FrameExitStatus) Type() protoreflect.EnumType {
	return &file_OpenCue_proto_job_proto_enumTypes[1]
}

func (x FrameExitStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FrameExitStatus.Descriptor instead.
func (FrameExitStatus) EnumDescriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{1}
}

// Defines the possible states of a frame.
type FrameState int32

const (
	// Ok to be dispatched
	FrameState_WAITING FrameState = 0
	// Reserved to be dispatched
	FrameState_SETUP FrameState = 1
	// Running on a render proc
	FrameState_RUNNING FrameState = 2
	// Frame completed successfully
	FrameState_SUCCEEDED FrameState = 3
	// Frame is waiting on a dependency
	FrameState_DEPEND FrameState = 4
	// Frame is dead,which means it has died N times
	FrameState_DEAD FrameState = 5
	// Frame is eaten, acts like the frame has succeeded
	FrameState_EATEN FrameState = 6
	// Frame is checkpointing
	FrameState_CHECKPOINT FrameState = 7
)

// Enum value maps for FrameState.
var (
	FrameState_name = map[int32]string{
		0: "WAITING",
		1: "SETUP",
		2: "RUNNING",
		3: "SUCCEEDED",
		4: "DEPEND",
		5: "DEAD",
		6: "EATEN",
		7: "CHECKPOINT",
	}
	FrameState_value = map[string]int32{
		"WAITING":    0,
		"SETUP":      1,
		"RUNNING":    2,
		"SUCCEEDED":  3,
		"DEPEND":     4,
		"DEAD":       5,
		"EATEN":      6,
		"CHECKPOINT": 7,
	}
)

func (x FrameState) Enum() *FrameState {
	p := new(FrameState)
	*p = x
	return p
}

func (x FrameState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FrameState) Descriptor() protoreflect.EnumDescriptor {
	return file_OpenCue_proto_job_proto_enumTypes[2].Descriptor()
}

func (FrameState) Type() protoreflect.EnumType {
	return &file_OpenCue_proto_job_proto_enumTypes[2]
}

func (x FrameState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FrameState.Descriptor instead.
func (FrameState) EnumDescriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{2}
}

// Defines the possible states of a job.
type JobState int32

const (
	// Job is running
	JobState_PENDING JobState = 0
	// The job has completed
	JobState_FINISHED JobState = 1
	// The job is in the process of starting up
	JobState_STARTUP JobState = 2
	// The job is in the process of shutting down
	JobState_SHUTDOWN JobState = 3
	// The job is a post job and is waiting to go pending
	JobState_POSTED JobState = 4
)

// Enum value maps for JobState.
var (
	JobState_name = map[int32]string{
		0: "PENDING",
		1: "FINISHED",
		2: "STARTUP",
		3: "SHUTDOWN",
		4: "POSTED",
	}
	JobState_value = map[string]int32{
		"PENDING":  0,
		"FINISHED": 1,
		"STARTUP":  2,
		"SHUTDOWN": 3,
		"POSTED":   4,
	}
)

func (x JobState) Enum() *JobState {
	p := new(JobState)
	*p = x
	return p
}

func (x JobState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (JobState) Descriptor() protoreflect.EnumDescriptor {
	return file_OpenCue_proto_job_proto_enumTypes[3].Descriptor()
}

func (JobState) Type() protoreflect.EnumType {
	return &file_OpenCue_proto_job_proto_enumTypes[3]
}

func (x JobState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use JobState.Descriptor instead.
func (JobState) EnumDescriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{3}
}

// The LayerType determines the type of the layer. A proc will not run
// frames from different layers UNLESS the layer type is PreProcess or
// PostProcess.  This gives us the ability to run all the preprocesses
// on one proc and all the post processes on one proc.
// There is no specific dispatch order for layer types.  You will need
// to setup dependencies.
type LayerType int32

const (
	LayerType_PRE    LayerType = 0
	LayerType_POST   LayerType = 1
	LayerType_RENDER LayerType = 2
	LayerType_UTIL   LayerType = 3
)

// Enum value maps for LayerType.
var (
	LayerType_name = map[int32]string{
		0: "PRE",
		1: "POST",
		2: "RENDER",
		3: "UTIL",
	}
	LayerType_value = map[string]int32{
		"PRE":    0,
		"POST":   1,
		"RENDER": 2,
		"UTIL":   3,
	}
)

func (x LayerType) Enum() *LayerType {
	p := new(LayerType)
	*p = x
	return p
}

func (x LayerType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LayerType) Descriptor() protoreflect.EnumDescriptor {
	return file_OpenCue_proto_job_proto_enumTypes[4].Descriptor()
}

func (LayerType) Type() protoreflect.EnumType {
	return &file_OpenCue_proto_job_proto_enumTypes[4]
}

func (x LayerType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LayerType.Descriptor instead.
func (LayerType) EnumDescriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{4}
}

// Used for reordering frames.
type Order int32

const (
	// Moves frames to the lowest dispatch order
	Order_FIRST Order = 0
	// Moves frames to the last dispatch order
	Order_LAST Order = 1
	// Reverses the dispatch order
	Order_REVERSE Order = 2
)

// Enum value maps for Order.
var (
	Order_name = map[int32]string{
		0: "FIRST",
		1: "LAST",
		2: "REVERSE",
	}
	Order_value = map[string]int32{
		"FIRST":   0,
		"LAST":    1,
		"REVERSE": 2,
	}
)

func (x Order) Enum() *Order {
	p := new(Order)
	*p = x
	return p
}

func (x Order) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Order) Descriptor() protoreflect.EnumDescriptor {
	return file_OpenCue_proto_job_proto_enumTypes[5].Descriptor()
}

func (Order) Type() protoreflect.EnumType {
	return &file_OpenCue_proto_job_proto_enumTypes[5]
}

func (x Order) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Order.Descriptor instead.
func (Order) EnumDescriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{5}
}

// FRAME ----
type Frame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name              string          `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	LayerName         string          `protobuf:"bytes,3,opt,name=layer_name,json=layerName,proto3" json:"layer_name,omitempty"`
	Number            int32           `protobuf:"varint,4,opt,name=number,proto3" json:"number,omitempty"`
	State             FrameState      `protobuf:"varint,5,opt,name=state,proto3,enum=job.FrameState" json:"state,omitempty"`
	RetryCount        int32           `protobuf:"varint,6,opt,name=retry_count,json=retryCount,proto3" json:"retry_count,omitempty"`
	ExitStatus        int32           `protobuf:"varint,7,opt,name=exit_status,json=exitStatus,proto3" json:"exit_status,omitempty"`
	DispatchOrder     int32           `protobuf:"varint,8,opt,name=dispatch_order,json=dispatchOrder,proto3" json:"dispatch_order,omitempty"`
	StartTime         int32           `protobuf:"varint,9,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	StopTime          int32           `protobuf:"varint,10,opt,name=stop_time,json=stopTime,proto3" json:"stop_time,omitempty"`
	MaxRss            int64           `protobuf:"varint,11,opt,name=max_rss,json=maxRss,proto3" json:"max_rss,omitempty"`
	UsedMemory        int64           `protobuf:"varint,12,opt,name=used_memory,json=usedMemory,proto3" json:"used_memory,omitempty"`
	ReservedMemory    int64           `protobuf:"varint,13,opt,name=reserved_memory,json=reservedMemory,proto3" json:"reserved_memory,omitempty"`
	ReservedGpuMemory int64           `protobuf:"varint,14,opt,name=reserved_gpu_memory,json=reservedGpuMemory,proto3" json:"reserved_gpu_memory,omitempty"`
	LastResource      string          `protobuf:"bytes,15,opt,name=last_resource,json=lastResource,proto3" json:"last_resource,omitempty"`
	CheckpointState   CheckpointState `protobuf:"varint,16,opt,name=checkpoint_state,json=checkpointState,proto3,enum=job.CheckpointState" json:"checkpoint_state,omitempty"`
	CheckpointCount   int32           `protobuf:"varint,17,opt,name=checkpoint_count,json=checkpointCount,proto3" json:"checkpoint_count,omitempty"`
	TotalCoreTime     int32           `protobuf:"varint,18,opt,name=total_core_time,json=totalCoreTime,proto3" json:"total_core_time,omitempty"`
	LluTime           int32           `protobuf:"varint,19,opt,name=llu_time,json=lluTime,proto3" json:"llu_time,omitempty"`
	TotalGpuTime      int32           `protobuf:"varint,20,opt,name=total_gpu_time,json=totalGpuTime,proto3" json:"total_gpu_time,omitempty"`
	MaxGpuMemory      int64           `protobuf:"varint,21,opt,name=max_gpu_memory,json=maxGpuMemory,proto3" json:"max_gpu_memory,omitempty"`
	UsedGpuMemory     int64           `protobuf:"varint,22,opt,name=used_gpu_memory,json=usedGpuMemory,proto3" json:"used_gpu_memory,omitempty"`
}

func (x *Frame) Reset() {
	*x = Frame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Frame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Frame) ProtoMessage() {}

func (x *Frame) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Frame.ProtoReflect.Descriptor instead.
func (*Frame) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{0}
}

func (x *Frame) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Frame) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Frame) GetLayerName() string {
	if x != nil {
		return x.LayerName
	}
	return ""
}

func (x *Frame) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *Frame) GetState() FrameState {
	if x != nil {
		return x.State
	}
	return FrameState_WAITING
}

func (x *Frame) GetRetryCount() int32 {
	if x != nil {
		return x.RetryCount
	}
	return 0
}

func (x *Frame) GetExitStatus() int32 {
	if x != nil {
		return x.ExitStatus
	}
	return 0
}

func (x *Frame) GetDispatchOrder() int32 {
	if x != nil {
		return x.DispatchOrder
	}
	return 0
}

func (x *Frame) GetStartTime() int32 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *Frame) GetStopTime() int32 {
	if x != nil {
		return x.StopTime
	}
	return 0
}

func (x *Frame) GetMaxRss() int64 {
	if x != nil {
		return x.MaxRss
	}
	return 0
}

func (x *Frame) GetUsedMemory() int64 {
	if x != nil {
		return x.UsedMemory
	}
	return 0
}

func (x *Frame) GetReservedMemory() int64 {
	if x != nil {
		return x.ReservedMemory
	}
	return 0
}

func (x *Frame) GetReservedGpuMemory() int64 {
	if x != nil {
		return x.ReservedGpuMemory
	}
	return 0
}

func (x *Frame) GetLastResource() string {
	if x != nil {
		return x.LastResource
	}
	return ""
}

func (x *Frame) GetCheckpointState() CheckpointState {
	if x != nil {
		return x.CheckpointState
	}
	return CheckpointState_DISABLED
}

func (x *Frame) GetCheckpointCount() int32 {
	if x != nil {
		return x.CheckpointCount
	}
	return 0
}

func (x *Frame) GetTotalCoreTime() int32 {
	if x != nil {
		return x.TotalCoreTime
	}
	return 0
}

func (x *Frame) GetLluTime() int32 {
	if x != nil {
		return x.LluTime
	}
	return 0
}

func (x *Frame) GetTotalGpuTime() int32 {
	if x != nil {
		return x.TotalGpuTime
	}
	return 0
}

func (x *Frame) GetMaxGpuMemory() int64 {
	if x != nil {
		return x.MaxGpuMemory
	}
	return 0
}

func (x *Frame) GetUsedGpuMemory() int64 {
	if x != nil {
		return x.UsedGpuMemory
	}
	return 0
}

// Object for frame searching
type FrameSearchCriteria struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids             []string       `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	Frames          []string       `protobuf:"bytes,2,rep,name=frames,proto3" json:"frames,omitempty"`
	Layers          []string       `protobuf:"bytes,3,rep,name=layers,proto3" json:"layers,omitempty"`
	States          *FrameStateSeq `protobuf:"bytes,4,opt,name=states,proto3" json:"states,omitempty"`
	FrameRange      string         `protobuf:"bytes,5,opt,name=frame_range,json=frameRange,proto3" json:"frame_range,omitempty"`
	MemoryRange     string         `protobuf:"bytes,6,opt,name=memory_range,json=memoryRange,proto3" json:"memory_range,omitempty"`
	DurationRange   string         `protobuf:"bytes,7,opt,name=duration_range,json=durationRange,proto3" json:"duration_range,omitempty"`
	Page            int32          `protobuf:"varint,8,opt,name=page,proto3" json:"page,omitempty"`
	Limit           int32          `protobuf:"varint,9,opt,name=limit,proto3" json:"limit,omitempty"`
	ChangeDate      int32          `protobuf:"varint,10,opt,name=change_date,json=changeDate,proto3" json:"change_date,omitempty"`
	MaxResults      int32          `protobuf:"varint,11,opt,name=max_results,json=maxResults,proto3" json:"max_results,omitempty"`
	Offset          int32          `protobuf:"varint,12,opt,name=offset,proto3" json:"offset,omitempty"`
	IncludeFinished bool           `protobuf:"varint,13,opt,name=include_finished,json=includeFinished,proto3" json:"include_finished,omitempty"`
}

func (x *FrameSearchCriteria) Reset() {
	*x = FrameSearchCriteria{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrameSearchCriteria) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrameSearchCriteria) ProtoMessage() {}

func (x *FrameSearchCriteria) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrameSearchCriteria.ProtoReflect.Descriptor instead.
func (*FrameSearchCriteria) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{1}
}

func (x *FrameSearchCriteria) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *FrameSearchCriteria) GetFrames() []string {
	if x != nil {
		return x.Frames
	}
	return nil
}

func (x *FrameSearchCriteria) GetLayers() []string {
	if x != nil {
		return x.Layers
	}
	return nil
}

func (x *FrameSearchCriteria) GetStates() *FrameStateSeq {
	if x != nil {
		return x.States
	}
	return nil
}

func (x *FrameSearchCriteria) GetFrameRange() string {
	if x != nil {
		return x.FrameRange
	}
	return ""
}

func (x *FrameSearchCriteria) GetMemoryRange() string {
	if x != nil {
		return x.MemoryRange
	}
	return ""
}

func (x *FrameSearchCriteria) GetDurationRange() string {
	if x != nil {
		return x.DurationRange
	}
	return ""
}

func (x *FrameSearchCriteria) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *FrameSearchCriteria) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *FrameSearchCriteria) GetChangeDate() int32 {
	if x != nil {
		return x.ChangeDate
	}
	return 0
}

func (x *FrameSearchCriteria) GetMaxResults() int32 {
	if x != nil {
		return x.MaxResults
	}
	return 0
}

func (x *FrameSearchCriteria) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *FrameSearchCriteria) GetIncludeFinished() bool {
	if x != nil {
		return x.IncludeFinished
	}
	return false
}

// A sequence of Frames
type FrameSeq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Frames []*Frame `protobuf:"bytes,1,rep,name=frames,proto3" json:"frames,omitempty"`
}

func (x *FrameSeq) Reset() {
	*x = FrameSeq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrameSeq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrameSeq) ProtoMessage() {}

func (x *FrameSeq) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrameSeq.ProtoReflect.Descriptor instead.
func (*FrameSeq) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{2}
}

func (x *FrameSeq) GetFrames() []*Frame {
	if x != nil {
		return x.Frames
	}
	return nil
}

// A sequence of FrameStates
type FrameStateSeq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FrameStates []FrameState `protobuf:"varint,1,rep,packed,name=frame_states,json=frameStates,proto3,enum=job.FrameState" json:"frame_states,omitempty"`
}

func (x *FrameStateSeq) Reset() {
	*x = FrameStateSeq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrameStateSeq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrameStateSeq) ProtoMessage() {}

func (x *FrameStateSeq) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrameStateSeq.ProtoReflect.Descriptor instead.
func (*FrameStateSeq) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{3}
}

func (x *FrameStateSeq) GetFrameStates() []FrameState {
	if x != nil {
		return x.FrameStates
	}
	return nil
}

// A struct containing properties for all the elements of a frame that
// can change except for the ID which is there for indexing purposes.
type UpdatedFrame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	State         FrameState `protobuf:"varint,2,opt,name=state,proto3,enum=job.FrameState" json:"state,omitempty"`
	RetryCount    int32      `protobuf:"varint,3,opt,name=retry_count,json=retryCount,proto3" json:"retry_count,omitempty"`
	ExitStatus    int32      `protobuf:"varint,4,opt,name=exit_status,json=exitStatus,proto3" json:"exit_status,omitempty"`
	StartTime     int32      `protobuf:"varint,5,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	StopTime      int32      `protobuf:"varint,6,opt,name=stop_time,json=stopTime,proto3" json:"stop_time,omitempty"`
	MaxRss        int64      `protobuf:"varint,7,opt,name=max_rss,json=maxRss,proto3" json:"max_rss,omitempty"`
	UsedMemory    int64      `protobuf:"varint,8,opt,name=used_memory,json=usedMemory,proto3" json:"used_memory,omitempty"`
	LastResource  string     `protobuf:"bytes,9,opt,name=last_resource,json=lastResource,proto3" json:"last_resource,omitempty"`
	LluTime       int32      `protobuf:"varint,10,opt,name=llu_time,json=lluTime,proto3" json:"llu_time,omitempty"`
	MaxGpuMemory  int64      `protobuf:"varint,11,opt,name=max_gpu_memory,json=maxGpuMemory,proto3" json:"max_gpu_memory,omitempty"`
	UsedGpuMemory int64      `protobuf:"varint,12,opt,name=used_gpu_memory,json=usedGpuMemory,proto3" json:"used_gpu_memory,omitempty"`
}

func (x *UpdatedFrame) Reset() {
	*x = UpdatedFrame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatedFrame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatedFrame) ProtoMessage() {}

func (x *UpdatedFrame) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatedFrame.ProtoReflect.Descriptor instead.
func (*UpdatedFrame) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{4}
}

func (x *UpdatedFrame) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdatedFrame) GetState() FrameState {
	if x != nil {
		return x.State
	}
	return FrameState_WAITING
}

func (x *UpdatedFrame) GetRetryCount() int32 {
	if x != nil {
		return x.RetryCount
	}
	return 0
}

func (x *UpdatedFrame) GetExitStatus() int32 {
	if x != nil {
		return x.ExitStatus
	}
	return 0
}

func (x *UpdatedFrame) GetStartTime() int32 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *UpdatedFrame) GetStopTime() int32 {
	if x != nil {
		return x.StopTime
	}
	return 0
}

func (x *UpdatedFrame) GetMaxRss() int64 {
	if x != nil {
		return x.MaxRss
	}
	return 0
}

func (x *UpdatedFrame) GetUsedMemory() int64 {
	if x != nil {
		return x.UsedMemory
	}
	return 0
}

func (x *UpdatedFrame) GetLastResource() string {
	if x != nil {
		return x.LastResource
	}
	return ""
}

func (x *UpdatedFrame) GetLluTime() int32 {
	if x != nil {
		return x.LluTime
	}
	return 0
}

func (x *UpdatedFrame) GetMaxGpuMemory() int64 {
	if x != nil {
		return x.MaxGpuMemory
	}
	return 0
}

func (x *UpdatedFrame) GetUsedGpuMemory() int64 {
	if x != nil {
		return x.UsedGpuMemory
	}
	return 0
}

type UpdatedFrameSeq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpdatedFrames []*UpdatedFrame `protobuf:"bytes,1,rep,name=updated_frames,json=updatedFrames,proto3" json:"updated_frames,omitempty"`
}

func (x *UpdatedFrameSeq) Reset() {
	*x = UpdatedFrameSeq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatedFrameSeq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatedFrameSeq) ProtoMessage() {}

func (x *UpdatedFrameSeq) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatedFrameSeq.ProtoReflect.Descriptor instead.
func (*UpdatedFrameSeq) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{5}
}

func (x *UpdatedFrameSeq) GetUpdatedFrames() []*UpdatedFrame {
	if x != nil {
		return x.UpdatedFrames
	}
	return nil
}

// The result of an updated frame check.  The job state is included
// so tools that are just monitoring frames can stop monitoring them
// once the job state changes to Finished.
type UpdatedFrameCheckResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State         JobState         `protobuf:"varint,1,opt,name=state,proto3,enum=job.JobState" json:"state,omitempty"`
	ServerTime    int32            `protobuf:"varint,2,opt,name=server_time,json=serverTime,proto3" json:"server_time,omitempty"`
	UpdatedFrames *UpdatedFrameSeq `protobuf:"bytes,3,opt,name=updated_frames,json=updatedFrames,proto3" json:"updated_frames,omitempty"`
}

func (x *UpdatedFrameCheckResult) Reset() {
	*x = UpdatedFrameCheckResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatedFrameCheckResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatedFrameCheckResult) ProtoMessage() {}

func (x *UpdatedFrameCheckResult) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatedFrameCheckResult.ProtoReflect.Descriptor instead.
func (*UpdatedFrameCheckResult) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{6}
}

func (x *UpdatedFrameCheckResult) GetState() JobState {
	if x != nil {
		return x.State
	}
	return JobState_PENDING
}

func (x *UpdatedFrameCheckResult) GetServerTime() int32 {
	if x != nil {
		return x.ServerTime
	}
	return 0
}

func (x *UpdatedFrameCheckResult) GetUpdatedFrames() *UpdatedFrameSeq {
	if x != nil {
		return x.UpdatedFrames
	}
	return nil
}

// GROUP ----
type Group struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 string      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name               string      `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Department         string      `protobuf:"bytes,3,opt,name=department,proto3" json:"department,omitempty"`
	DefaultJobPriority int32       `protobuf:"varint,4,opt,name=default_job_priority,json=defaultJobPriority,proto3" json:"default_job_priority,omitempty"`
	DefaultJobMinCores float32     `protobuf:"fixed32,5,opt,name=default_job_min_cores,json=defaultJobMinCores,proto3" json:"default_job_min_cores,omitempty"`
	DefaultJobMaxCores float32     `protobuf:"fixed32,6,opt,name=default_job_max_cores,json=defaultJobMaxCores,proto3" json:"default_job_max_cores,omitempty"`
	MinCores           float32     `protobuf:"fixed32,7,opt,name=min_cores,json=minCores,proto3" json:"min_cores,omitempty"`
	MaxCores           float32     `protobuf:"fixed32,8,opt,name=max_cores,json=maxCores,proto3" json:"max_cores,omitempty"`
	Level              int32       `protobuf:"varint,9,opt,name=level,proto3" json:"level,omitempty"`
	ParentId           string      `protobuf:"bytes,10,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	GroupStats         *GroupStats `protobuf:"bytes,11,opt,name=group_stats,json=groupStats,proto3" json:"group_stats,omitempty"`
	DefaultJobMinGpus  float32     `protobuf:"fixed32,12,opt,name=default_job_min_gpus,json=defaultJobMinGpus,proto3" json:"default_job_min_gpus,omitempty"`
	DefaultJobMaxGpus  float32     `protobuf:"fixed32,13,opt,name=default_job_max_gpus,json=defaultJobMaxGpus,proto3" json:"default_job_max_gpus,omitempty"`
	MinGpus            float32     `protobuf:"fixed32,14,opt,name=min_gpus,json=minGpus,proto3" json:"min_gpus,omitempty"`
	MaxGpus            float32     `protobuf:"fixed32,15,opt,name=max_gpus,json=maxGpus,proto3" json:"max_gpus,omitempty"`
}

func (x *Group) Reset() {
	*x = Group{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Group) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Group) ProtoMessage() {}

func (x *Group) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Group.ProtoReflect.Descriptor instead.
func (*Group) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{7}
}

func (x *Group) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Group) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Group) GetDepartment() string {
	if x != nil {
		return x.Department
	}
	return ""
}

func (x *Group) GetDefaultJobPriority() int32 {
	if x != nil {
		return x.DefaultJobPriority
	}
	return 0
}

func (x *Group) GetDefaultJobMinCores() float32 {
	if x != nil {
		return x.DefaultJobMinCores
	}
	return 0
}

func (x *Group) GetDefaultJobMaxCores() float32 {
	if x != nil {
		return x.DefaultJobMaxCores
	}
	return 0
}

func (x *Group) GetMinCores() float32 {
	if x != nil {
		return x.MinCores
	}
	return 0
}

func (x *Group) GetMaxCores() float32 {
	if x != nil {
		return x.MaxCores
	}
	return 0
}

func (x *Group) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *Group) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

func (x *Group) GetGroupStats() *GroupStats {
	if x != nil {
		return x.GroupStats
	}
	return nil
}

func (x *Group) GetDefaultJobMinGpus() float32 {
	if x != nil {
		return x.DefaultJobMinGpus
	}
	return 0
}

func (x *Group) GetDefaultJobMaxGpus() float32 {
	if x != nil {
		return x.DefaultJobMaxGpus
	}
	return 0
}

func (x *Group) GetMinGpus() float32 {
	if x != nil {
		return x.MinGpus
	}
	return 0
}

func (x *Group) GetMaxGpus() float32 {
	if x != nil {
		return x.MaxGpus
	}
	return 0
}

type GroupSeq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Groups []*Group `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty"`
}

func (x *GroupSeq) Reset() {
	*x = GroupSeq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupSeq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupSeq) ProtoMessage() {}

func (x *GroupSeq) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupSeq.ProtoReflect.Descriptor instead.
func (*GroupSeq) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{8}
}

func (x *GroupSeq) GetGroups() []*Group {
	if x != nil {
		return x.Groups
	}
	return nil
}

type GroupStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RunningFrames int32   `protobuf:"varint,1,opt,name=running_frames,json=runningFrames,proto3" json:"running_frames,omitempty"`
	DeadFrames    int32   `protobuf:"varint,2,opt,name=dead_frames,json=deadFrames,proto3" json:"dead_frames,omitempty"`
	DependFrames  int32   `protobuf:"varint,3,opt,name=depend_frames,json=dependFrames,proto3" json:"depend_frames,omitempty"`
	WaitingFrames int32   `protobuf:"varint,4,opt,name=waiting_frames,json=waitingFrames,proto3" json:"waiting_frames,omitempty"`
	PendingJobs   int32   `protobuf:"varint,5,opt,name=pending_jobs,json=pendingJobs,proto3" json:"pending_jobs,omitempty"`
	ReservedCores float32 `protobuf:"fixed32,6,opt,name=reserved_cores,json=reservedCores,proto3" json:"reserved_cores,omitempty"`
	ReservedGpus  float32 `protobuf:"fixed32,7,opt,name=reserved_gpus,json=reservedGpus,proto3" json:"reserved_gpus,omitempty"`
}

func (x *GroupStats) Reset() {
	*x = GroupStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupStats) ProtoMessage() {}

func (x *GroupStats) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupStats.ProtoReflect.Descriptor instead.
func (*GroupStats) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{9}
}

func (x *GroupStats) GetRunningFrames() int32 {
	if x != nil {
		return x.RunningFrames
	}
	return 0
}

func (x *GroupStats) GetDeadFrames() int32 {
	if x != nil {
		return x.DeadFrames
	}
	return 0
}

func (x *GroupStats) GetDependFrames() int32 {
	if x != nil {
		return x.DependFrames
	}
	return 0
}

func (x *GroupStats) GetWaitingFrames() int32 {
	if x != nil {
		return x.WaitingFrames
	}
	return 0
}

func (x *GroupStats) GetPendingJobs() int32 {
	if x != nil {
		return x.PendingJobs
	}
	return 0
}

func (x *GroupStats) GetReservedCores() float32 {
	if x != nil {
		return x.ReservedCores
	}
	return 0
}

func (x *GroupStats) GetReservedGpus() float32 {
	if x != nil {
		return x.ReservedGpus
	}
	return 0
}

// JOB ----
type Job struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	State    JobState `protobuf:"varint,2,opt,name=state,proto3,enum=job.JobState" json:"state,omitempty"`
	Name     string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Shot     string   `protobuf:"bytes,4,opt,name=shot,proto3" json:"shot,omitempty"`
	Show     string   `protobuf:"bytes,5,opt,name=show,proto3" json:"show,omitempty"`
	User     string   `protobuf:"bytes,6,opt,name=user,proto3" json:"user,omitempty"`
	Group    string   `protobuf:"bytes,7,opt,name=group,proto3" json:"group,omitempty"`
	Facility string   `protobuf:"bytes,8,opt,name=facility,proto3" json:"facility,omitempty"`
	Os       string   `protobuf:"bytes,9,opt,name=os,proto3" json:"os,omitempty"`
	// Types that are assignable to UidOptional:
	//
	//	*Job_Uid
	UidOptional isJob_UidOptional `protobuf_oneof:"uid_optional"`
	Priority    int32             `protobuf:"varint,11,opt,name=priority,proto3" json:"priority,omitempty"`
	MinCores    float32           `protobuf:"fixed32,12,opt,name=min_cores,json=minCores,proto3" json:"min_cores,omitempty"`
	MaxCores    float32           `protobuf:"fixed32,13,opt,name=max_cores,json=maxCores,proto3" json:"max_cores,omitempty"`
	LogDir      string            `protobuf:"bytes,14,opt,name=log_dir,json=logDir,proto3" json:"log_dir,omitempty"`
	IsPaused    bool              `protobuf:"varint,15,opt,name=is_paused,json=isPaused,proto3" json:"is_paused,omitempty"`
	HasComment  bool              `protobuf:"varint,16,opt,name=has_comment,json=hasComment,proto3" json:"has_comment,omitempty"`
	AutoEat     bool              `protobuf:"varint,17,opt,name=auto_eat,json=autoEat,proto3" json:"auto_eat,omitempty"`
	StartTime   int32             `protobuf:"varint,18,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	StopTime    int32             `protobuf:"varint,19,opt,name=stop_time,json=stopTime,proto3" json:"stop_time,omitempty"`
	JobStats    *JobStats         `protobuf:"bytes,20,opt,name=job_stats,json=jobStats,proto3" json:"job_stats,omitempty"`
	MinGpus     float32           `protobuf:"fixed32,21,opt,name=min_gpus,json=minGpus,proto3" json:"min_gpus,omitempty"`
	MaxGpus     float32           `protobuf:"fixed32,22,opt,name=max_gpus,json=maxGpus,proto3" json:"max_gpus,omitempty"`
}

func (x *Job) Reset() {
	*x = Job{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Job) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Job) ProtoMessage() {}

func (x *Job) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Job.ProtoReflect.Descriptor instead.
func (*Job) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{10}
}

func (x *Job) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Job) GetState() JobState {
	if x != nil {
		return x.State
	}
	return JobState_PENDING
}

func (x *Job) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Job) GetShot() string {
	if x != nil {
		return x.Shot
	}
	return ""
}

func (x *Job) GetShow() string {
	if x != nil {
		return x.Show
	}
	return ""
}

func (x *Job) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *Job) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *Job) GetFacility() string {
	if x != nil {
		return x.Facility
	}
	return ""
}

func (x *Job) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (m *Job) GetUidOptional() isJob_UidOptional {
	if m != nil {
		return m.UidOptional
	}
	return nil
}

func (x *Job) GetUid() int32 {
	if x, ok := x.GetUidOptional().(*Job_Uid); ok {
		return x.Uid
	}
	return 0
}

func (x *Job) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *Job) GetMinCores() float32 {
	if x != nil {
		return x.MinCores
	}
	return 0
}

func (x *Job) GetMaxCores() float32 {
	if x != nil {
		return x.MaxCores
	}
	return 0
}

func (x *Job) GetLogDir() string {
	if x != nil {
		return x.LogDir
	}
	return ""
}

func (x *Job) GetIsPaused() bool {
	if x != nil {
		return x.IsPaused
	}
	return false
}

func (x *Job) GetHasComment() bool {
	if x != nil {
		return x.HasComment
	}
	return false
}

func (x *Job) GetAutoEat() bool {
	if x != nil {
		return x.AutoEat
	}
	return false
}

func (x *Job) GetStartTime() int32 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *Job) GetStopTime() int32 {
	if x != nil {
		return x.StopTime
	}
	return 0
}

func (x *Job) GetJobStats() *JobStats {
	if x != nil {
		return x.JobStats
	}
	return nil
}

func (x *Job) GetMinGpus() float32 {
	if x != nil {
		return x.MinGpus
	}
	return 0
}

func (x *Job) GetMaxGpus() float32 {
	if x != nil {
		return x.MaxGpus
	}
	return 0
}

type isJob_UidOptional interface {
	isJob_UidOptional()
}

type Job_Uid struct {
	Uid int32 `protobuf:"varint,10,opt,name=uid,proto3,oneof"`
}

func (*Job_Uid) isJob_UidOptional() {}

// Use to filter the job search.  Please note that by searching for non-pending jobs, the output is limited to 200 jobs
type JobSearchCriteria struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids             []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	Jobs            []string `protobuf:"bytes,2,rep,name=jobs,proto3" json:"jobs,omitempty"`
	Regex           []string `protobuf:"bytes,3,rep,name=regex,proto3" json:"regex,omitempty"`
	Substr          []string `protobuf:"bytes,4,rep,name=substr,proto3" json:"substr,omitempty"`
	Users           []string `protobuf:"bytes,5,rep,name=users,proto3" json:"users,omitempty"`
	Shots           []string `protobuf:"bytes,6,rep,name=shots,proto3" json:"shots,omitempty"`
	Shows           []string `protobuf:"bytes,7,rep,name=shows,proto3" json:"shows,omitempty"`
	IncludeFinished bool     `protobuf:"varint,8,opt,name=include_finished,json=includeFinished,proto3" json:"include_finished,omitempty"`
}

func (x *JobSearchCriteria) Reset() {
	*x = JobSearchCriteria{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobSearchCriteria) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobSearchCriteria) ProtoMessage() {}

func (x *JobSearchCriteria) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobSearchCriteria.ProtoReflect.Descriptor instead.
func (*JobSearchCriteria) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{11}
}

func (x *JobSearchCriteria) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *JobSearchCriteria) GetJobs() []string {
	if x != nil {
		return x.Jobs
	}
	return nil
}

func (x *JobSearchCriteria) GetRegex() []string {
	if x != nil {
		return x.Regex
	}
	return nil
}

func (x *JobSearchCriteria) GetSubstr() []string {
	if x != nil {
		return x.Substr
	}
	return nil
}

func (x *JobSearchCriteria) GetUsers() []string {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *JobSearchCriteria) GetShots() []string {
	if x != nil {
		return x.Shots
	}
	return nil
}

func (x *JobSearchCriteria) GetShows() []string {
	if x != nil {
		return x.Shows
	}
	return nil
}

func (x *JobSearchCriteria) GetIncludeFinished() bool {
	if x != nil {
		return x.IncludeFinished
	}
	return false
}

type JobSeq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Jobs []*Job `protobuf:"bytes,1,rep,name=jobs,proto3" json:"jobs,omitempty"`
}

func (x *JobSeq) Reset() {
	*x = JobSeq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobSeq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobSeq) ProtoMessage() {}

func (x *JobSeq) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobSeq.ProtoReflect.Descriptor instead.
func (*JobSeq) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{12}
}

func (x *JobSeq) GetJobs() []*Job {
	if x != nil {
		return x.Jobs
	}
	return nil
}

type JobStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalLayers        int32   `protobuf:"varint,1,opt,name=total_layers,json=totalLayers,proto3" json:"total_layers,omitempty"`
	TotalFrames        int32   `protobuf:"varint,2,opt,name=total_frames,json=totalFrames,proto3" json:"total_frames,omitempty"`
	WaitingFrames      int32   `protobuf:"varint,3,opt,name=waiting_frames,json=waitingFrames,proto3" json:"waiting_frames,omitempty"`
	RunningFrames      int32   `protobuf:"varint,4,opt,name=running_frames,json=runningFrames,proto3" json:"running_frames,omitempty"`
	DeadFrames         int32   `protobuf:"varint,5,opt,name=dead_frames,json=deadFrames,proto3" json:"dead_frames,omitempty"`
	EatenFrames        int32   `protobuf:"varint,6,opt,name=eaten_frames,json=eatenFrames,proto3" json:"eaten_frames,omitempty"`
	DependFrames       int32   `protobuf:"varint,7,opt,name=depend_frames,json=dependFrames,proto3" json:"depend_frames,omitempty"`
	SucceededFrames    int32   `protobuf:"varint,8,opt,name=succeeded_frames,json=succeededFrames,proto3" json:"succeeded_frames,omitempty"`
	PendingFrames      int32   `protobuf:"varint,9,opt,name=pending_frames,json=pendingFrames,proto3" json:"pending_frames,omitempty"`
	AvgFrameSec        int32   `protobuf:"varint,10,opt,name=avg_frame_sec,json=avgFrameSec,proto3" json:"avg_frame_sec,omitempty"`
	HighFrameSec       int32   `protobuf:"varint,11,opt,name=high_frame_sec,json=highFrameSec,proto3" json:"high_frame_sec,omitempty"`
	AvgCoreSec         int32   `protobuf:"varint,12,opt,name=avg_core_sec,json=avgCoreSec,proto3" json:"avg_core_sec,omitempty"`
	RenderedFrameCount int64   `protobuf:"varint,13,opt,name=rendered_frame_count,json=renderedFrameCount,proto3" json:"rendered_frame_count,omitempty"`
	FailedFrameCount   int64   `protobuf:"varint,14,opt,name=failed_frame_count,json=failedFrameCount,proto3" json:"failed_frame_count,omitempty"`
	RemainingCoreSec   int64   `protobuf:"varint,15,opt,name=remaining_core_sec,json=remainingCoreSec,proto3" json:"remaining_core_sec,omitempty"`
	TotalCoreSec       int64   `protobuf:"varint,16,opt,name=total_core_sec,json=totalCoreSec,proto3" json:"total_core_sec,omitempty"`
	RenderedCoreSec    int64   `protobuf:"varint,17,opt,name=rendered_core_sec,json=renderedCoreSec,proto3" json:"rendered_core_sec,omitempty"`
	FailedCoreSec      int64   `protobuf:"varint,18,opt,name=failed_core_sec,json=failedCoreSec,proto3" json:"failed_core_sec,omitempty"`
	MaxRss             int64   `protobuf:"varint,19,opt,name=max_rss,json=maxRss,proto3" json:"max_rss,omitempty"`
	ReservedCores      float32 `protobuf:"fixed32,20,opt,name=reserved_cores,json=reservedCores,proto3" json:"reserved_cores,omitempty"`
	TotalGpuSec        int64   `protobuf:"varint,21,opt,name=total_gpu_sec,json=totalGpuSec,proto3" json:"total_gpu_sec,omitempty"`
	RenderedGpuSec     int64   `protobuf:"varint,22,opt,name=rendered_gpu_sec,json=renderedGpuSec,proto3" json:"rendered_gpu_sec,omitempty"`
	FailedGpuSec       int64   `protobuf:"varint,23,opt,name=failed_gpu_sec,json=failedGpuSec,proto3" json:"failed_gpu_sec,omitempty"`
	ReservedGpus       float32 `protobuf:"fixed32,24,opt,name=reserved_gpus,json=reservedGpus,proto3" json:"reserved_gpus,omitempty"`
	MaxGpuMemory       int64   `protobuf:"varint,25,opt,name=max_gpu_memory,json=maxGpuMemory,proto3" json:"max_gpu_memory,omitempty"`
}

func (x *JobStats) Reset() {
	*x = JobStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobStats) ProtoMessage() {}

func (x *JobStats) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobStats.ProtoReflect.Descriptor instead.
func (*JobStats) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{13}
}

func (x *JobStats) GetTotalLayers() int32 {
	if x != nil {
		return x.TotalLayers
	}
	return 0
}

func (x *JobStats) GetTotalFrames() int32 {
	if x != nil {
		return x.TotalFrames
	}
	return 0
}

func (x *JobStats) GetWaitingFrames() int32 {
	if x != nil {
		return x.WaitingFrames
	}
	return 0
}

func (x *JobStats) GetRunningFrames() int32 {
	if x != nil {
		return x.RunningFrames
	}
	return 0
}

func (x *JobStats) GetDeadFrames() int32 {
	if x != nil {
		return x.DeadFrames
	}
	return 0
}

func (x *JobStats) GetEatenFrames() int32 {
	if x != nil {
		return x.EatenFrames
	}
	return 0
}

func (x *JobStats) GetDependFrames() int32 {
	if x != nil {
		return x.DependFrames
	}
	return 0
}

func (x *JobStats) GetSucceededFrames() int32 {
	if x != nil {
		return x.SucceededFrames
	}
	return 0
}

func (x *JobStats) GetPendingFrames() int32 {
	if x != nil {
		return x.PendingFrames
	}
	return 0
}

func (x *JobStats) GetAvgFrameSec() int32 {
	if x != nil {
		return x.AvgFrameSec
	}
	return 0
}

func (x *JobStats) GetHighFrameSec() int32 {
	if x != nil {
		return x.HighFrameSec
	}
	return 0
}

func (x *JobStats) GetAvgCoreSec() int32 {
	if x != nil {
		return x.AvgCoreSec
	}
	return 0
}

func (x *JobStats) GetRenderedFrameCount() int64 {
	if x != nil {
		return x.RenderedFrameCount
	}
	return 0
}

func (x *JobStats) GetFailedFrameCount() int64 {
	if x != nil {
		return x.FailedFrameCount
	}
	return 0
}

func (x *JobStats) GetRemainingCoreSec() int64 {
	if x != nil {
		return x.RemainingCoreSec
	}
	return 0
}

func (x *JobStats) GetTotalCoreSec() int64 {
	if x != nil {
		return x.TotalCoreSec
	}
	return 0
}

func (x *JobStats) GetRenderedCoreSec() int64 {
	if x != nil {
		return x.RenderedCoreSec
	}
	return 0
}

func (x *JobStats) GetFailedCoreSec() int64 {
	if x != nil {
		return x.FailedCoreSec
	}
	return 0
}

func (x *JobStats) GetMaxRss() int64 {
	if x != nil {
		return x.MaxRss
	}
	return 0
}

func (x *JobStats) GetReservedCores() float32 {
	if x != nil {
		return x.ReservedCores
	}
	return 0
}

func (x *JobStats) GetTotalGpuSec() int64 {
	if x != nil {
		return x.TotalGpuSec
	}
	return 0
}

func (x *JobStats) GetRenderedGpuSec() int64 {
	if x != nil {
		return x.RenderedGpuSec
	}
	return 0
}

func (x *JobStats) GetFailedGpuSec() int64 {
	if x != nil {
		return x.FailedGpuSec
	}
	return 0
}

func (x *JobStats) GetReservedGpus() float32 {
	if x != nil {
		return x.ReservedGpus
	}
	return 0
}

func (x *JobStats) GetMaxGpuMemory() int64 {
	if x != nil {
		return x.MaxGpuMemory
	}
	return 0
}

// LAYER ----
type Layer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Range         string    `protobuf:"bytes,3,opt,name=range,proto3" json:"range,omitempty"`
	Tags          []string  `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
	MinCores      float32   `protobuf:"fixed32,5,opt,name=min_cores,json=minCores,proto3" json:"min_cores,omitempty"`
	MaxCores      float32   `protobuf:"fixed32,6,opt,name=max_cores,json=maxCores,proto3" json:"max_cores,omitempty"`
	IsThreadable  bool      `protobuf:"varint,7,opt,name=is_threadable,json=isThreadable,proto3" json:"is_threadable,omitempty"`
	MinMemory     int64     `protobuf:"varint,8,opt,name=min_memory,json=minMemory,proto3" json:"min_memory,omitempty"`
	MinGpuMemory  int64     `protobuf:"varint,9,opt,name=min_gpu_memory,json=minGpuMemory,proto3" json:"min_gpu_memory,omitempty"`
	ChunkSize     int32     `protobuf:"varint,10,opt,name=chunk_size,json=chunkSize,proto3" json:"chunk_size,omitempty"`
	DispatchOrder int32     `protobuf:"varint,11,opt,name=dispatch_order,json=dispatchOrder,proto3" json:"dispatch_order,omitempty"`
	Type          LayerType `protobuf:"varint,12,opt,name=type,proto3,enum=job.LayerType" json:"type,omitempty"`
	// An array of services that are being run on all frames within this layer.
	Services []string `protobuf:"bytes,13,rep,name=services,proto3" json:"services,omitempty"`
	// True if the memory optimizer is enabled.  Disabling the optimizer will stop Cuebot from lowering memory.
	MemoryOptimizerEnabled bool        `protobuf:"varint,14,opt,name=memory_optimizer_enabled,json=memoryOptimizerEnabled,proto3" json:"memory_optimizer_enabled,omitempty"`
	LayerStats             *LayerStats `protobuf:"bytes,15,opt,name=layer_stats,json=layerStats,proto3" json:"layer_stats,omitempty"`
	ParentId               string      `protobuf:"bytes,16,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	Limits                 []string    `protobuf:"bytes,17,rep,name=limits,proto3" json:"limits,omitempty"`
	Timeout                int32       `protobuf:"varint,18,opt,name=timeout,proto3" json:"timeout,omitempty"`
	TimeoutLlu             int32       `protobuf:"varint,19,opt,name=timeout_llu,json=timeoutLlu,proto3" json:"timeout_llu,omitempty"`
	MinGpus                float32     `protobuf:"fixed32,20,opt,name=min_gpus,json=minGpus,proto3" json:"min_gpus,omitempty"`
	MaxGpus                float32     `protobuf:"fixed32,21,opt,name=max_gpus,json=maxGpus,proto3" json:"max_gpus,omitempty"`
}

func (x *Layer) Reset() {
	*x = Layer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Layer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Layer) ProtoMessage() {}

func (x *Layer) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Layer.ProtoReflect.Descriptor instead.
func (*Layer) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{14}
}

func (x *Layer) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Layer) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Layer) GetRange() string {
	if x != nil {
		return x.Range
	}
	return ""
}

func (x *Layer) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Layer) GetMinCores() float32 {
	if x != nil {
		return x.MinCores
	}
	return 0
}

func (x *Layer) GetMaxCores() float32 {
	if x != nil {
		return x.MaxCores
	}
	return 0
}

func (x *Layer) GetIsThreadable() bool {
	if x != nil {
		return x.IsThreadable
	}
	return false
}

func (x *Layer) GetMinMemory() int64 {
	if x != nil {
		return x.MinMemory
	}
	return 0
}

func (x *Layer) GetMinGpuMemory() int64 {
	if x != nil {
		return x.MinGpuMemory
	}
	return 0
}

func (x *Layer) GetChunkSize() int32 {
	if x != nil {
		return x.ChunkSize
	}
	return 0
}

func (x *Layer) GetDispatchOrder() int32 {
	if x != nil {
		return x.DispatchOrder
	}
	return 0
}

func (x *Layer) GetType() LayerType {
	if x != nil {
		return x.Type
	}
	return LayerType_PRE
}

func (x *Layer) GetServices() []string {
	if x != nil {
		return x.Services
	}
	return nil
}

func (x *Layer) GetMemoryOptimizerEnabled() bool {
	if x != nil {
		return x.MemoryOptimizerEnabled
	}
	return false
}

func (x *Layer) GetLayerStats() *LayerStats {
	if x != nil {
		return x.LayerStats
	}
	return nil
}

func (x *Layer) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

func (x *Layer) GetLimits() []string {
	if x != nil {
		return x.Limits
	}
	return nil
}

func (x *Layer) GetTimeout() int32 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *Layer) GetTimeoutLlu() int32 {
	if x != nil {
		return x.TimeoutLlu
	}
	return 0
}

func (x *Layer) GetMinGpus() float32 {
	if x != nil {
		return x.MinGpus
	}
	return 0
}

func (x *Layer) GetMaxGpus() float32 {
	if x != nil {
		return x.MaxGpus
	}
	return 0
}

type LayerSeq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Layers []*Layer `protobuf:"bytes,1,rep,name=layers,proto3" json:"layers,omitempty"`
}

func (x *LayerSeq) Reset() {
	*x = LayerSeq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayerSeq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayerSeq) ProtoMessage() {}

func (x *LayerSeq) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayerSeq.ProtoReflect.Descriptor instead.
func (*LayerSeq) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{15}
}

func (x *LayerSeq) GetLayers() []*Layer {
	if x != nil {
		return x.Layers
	}
	return nil
}

type LayerStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalFrames        int32   `protobuf:"varint,1,opt,name=total_frames,json=totalFrames,proto3" json:"total_frames,omitempty"`
	WaitingFrames      int32   `protobuf:"varint,2,opt,name=waiting_frames,json=waitingFrames,proto3" json:"waiting_frames,omitempty"`
	RunningFrames      int32   `protobuf:"varint,3,opt,name=running_frames,json=runningFrames,proto3" json:"running_frames,omitempty"`
	DeadFrames         int32   `protobuf:"varint,4,opt,name=dead_frames,json=deadFrames,proto3" json:"dead_frames,omitempty"`
	EatenFrames        int32   `protobuf:"varint,5,opt,name=eaten_frames,json=eatenFrames,proto3" json:"eaten_frames,omitempty"`
	DependFrames       int32   `protobuf:"varint,6,opt,name=depend_frames,json=dependFrames,proto3" json:"depend_frames,omitempty"`
	SucceededFrames    int32   `protobuf:"varint,7,opt,name=succeeded_frames,json=succeededFrames,proto3" json:"succeeded_frames,omitempty"`
	PendingFrames      int32   `protobuf:"varint,8,opt,name=pending_frames,json=pendingFrames,proto3" json:"pending_frames,omitempty"`
	AvgFrameSec        int32   `protobuf:"varint,9,opt,name=avg_frame_sec,json=avgFrameSec,proto3" json:"avg_frame_sec,omitempty"`
	LowFrameSec        int32   `protobuf:"varint,10,opt,name=low_frame_sec,json=lowFrameSec,proto3" json:"low_frame_sec,omitempty"`
	HighFrameSec       int32   `protobuf:"varint,11,opt,name=high_frame_sec,json=highFrameSec,proto3" json:"high_frame_sec,omitempty"`
	AvgCoreSec         int32   `protobuf:"varint,12,opt,name=avg_core_sec,json=avgCoreSec,proto3" json:"avg_core_sec,omitempty"`
	RenderedFrameCount int64   `protobuf:"varint,13,opt,name=rendered_frame_count,json=renderedFrameCount,proto3" json:"rendered_frame_count,omitempty"`
	FailedFrameCount   int64   `protobuf:"varint,14,opt,name=failed_frame_count,json=failedFrameCount,proto3" json:"failed_frame_count,omitempty"`
	RemainingCoreSec   int64   `protobuf:"varint,15,opt,name=remaining_core_sec,json=remainingCoreSec,proto3" json:"remaining_core_sec,omitempty"`
	TotalCoreSec       int64   `protobuf:"varint,16,opt,name=total_core_sec,json=totalCoreSec,proto3" json:"total_core_sec,omitempty"`
	RenderedCoreSec    int64   `protobuf:"varint,17,opt,name=rendered_core_sec,json=renderedCoreSec,proto3" json:"rendered_core_sec,omitempty"`
	FailedCoreSec      int64   `protobuf:"varint,18,opt,name=failed_core_sec,json=failedCoreSec,proto3" json:"failed_core_sec,omitempty"`
	MaxRss             int64   `protobuf:"varint,19,opt,name=max_rss,json=maxRss,proto3" json:"max_rss,omitempty"`
	ReservedCores      float32 `protobuf:"fixed32,20,opt,name=reserved_cores,json=reservedCores,proto3" json:"reserved_cores,omitempty"`
	TotalGpuSec        int64   `protobuf:"varint,21,opt,name=total_gpu_sec,json=totalGpuSec,proto3" json:"total_gpu_sec,omitempty"`
	RenderedGpuSec     int64   `protobuf:"varint,22,opt,name=rendered_gpu_sec,json=renderedGpuSec,proto3" json:"rendered_gpu_sec,omitempty"`
	FailedGpuSec       int64   `protobuf:"varint,23,opt,name=failed_gpu_sec,json=failedGpuSec,proto3" json:"failed_gpu_sec,omitempty"`
	ReservedGpus       float32 `protobuf:"fixed32,24,opt,name=reserved_gpus,json=reservedGpus,proto3" json:"reserved_gpus,omitempty"`
	MaxGpuMemory       int64   `protobuf:"varint,25,opt,name=max_gpu_memory,json=maxGpuMemory,proto3" json:"max_gpu_memory,omitempty"`
}

func (x *LayerStats) Reset() {
	*x = LayerStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayerStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayerStats) ProtoMessage() {}

func (x *LayerStats) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayerStats.ProtoReflect.Descriptor instead.
func (*LayerStats) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{16}
}

func (x *LayerStats) GetTotalFrames() int32 {
	if x != nil {
		return x.TotalFrames
	}
	return 0
}

func (x *LayerStats) GetWaitingFrames() int32 {
	if x != nil {
		return x.WaitingFrames
	}
	return 0
}

func (x *LayerStats) GetRunningFrames() int32 {
	if x != nil {
		return x.RunningFrames
	}
	return 0
}

func (x *LayerStats) GetDeadFrames() int32 {
	if x != nil {
		return x.DeadFrames
	}
	return 0
}

func (x *LayerStats) GetEatenFrames() int32 {
	if x != nil {
		return x.EatenFrames
	}
	return 0
}

func (x *LayerStats) GetDependFrames() int32 {
	if x != nil {
		return x.DependFrames
	}
	return 0
}

func (x *LayerStats) GetSucceededFrames() int32 {
	if x != nil {
		return x.SucceededFrames
	}
	return 0
}

func (x *LayerStats) GetPendingFrames() int32 {
	if x != nil {
		return x.PendingFrames
	}
	return 0
}

func (x *LayerStats) GetAvgFrameSec() int32 {
	if x != nil {
		return x.AvgFrameSec
	}
	return 0
}

func (x *LayerStats) GetLowFrameSec() int32 {
	if x != nil {
		return x.LowFrameSec
	}
	return 0
}

func (x *LayerStats) GetHighFrameSec() int32 {
	if x != nil {
		return x.HighFrameSec
	}
	return 0
}

func (x *LayerStats) GetAvgCoreSec() int32 {
	if x != nil {
		return x.AvgCoreSec
	}
	return 0
}

func (x *LayerStats) GetRenderedFrameCount() int64 {
	if x != nil {
		return x.RenderedFrameCount
	}
	return 0
}

func (x *LayerStats) GetFailedFrameCount() int64 {
	if x != nil {
		return x.FailedFrameCount
	}
	return 0
}

func (x *LayerStats) GetRemainingCoreSec() int64 {
	if x != nil {
		return x.RemainingCoreSec
	}
	return 0
}

func (x *LayerStats) GetTotalCoreSec() int64 {
	if x != nil {
		return x.TotalCoreSec
	}
	return 0
}

func (x *LayerStats) GetRenderedCoreSec() int64 {
	if x != nil {
		return x.RenderedCoreSec
	}
	return 0
}

func (x *LayerStats) GetFailedCoreSec() int64 {
	if x != nil {
		return x.FailedCoreSec
	}
	return 0
}

func (x *LayerStats) GetMaxRss() int64 {
	if x != nil {
		return x.MaxRss
	}
	return 0
}

func (x *LayerStats) GetReservedCores() float32 {
	if x != nil {
		return x.ReservedCores
	}
	return 0
}

func (x *LayerStats) GetTotalGpuSec() int64 {
	if x != nil {
		return x.TotalGpuSec
	}
	return 0
}

func (x *LayerStats) GetRenderedGpuSec() int64 {
	if x != nil {
		return x.RenderedGpuSec
	}
	return 0
}

func (x *LayerStats) GetFailedGpuSec() int64 {
	if x != nil {
		return x.FailedGpuSec
	}
	return 0
}

func (x *LayerStats) GetReservedGpus() float32 {
	if x != nil {
		return x.ReservedGpus
	}
	return 0
}

func (x *LayerStats) GetMaxGpuMemory() int64 {
	if x != nil {
		return x.MaxGpuMemory
	}
	return 0
}

// NestedGroup ---
type NestedGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name               string          `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Department         string          `protobuf:"bytes,3,opt,name=department,proto3" json:"department,omitempty"`
	DefaultJobPriority int32           `protobuf:"varint,4,opt,name=default_job_priority,json=defaultJobPriority,proto3" json:"default_job_priority,omitempty"`
	DefaultJobMinCores float32         `protobuf:"fixed32,5,opt,name=default_job_min_cores,json=defaultJobMinCores,proto3" json:"default_job_min_cores,omitempty"`
	DefaultJobMaxCores float32         `protobuf:"fixed32,6,opt,name=default_job_max_cores,json=defaultJobMaxCores,proto3" json:"default_job_max_cores,omitempty"`
	MinCores           float32         `protobuf:"fixed32,7,opt,name=min_cores,json=minCores,proto3" json:"min_cores,omitempty"`
	MaxCores           float32         `protobuf:"fixed32,8,opt,name=max_cores,json=maxCores,proto3" json:"max_cores,omitempty"`
	Level              int32           `protobuf:"varint,9,opt,name=level,proto3" json:"level,omitempty"`
	Parent             *NestedGroup    `protobuf:"bytes,10,opt,name=parent,proto3" json:"parent,omitempty"`
	Groups             *NestedGroupSeq `protobuf:"bytes,11,opt,name=groups,proto3" json:"groups,omitempty"`
	Jobs               []string        `protobuf:"bytes,12,rep,name=jobs,proto3" json:"jobs,omitempty"`
	Stats              *GroupStats     `protobuf:"bytes,13,opt,name=stats,proto3" json:"stats,omitempty"`
	DefaultJobMinGpus  float32         `protobuf:"fixed32,14,opt,name=default_job_min_gpus,json=defaultJobMinGpus,proto3" json:"default_job_min_gpus,omitempty"`
	DefaultJobMaxGpus  float32         `protobuf:"fixed32,15,opt,name=default_job_max_gpus,json=defaultJobMaxGpus,proto3" json:"default_job_max_gpus,omitempty"`
	MinGpus            float32         `protobuf:"fixed32,16,opt,name=min_gpus,json=minGpus,proto3" json:"min_gpus,omitempty"`
	MaxGpus            float32         `protobuf:"fixed32,17,opt,name=max_gpus,json=maxGpus,proto3" json:"max_gpus,omitempty"`
}

func (x *NestedGroup) Reset() {
	*x = NestedGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NestedGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NestedGroup) ProtoMessage() {}

func (x *NestedGroup) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NestedGroup.ProtoReflect.Descriptor instead.
func (*NestedGroup) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{17}
}

func (x *NestedGroup) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *NestedGroup) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NestedGroup) GetDepartment() string {
	if x != nil {
		return x.Department
	}
	return ""
}

func (x *NestedGroup) GetDefaultJobPriority() int32 {
	if x != nil {
		return x.DefaultJobPriority
	}
	return 0
}

func (x *NestedGroup) GetDefaultJobMinCores() float32 {
	if x != nil {
		return x.DefaultJobMinCores
	}
	return 0
}

func (x *NestedGroup) GetDefaultJobMaxCores() float32 {
	if x != nil {
		return x.DefaultJobMaxCores
	}
	return 0
}

func (x *NestedGroup) GetMinCores() float32 {
	if x != nil {
		return x.MinCores
	}
	return 0
}

func (x *NestedGroup) GetMaxCores() float32 {
	if x != nil {
		return x.MaxCores
	}
	return 0
}

func (x *NestedGroup) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *NestedGroup) GetParent() *NestedGroup {
	if x != nil {
		return x.Parent
	}
	return nil
}

func (x *NestedGroup) GetGroups() *NestedGroupSeq {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *NestedGroup) GetJobs() []string {
	if x != nil {
		return x.Jobs
	}
	return nil
}

func (x *NestedGroup) GetStats() *GroupStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *NestedGroup) GetDefaultJobMinGpus() float32 {
	if x != nil {
		return x.DefaultJobMinGpus
	}
	return 0
}

func (x *NestedGroup) GetDefaultJobMaxGpus() float32 {
	if x != nil {
		return x.DefaultJobMaxGpus
	}
	return 0
}

func (x *NestedGroup) GetMinGpus() float32 {
	if x != nil {
		return x.MinGpus
	}
	return 0
}

func (x *NestedGroup) GetMaxGpus() float32 {
	if x != nil {
		return x.MaxGpus
	}
	return 0
}

type NestedGroupSeq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NestedGroups []*NestedGroup `protobuf:"bytes,1,rep,name=nested_groups,json=nestedGroups,proto3" json:"nested_groups,omitempty"`
}

func (x *NestedGroupSeq) Reset() {
	*x = NestedGroupSeq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NestedGroupSeq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NestedGroupSeq) ProtoMessage() {}

func (x *NestedGroupSeq) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NestedGroupSeq.ProtoReflect.Descriptor instead.
func (*NestedGroupSeq) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{18}
}

func (x *NestedGroupSeq) GetNestedGroups() []*NestedGroup {
	if x != nil {
		return x.NestedGroups
	}
	return nil
}

// NESTED JOB ----
type NestedJob struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	State    JobState `protobuf:"varint,2,opt,name=state,proto3,enum=job.JobState" json:"state,omitempty"`
	Name     string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Shot     string   `protobuf:"bytes,4,opt,name=shot,proto3" json:"shot,omitempty"`
	Show     string   `protobuf:"bytes,5,opt,name=show,proto3" json:"show,omitempty"`
	User     string   `protobuf:"bytes,6,opt,name=user,proto3" json:"user,omitempty"`
	Group    string   `protobuf:"bytes,7,opt,name=group,proto3" json:"group,omitempty"`
	Facility string   `protobuf:"bytes,8,opt,name=facility,proto3" json:"facility,omitempty"`
	Os       string   `protobuf:"bytes,9,opt,name=os,proto3" json:"os,omitempty"`
	// Types that are assignable to UidOptional:
	//
	//	*NestedJob_Uid
	UidOptional isNestedJob_UidOptional `protobuf_oneof:"uid_optional"`
	Priority    int32                   `protobuf:"varint,11,opt,name=priority,proto3" json:"priority,omitempty"`
	MinCores    float32                 `protobuf:"fixed32,12,opt,name=min_cores,json=minCores,proto3" json:"min_cores,omitempty"`
	MaxCores    float32                 `protobuf:"fixed32,13,opt,name=max_cores,json=maxCores,proto3" json:"max_cores,omitempty"`
	LogDir      string                  `protobuf:"bytes,14,opt,name=log_dir,json=logDir,proto3" json:"log_dir,omitempty"`
	IsPaused    bool                    `protobuf:"varint,15,opt,name=is_paused,json=isPaused,proto3" json:"is_paused,omitempty"`
	HasComment  bool                    `protobuf:"varint,16,opt,name=has_comment,json=hasComment,proto3" json:"has_comment,omitempty"`
	AutoEat     bool                    `protobuf:"varint,17,opt,name=auto_eat,json=autoEat,proto3" json:"auto_eat,omitempty"`
	StartTime   int32                   `protobuf:"varint,18,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	StopTime    int32                   `protobuf:"varint,19,opt,name=stop_time,json=stopTime,proto3" json:"stop_time,omitempty"`
	Parent      *NestedGroup            `protobuf:"bytes,20,opt,name=parent,proto3" json:"parent,omitempty"`
	Stats       *JobStats               `protobuf:"bytes,21,opt,name=stats,proto3" json:"stats,omitempty"`
	MinGpus     float32                 `protobuf:"fixed32,22,opt,name=min_gpus,json=minGpus,proto3" json:"min_gpus,omitempty"`
	MaxGpus     float32                 `protobuf:"fixed32,23,opt,name=max_gpus,json=maxGpus,proto3" json:"max_gpus,omitempty"`
}

func (x *NestedJob) Reset() {
	*x = NestedJob{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NestedJob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NestedJob) ProtoMessage() {}

func (x *NestedJob) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NestedJob.ProtoReflect.Descriptor instead.
func (*NestedJob) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{19}
}

func (x *NestedJob) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *NestedJob) GetState() JobState {
	if x != nil {
		return x.State
	}
	return JobState_PENDING
}

func (x *NestedJob) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NestedJob) GetShot() string {
	if x != nil {
		return x.Shot
	}
	return ""
}

func (x *NestedJob) GetShow() string {
	if x != nil {
		return x.Show
	}
	return ""
}

func (x *NestedJob) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *NestedJob) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *NestedJob) GetFacility() string {
	if x != nil {
		return x.Facility
	}
	return ""
}

func (x *NestedJob) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (m *NestedJob) GetUidOptional() isNestedJob_UidOptional {
	if m != nil {
		return m.UidOptional
	}
	return nil
}

func (x *NestedJob) GetUid() int32 {
	if x, ok := x.GetUidOptional().(*NestedJob_Uid); ok {
		return x.Uid
	}
	return 0
}

func (x *NestedJob) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *NestedJob) GetMinCores() float32 {
	if x != nil {
		return x.MinCores
	}
	return 0
}

func (x *NestedJob) GetMaxCores() float32 {
	if x != nil {
		return x.MaxCores
	}
	return 0
}

func (x *NestedJob) GetLogDir() string {
	if x != nil {
		return x.LogDir
	}
	return ""
}

func (x *NestedJob) GetIsPaused() bool {
	if x != nil {
		return x.IsPaused
	}
	return false
}

func (x *NestedJob) GetHasComment() bool {
	if x != nil {
		return x.HasComment
	}
	return false
}

func (x *NestedJob) GetAutoEat() bool {
	if x != nil {
		return x.AutoEat
	}
	return false
}

func (x *NestedJob) GetStartTime() int32 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *NestedJob) GetStopTime() int32 {
	if x != nil {
		return x.StopTime
	}
	return 0
}

func (x *NestedJob) GetParent() *NestedGroup {
	if x != nil {
		return x.Parent
	}
	return nil
}

func (x *NestedJob) GetStats() *JobStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *NestedJob) GetMinGpus() float32 {
	if x != nil {
		return x.MinGpus
	}
	return 0
}

func (x *NestedJob) GetMaxGpus() float32 {
	if x != nil {
		return x.MaxGpus
	}
	return 0
}

type isNestedJob_UidOptional interface {
	isNestedJob_UidOptional()
}

type NestedJob_Uid struct {
	Uid int32 `protobuf:"varint,10,opt,name=uid,proto3,oneof"`
}

func (*NestedJob_Uid) isNestedJob_UidOptional() {}

// FRAME ----
// AddRenderPartition
type FrameAddRenderPartitionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Frame        *Frame `protobuf:"bytes,1,opt,name=frame,proto3" json:"frame,omitempty"`
	Host         string `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	Threads      int32  `protobuf:"varint,3,opt,name=threads,proto3" json:"threads,omitempty"`
	MaxCores     int32  `protobuf:"varint,4,opt,name=max_cores,json=maxCores,proto3" json:"max_cores,omitempty"`
	MaxMemory    int64  `protobuf:"varint,5,opt,name=max_memory,json=maxMemory,proto3" json:"max_memory,omitempty"`
	MaxGpuMemory int64  `protobuf:"varint,6,opt,name=max_gpu_memory,json=maxGpuMemory,proto3" json:"max_gpu_memory,omitempty"`
	Username     string `protobuf:"bytes,7,opt,name=username,proto3" json:"username,omitempty"`
	MaxGpus      int32  `protobuf:"varint,8,opt,name=max_gpus,json=maxGpus,proto3" json:"max_gpus,omitempty"`
}

func (x *FrameAddRenderPartitionRequest) Reset() {
	*x = FrameAddRenderPartitionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrameAddRenderPartitionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrameAddRenderPartitionRequest) ProtoMessage() {}

func (x *FrameAddRenderPartitionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrameAddRenderPartitionRequest.ProtoReflect.Descriptor instead.
func (*FrameAddRenderPartitionRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{20}
}

func (x *FrameAddRenderPartitionRequest) GetFrame() *Frame {
	if x != nil {
		return x.Frame
	}
	return nil
}

func (x *FrameAddRenderPartitionRequest) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *FrameAddRenderPartitionRequest) GetThreads() int32 {
	if x != nil {
		return x.Threads
	}
	return 0
}

func (x *FrameAddRenderPartitionRequest) GetMaxCores() int32 {
	if x != nil {
		return x.MaxCores
	}
	return 0
}

func (x *FrameAddRenderPartitionRequest) GetMaxMemory() int64 {
	if x != nil {
		return x.MaxMemory
	}
	return 0
}

func (x *FrameAddRenderPartitionRequest) GetMaxGpuMemory() int64 {
	if x != nil {
		return x.MaxGpuMemory
	}
	return 0
}

func (x *FrameAddRenderPartitionRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *FrameAddRenderPartitionRequest) GetMaxGpus() int32 {
	if x != nil {
		return x.MaxGpus
	}
	return 0
}

type FrameAddRenderPartitionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RenderPartition *renderPartition.RenderPartition `protobuf:"bytes,1,opt,name=render_partition,json=renderPartition,proto3" json:"render_partition,omitempty"`
}

func (x *FrameAddRenderPartitionResponse) Reset() {
	*x = FrameAddRenderPartitionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrameAddRenderPartitionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrameAddRenderPartitionResponse) ProtoMessage() {}

func (x *FrameAddRenderPartitionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrameAddRenderPartitionResponse.ProtoReflect.Descriptor instead.
func (*FrameAddRenderPartitionResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{21}
}

func (x *FrameAddRenderPartitionResponse) GetRenderPartition() *renderPartition.RenderPartition {
	if x != nil {
		return x.RenderPartition
	}
	return nil
}

// CreateDependencyOnFrame
type FrameCreateDependencyOnFrameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Frame         *Frame `protobuf:"bytes,1,opt,name=frame,proto3" json:"frame,omitempty"`
	DependOnFrame *Frame `protobuf:"bytes,2,opt,name=depend_on_frame,json=dependOnFrame,proto3" json:"depend_on_frame,omitempty"`
}

func (x *FrameCreateDependencyOnFrameRequest) Reset() {
	*x = FrameCreateDependencyOnFrameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrameCreateDependencyOnFrameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrameCreateDependencyOnFrameRequest) ProtoMessage() {}

func (x *FrameCreateDependencyOnFrameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrameCreateDependencyOnFrameRequest.ProtoReflect.Descriptor instead.
func (*FrameCreateDependencyOnFrameRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{22}
}

func (x *FrameCreateDependencyOnFrameRequest) GetFrame() *Frame {
	if x != nil {
		return x.Frame
	}
	return nil
}

func (x *FrameCreateDependencyOnFrameRequest) GetDependOnFrame() *Frame {
	if x != nil {
		return x.DependOnFrame
	}
	return nil
}

type FrameCreateDependencyOnFrameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Depend *depend.Depend `protobuf:"bytes,1,opt,name=depend,proto3" json:"depend,omitempty"`
}

func (x *FrameCreateDependencyOnFrameResponse) Reset() {
	*x = FrameCreateDependencyOnFrameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrameCreateDependencyOnFrameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrameCreateDependencyOnFrameResponse) ProtoMessage() {}

func (x *FrameCreateDependencyOnFrameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrameCreateDependencyOnFrameResponse.ProtoReflect.Descriptor instead.
func (*FrameCreateDependencyOnFrameResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{23}
}

func (x *FrameCreateDependencyOnFrameResponse) GetDepend() *depend.Depend {
	if x != nil {
		return x.Depend
	}
	return nil
}

// CreateDependencyOnJob
type FrameCreateDependencyOnJobRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Frame *Frame `protobuf:"bytes,1,opt,name=frame,proto3" json:"frame,omitempty"`
	Job   *Job   `protobuf:"bytes,2,opt,name=job,proto3" json:"job,omitempty"`
}

func (x *FrameCreateDependencyOnJobRequest) Reset() {
	*x = FrameCreateDependencyOnJobRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrameCreateDependencyOnJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrameCreateDependencyOnJobRequest) ProtoMessage() {}

func (x *FrameCreateDependencyOnJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrameCreateDependencyOnJobRequest.ProtoReflect.Descriptor instead.
func (*FrameCreateDependencyOnJobRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{24}
}

func (x *FrameCreateDependencyOnJobRequest) GetFrame() *Frame {
	if x != nil {
		return x.Frame
	}
	return nil
}

func (x *FrameCreateDependencyOnJobRequest) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

type FrameCreateDependencyOnJobResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Depend *depend.Depend `protobuf:"bytes,1,opt,name=depend,proto3" json:"depend,omitempty"`
}

func (x *FrameCreateDependencyOnJobResponse) Reset() {
	*x = FrameCreateDependencyOnJobResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrameCreateDependencyOnJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrameCreateDependencyOnJobResponse) ProtoMessage() {}

func (x *FrameCreateDependencyOnJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrameCreateDependencyOnJobResponse.ProtoReflect.Descriptor instead.
func (*FrameCreateDependencyOnJobResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{25}
}

func (x *FrameCreateDependencyOnJobResponse) GetDepend() *depend.Depend {
	if x != nil {
		return x.Depend
	}
	return nil
}

// CreateDependencyOnLayer
type FrameCreateDependencyOnLayerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Frame *Frame `protobuf:"bytes,1,opt,name=frame,proto3" json:"frame,omitempty"`
	Layer *Layer `protobuf:"bytes,2,opt,name=layer,proto3" json:"layer,omitempty"`
}

func (x *FrameCreateDependencyOnLayerRequest) Reset() {
	*x = FrameCreateDependencyOnLayerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrameCreateDependencyOnLayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrameCreateDependencyOnLayerRequest) ProtoMessage() {}

func (x *FrameCreateDependencyOnLayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrameCreateDependencyOnLayerRequest.ProtoReflect.Descriptor instead.
func (*FrameCreateDependencyOnLayerRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{26}
}

func (x *FrameCreateDependencyOnLayerRequest) GetFrame() *Frame {
	if x != nil {
		return x.Frame
	}
	return nil
}

func (x *FrameCreateDependencyOnLayerRequest) GetLayer() *Layer {
	if x != nil {
		return x.Layer
	}
	return nil
}

type FrameCreateDependencyOnLayerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Depend *depend.Depend `protobuf:"bytes,1,opt,name=depend,proto3" json:"depend,omitempty"`
}

func (x *FrameCreateDependencyOnLayerResponse) Reset() {
	*x = FrameCreateDependencyOnLayerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrameCreateDependencyOnLayerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrameCreateDependencyOnLayerResponse) ProtoMessage() {}

func (x *FrameCreateDependencyOnLayerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrameCreateDependencyOnLayerResponse.ProtoReflect.Descriptor instead.
func (*FrameCreateDependencyOnLayerResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{27}
}

func (x *FrameCreateDependencyOnLayerResponse) GetDepend() *depend.Depend {
	if x != nil {
		return x.Depend
	}
	return nil
}

// DropDepends
type FrameDropDependsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Frame  *Frame              `protobuf:"bytes,1,opt,name=frame,proto3" json:"frame,omitempty"`
	Target depend.DependTarget `protobuf:"varint,2,opt,name=target,proto3,enum=depend.DependTarget" json:"target,omitempty"`
}

func (x *FrameDropDependsRequest) Reset() {
	*x = FrameDropDependsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrameDropDependsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrameDropDependsRequest) ProtoMessage() {}

func (x *FrameDropDependsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrameDropDependsRequest.ProtoReflect.Descriptor instead.
func (*FrameDropDependsRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{28}
}

func (x *FrameDropDependsRequest) GetFrame() *Frame {
	if x != nil {
		return x.Frame
	}
	return nil
}

func (x *FrameDropDependsRequest) GetTarget() depend.DependTarget {
	if x != nil {
		return x.Target
	}
	return depend.DependTarget(0)
}

type FrameDropDependsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FrameDropDependsResponse) Reset() {
	*x = FrameDropDependsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrameDropDependsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrameDropDependsResponse) ProtoMessage() {}

func (x *FrameDropDependsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrameDropDependsResponse.ProtoReflect.Descriptor instead.
func (*FrameDropDependsResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{29}
}

// Eat
type FrameEatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Frame *Frame `protobuf:"bytes,1,opt,name=frame,proto3" json:"frame,omitempty"`
}

func (x *FrameEatRequest) Reset() {
	*x = FrameEatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrameEatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrameEatRequest) ProtoMessage() {}

func (x *FrameEatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrameEatRequest.ProtoReflect.Descriptor instead.
func (*FrameEatRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{30}
}

func (x *FrameEatRequest) GetFrame() *Frame {
	if x != nil {
		return x.Frame
	}
	return nil
}

type FrameEatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FrameEatResponse) Reset() {
	*x = FrameEatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrameEatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrameEatResponse) ProtoMessage() {}

func (x *FrameEatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrameEatResponse.ProtoReflect.Descriptor instead.
func (*FrameEatResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{31}
}

// FindFrame
type FrameFindFrameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Job   string `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	Layer string `protobuf:"bytes,2,opt,name=layer,proto3" json:"layer,omitempty"`
	Frame int32  `protobuf:"varint,3,opt,name=frame,proto3" json:"frame,omitempty"`
}

func (x *FrameFindFrameRequest) Reset() {
	*x = FrameFindFrameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrameFindFrameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrameFindFrameRequest) ProtoMessage() {}

func (x *FrameFindFrameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrameFindFrameRequest.ProtoReflect.Descriptor instead.
func (*FrameFindFrameRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{32}
}

func (x *FrameFindFrameRequest) GetJob() string {
	if x != nil {
		return x.Job
	}
	return ""
}

func (x *FrameFindFrameRequest) GetLayer() string {
	if x != nil {
		return x.Layer
	}
	return ""
}

func (x *FrameFindFrameRequest) GetFrame() int32 {
	if x != nil {
		return x.Frame
	}
	return 0
}

type FrameFindFrameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Frame *Frame `protobuf:"bytes,1,opt,name=frame,proto3" json:"frame,omitempty"`
}

func (x *FrameFindFrameResponse) Reset() {
	*x = FrameFindFrameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrameFindFrameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrameFindFrameResponse) ProtoMessage() {}

func (x *FrameFindFrameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrameFindFrameResponse.ProtoReflect.Descriptor instead.
func (*FrameFindFrameResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{33}
}

func (x *FrameFindFrameResponse) GetFrame() *Frame {
	if x != nil {
		return x.Frame
	}
	return nil
}

// GetFrame
type FrameGetFrameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *FrameGetFrameRequest) Reset() {
	*x = FrameGetFrameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrameGetFrameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrameGetFrameRequest) ProtoMessage() {}

func (x *FrameGetFrameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrameGetFrameRequest.ProtoReflect.Descriptor instead.
func (*FrameGetFrameRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{34}
}

func (x *FrameGetFrameRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type FrameGetFrameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Frame *Frame `protobuf:"bytes,1,opt,name=frame,proto3" json:"frame,omitempty"`
}

func (x *FrameGetFrameResponse) Reset() {
	*x = FrameGetFrameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrameGetFrameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrameGetFrameResponse) ProtoMessage() {}

func (x *FrameGetFrameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrameGetFrameResponse.ProtoReflect.Descriptor instead.
func (*FrameGetFrameResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{35}
}

func (x *FrameGetFrameResponse) GetFrame() *Frame {
	if x != nil {
		return x.Frame
	}
	return nil
}

// GetFrames
type FrameGetFramesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Job string               `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	R   *FrameSearchCriteria `protobuf:"bytes,2,opt,name=r,proto3" json:"r,omitempty"`
}

func (x *FrameGetFramesRequest) Reset() {
	*x = FrameGetFramesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrameGetFramesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrameGetFramesRequest) ProtoMessage() {}

func (x *FrameGetFramesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrameGetFramesRequest.ProtoReflect.Descriptor instead.
func (*FrameGetFramesRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{36}
}

func (x *FrameGetFramesRequest) GetJob() string {
	if x != nil {
		return x.Job
	}
	return ""
}

func (x *FrameGetFramesRequest) GetR() *FrameSearchCriteria {
	if x != nil {
		return x.R
	}
	return nil
}

type FrameGetFramesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Frames *FrameSeq `protobuf:"bytes,1,opt,name=frames,proto3" json:"frames,omitempty"`
}

func (x *FrameGetFramesResponse) Reset() {
	*x = FrameGetFramesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrameGetFramesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrameGetFramesResponse) ProtoMessage() {}

func (x *FrameGetFramesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrameGetFramesResponse.ProtoReflect.Descriptor instead.
func (*FrameGetFramesResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{37}
}

func (x *FrameGetFramesResponse) GetFrames() *FrameSeq {
	if x != nil {
		return x.Frames
	}
	return nil
}

// GetWhatDependsOnThis
type FrameGetWhatDependsOnThisRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Frame *Frame `protobuf:"bytes,1,opt,name=frame,proto3" json:"frame,omitempty"`
}

func (x *FrameGetWhatDependsOnThisRequest) Reset() {
	*x = FrameGetWhatDependsOnThisRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrameGetWhatDependsOnThisRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrameGetWhatDependsOnThisRequest) ProtoMessage() {}

func (x *FrameGetWhatDependsOnThisRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrameGetWhatDependsOnThisRequest.ProtoReflect.Descriptor instead.
func (*FrameGetWhatDependsOnThisRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{38}
}

func (x *FrameGetWhatDependsOnThisRequest) GetFrame() *Frame {
	if x != nil {
		return x.Frame
	}
	return nil
}

type FrameGetWhatDependsOnThisResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Depends *depend.DependSeq `protobuf:"bytes,1,opt,name=depends,proto3" json:"depends,omitempty"`
}

func (x *FrameGetWhatDependsOnThisResponse) Reset() {
	*x = FrameGetWhatDependsOnThisResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrameGetWhatDependsOnThisResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrameGetWhatDependsOnThisResponse) ProtoMessage() {}

func (x *FrameGetWhatDependsOnThisResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrameGetWhatDependsOnThisResponse.ProtoReflect.Descriptor instead.
func (*FrameGetWhatDependsOnThisResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{39}
}

func (x *FrameGetWhatDependsOnThisResponse) GetDepends() *depend.DependSeq {
	if x != nil {
		return x.Depends
	}
	return nil
}

// GetWhatThisDependsOn
type FrameGetWhatThisDependsOnRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Frame *Frame `protobuf:"bytes,1,opt,name=frame,proto3" json:"frame,omitempty"`
}

func (x *FrameGetWhatThisDependsOnRequest) Reset() {
	*x = FrameGetWhatThisDependsOnRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrameGetWhatThisDependsOnRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrameGetWhatThisDependsOnRequest) ProtoMessage() {}

func (x *FrameGetWhatThisDependsOnRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrameGetWhatThisDependsOnRequest.ProtoReflect.Descriptor instead.
func (*FrameGetWhatThisDependsOnRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{40}
}

func (x *FrameGetWhatThisDependsOnRequest) GetFrame() *Frame {
	if x != nil {
		return x.Frame
	}
	return nil
}

type FrameGetWhatThisDependsOnResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Depends *depend.DependSeq `protobuf:"bytes,1,opt,name=depends,proto3" json:"depends,omitempty"`
}

func (x *FrameGetWhatThisDependsOnResponse) Reset() {
	*x = FrameGetWhatThisDependsOnResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrameGetWhatThisDependsOnResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrameGetWhatThisDependsOnResponse) ProtoMessage() {}

func (x *FrameGetWhatThisDependsOnResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrameGetWhatThisDependsOnResponse.ProtoReflect.Descriptor instead.
func (*FrameGetWhatThisDependsOnResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{41}
}

func (x *FrameGetWhatThisDependsOnResponse) GetDepends() *depend.DependSeq {
	if x != nil {
		return x.Depends
	}
	return nil
}

// Kill
type FrameKillRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Frame *Frame `protobuf:"bytes,1,opt,name=frame,proto3" json:"frame,omitempty"`
}

func (x *FrameKillRequest) Reset() {
	*x = FrameKillRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrameKillRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrameKillRequest) ProtoMessage() {}

func (x *FrameKillRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrameKillRequest.ProtoReflect.Descriptor instead.
func (*FrameKillRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{42}
}

func (x *FrameKillRequest) GetFrame() *Frame {
	if x != nil {
		return x.Frame
	}
	return nil
}

type FrameKillResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FrameKillResponse) Reset() {
	*x = FrameKillResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrameKillResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrameKillResponse) ProtoMessage() {}

func (x *FrameKillResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrameKillResponse.ProtoReflect.Descriptor instead.
func (*FrameKillResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{43}
}

// MarkAsDepend
type FrameMarkAsDependRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Frame *Frame `protobuf:"bytes,1,opt,name=frame,proto3" json:"frame,omitempty"`
}

func (x *FrameMarkAsDependRequest) Reset() {
	*x = FrameMarkAsDependRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrameMarkAsDependRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrameMarkAsDependRequest) ProtoMessage() {}

func (x *FrameMarkAsDependRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrameMarkAsDependRequest.ProtoReflect.Descriptor instead.
func (*FrameMarkAsDependRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{44}
}

func (x *FrameMarkAsDependRequest) GetFrame() *Frame {
	if x != nil {
		return x.Frame
	}
	return nil
}

type FrameMarkAsDependResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FrameMarkAsDependResponse) Reset() {
	*x = FrameMarkAsDependResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrameMarkAsDependResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrameMarkAsDependResponse) ProtoMessage() {}

func (x *FrameMarkAsDependResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrameMarkAsDependResponse.ProtoReflect.Descriptor instead.
func (*FrameMarkAsDependResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{45}
}

// MarkAsWaiting
type FrameMarkAsWaitingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Frame *Frame `protobuf:"bytes,1,opt,name=frame,proto3" json:"frame,omitempty"`
}

func (x *FrameMarkAsWaitingRequest) Reset() {
	*x = FrameMarkAsWaitingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrameMarkAsWaitingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrameMarkAsWaitingRequest) ProtoMessage() {}

func (x *FrameMarkAsWaitingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrameMarkAsWaitingRequest.ProtoReflect.Descriptor instead.
func (*FrameMarkAsWaitingRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{46}
}

func (x *FrameMarkAsWaitingRequest) GetFrame() *Frame {
	if x != nil {
		return x.Frame
	}
	return nil
}

type FrameMarkAsWaitingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FrameMarkAsWaitingResponse) Reset() {
	*x = FrameMarkAsWaitingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrameMarkAsWaitingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrameMarkAsWaitingResponse) ProtoMessage() {}

func (x *FrameMarkAsWaitingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrameMarkAsWaitingResponse.ProtoReflect.Descriptor instead.
func (*FrameMarkAsWaitingResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{47}
}

// Retry
type FrameRetryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Frame *Frame `protobuf:"bytes,1,opt,name=frame,proto3" json:"frame,omitempty"`
}

func (x *FrameRetryRequest) Reset() {
	*x = FrameRetryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrameRetryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrameRetryRequest) ProtoMessage() {}

func (x *FrameRetryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrameRetryRequest.ProtoReflect.Descriptor instead.
func (*FrameRetryRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{48}
}

func (x *FrameRetryRequest) GetFrame() *Frame {
	if x != nil {
		return x.Frame
	}
	return nil
}

type FrameRetryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FrameRetryResponse) Reset() {
	*x = FrameRetryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrameRetryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrameRetryResponse) ProtoMessage() {}

func (x *FrameRetryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrameRetryResponse.ProtoReflect.Descriptor instead.
func (*FrameRetryResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{49}
}

// SetCheckpointState
type FrameSetCheckpointStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Frame *Frame          `protobuf:"bytes,1,opt,name=frame,proto3" json:"frame,omitempty"`
	State CheckpointState `protobuf:"varint,2,opt,name=state,proto3,enum=job.CheckpointState" json:"state,omitempty"`
}

func (x *FrameSetCheckpointStateRequest) Reset() {
	*x = FrameSetCheckpointStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrameSetCheckpointStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrameSetCheckpointStateRequest) ProtoMessage() {}

func (x *FrameSetCheckpointStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrameSetCheckpointStateRequest.ProtoReflect.Descriptor instead.
func (*FrameSetCheckpointStateRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{50}
}

func (x *FrameSetCheckpointStateRequest) GetFrame() *Frame {
	if x != nil {
		return x.Frame
	}
	return nil
}

func (x *FrameSetCheckpointStateRequest) GetState() CheckpointState {
	if x != nil {
		return x.State
	}
	return CheckpointState_DISABLED
}

type FrameSetCheckpointStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FrameSetCheckpointStateResponse) Reset() {
	*x = FrameSetCheckpointStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrameSetCheckpointStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrameSetCheckpointStateResponse) ProtoMessage() {}

func (x *FrameSetCheckpointStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrameSetCheckpointStateResponse.ProtoReflect.Descriptor instead.
func (*FrameSetCheckpointStateResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{51}
}

// GROUP ----
// CreateSubGroup
type GroupCreateSubGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group *Group `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	Name  string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GroupCreateSubGroupRequest) Reset() {
	*x = GroupCreateSubGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupCreateSubGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupCreateSubGroupRequest) ProtoMessage() {}

func (x *GroupCreateSubGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupCreateSubGroupRequest.ProtoReflect.Descriptor instead.
func (*GroupCreateSubGroupRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{52}
}

func (x *GroupCreateSubGroupRequest) GetGroup() *Group {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *GroupCreateSubGroupRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GroupCreateSubGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group *Group `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
}

func (x *GroupCreateSubGroupResponse) Reset() {
	*x = GroupCreateSubGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupCreateSubGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupCreateSubGroupResponse) ProtoMessage() {}

func (x *GroupCreateSubGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupCreateSubGroupResponse.ProtoReflect.Descriptor instead.
func (*GroupCreateSubGroupResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{53}
}

func (x *GroupCreateSubGroupResponse) GetGroup() *Group {
	if x != nil {
		return x.Group
	}
	return nil
}

// Delete
type GroupDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group *Group `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
}

func (x *GroupDeleteRequest) Reset() {
	*x = GroupDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupDeleteRequest) ProtoMessage() {}

func (x *GroupDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupDeleteRequest.ProtoReflect.Descriptor instead.
func (*GroupDeleteRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{54}
}

func (x *GroupDeleteRequest) GetGroup() *Group {
	if x != nil {
		return x.Group
	}
	return nil
}

type GroupDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GroupDeleteResponse) Reset() {
	*x = GroupDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupDeleteResponse) ProtoMessage() {}

func (x *GroupDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupDeleteResponse.ProtoReflect.Descriptor instead.
func (*GroupDeleteResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{55}
}

// FindGroup
type GroupFindGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Show string `protobuf:"bytes,1,opt,name=show,proto3" json:"show,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GroupFindGroupRequest) Reset() {
	*x = GroupFindGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupFindGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupFindGroupRequest) ProtoMessage() {}

func (x *GroupFindGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupFindGroupRequest.ProtoReflect.Descriptor instead.
func (*GroupFindGroupRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{56}
}

func (x *GroupFindGroupRequest) GetShow() string {
	if x != nil {
		return x.Show
	}
	return ""
}

func (x *GroupFindGroupRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GroupFindGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group *Group `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
}

func (x *GroupFindGroupResponse) Reset() {
	*x = GroupFindGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupFindGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupFindGroupResponse) ProtoMessage() {}

func (x *GroupFindGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupFindGroupResponse.ProtoReflect.Descriptor instead.
func (*GroupFindGroupResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{57}
}

func (x *GroupFindGroupResponse) GetGroup() *Group {
	if x != nil {
		return x.Group
	}
	return nil
}

// GetGroup
type GroupGetGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GroupGetGroupRequest) Reset() {
	*x = GroupGetGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupGetGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupGetGroupRequest) ProtoMessage() {}

func (x *GroupGetGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupGetGroupRequest.ProtoReflect.Descriptor instead.
func (*GroupGetGroupRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{58}
}

func (x *GroupGetGroupRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GroupGetGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group *Group `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
}

func (x *GroupGetGroupResponse) Reset() {
	*x = GroupGetGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupGetGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupGetGroupResponse) ProtoMessage() {}

func (x *GroupGetGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupGetGroupResponse.ProtoReflect.Descriptor instead.
func (*GroupGetGroupResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{59}
}

func (x *GroupGetGroupResponse) GetGroup() *Group {
	if x != nil {
		return x.Group
	}
	return nil
}

// GetGroups
type GroupGetGroupsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group *Group `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
}

func (x *GroupGetGroupsRequest) Reset() {
	*x = GroupGetGroupsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupGetGroupsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupGetGroupsRequest) ProtoMessage() {}

func (x *GroupGetGroupsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupGetGroupsRequest.ProtoReflect.Descriptor instead.
func (*GroupGetGroupsRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{60}
}

func (x *GroupGetGroupsRequest) GetGroup() *Group {
	if x != nil {
		return x.Group
	}
	return nil
}

type GroupGetGroupsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Groups *GroupSeq `protobuf:"bytes,1,opt,name=groups,proto3" json:"groups,omitempty"`
}

func (x *GroupGetGroupsResponse) Reset() {
	*x = GroupGetGroupsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupGetGroupsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupGetGroupsResponse) ProtoMessage() {}

func (x *GroupGetGroupsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupGetGroupsResponse.ProtoReflect.Descriptor instead.
func (*GroupGetGroupsResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{61}
}

func (x *GroupGetGroupsResponse) GetGroups() *GroupSeq {
	if x != nil {
		return x.Groups
	}
	return nil
}

// GetJobs
type GroupGetJobsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group *Group `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
}

func (x *GroupGetJobsRequest) Reset() {
	*x = GroupGetJobsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupGetJobsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupGetJobsRequest) ProtoMessage() {}

func (x *GroupGetJobsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupGetJobsRequest.ProtoReflect.Descriptor instead.
func (*GroupGetJobsRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{62}
}

func (x *GroupGetJobsRequest) GetGroup() *Group {
	if x != nil {
		return x.Group
	}
	return nil
}

type GroupGetJobsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Jobs *JobSeq `protobuf:"bytes,1,opt,name=jobs,proto3" json:"jobs,omitempty"`
}

func (x *GroupGetJobsResponse) Reset() {
	*x = GroupGetJobsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupGetJobsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupGetJobsResponse) ProtoMessage() {}

func (x *GroupGetJobsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupGetJobsResponse.ProtoReflect.Descriptor instead.
func (*GroupGetJobsResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{63}
}

func (x *GroupGetJobsResponse) GetJobs() *JobSeq {
	if x != nil {
		return x.Jobs
	}
	return nil
}

// ReparentGroups
type GroupReparentGroupsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group  *Group    `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	Groups *GroupSeq `protobuf:"bytes,2,opt,name=groups,proto3" json:"groups,omitempty"`
}

func (x *GroupReparentGroupsRequest) Reset() {
	*x = GroupReparentGroupsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupReparentGroupsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupReparentGroupsRequest) ProtoMessage() {}

func (x *GroupReparentGroupsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupReparentGroupsRequest.ProtoReflect.Descriptor instead.
func (*GroupReparentGroupsRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{64}
}

func (x *GroupReparentGroupsRequest) GetGroup() *Group {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *GroupReparentGroupsRequest) GetGroups() *GroupSeq {
	if x != nil {
		return x.Groups
	}
	return nil
}

type GroupReparentGroupsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GroupReparentGroupsResponse) Reset() {
	*x = GroupReparentGroupsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupReparentGroupsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupReparentGroupsResponse) ProtoMessage() {}

func (x *GroupReparentGroupsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupReparentGroupsResponse.ProtoReflect.Descriptor instead.
func (*GroupReparentGroupsResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{65}
}

// ReparentJobs
type GroupReparentJobsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group *Group  `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	Jobs  *JobSeq `protobuf:"bytes,2,opt,name=jobs,proto3" json:"jobs,omitempty"`
}

func (x *GroupReparentJobsRequest) Reset() {
	*x = GroupReparentJobsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupReparentJobsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupReparentJobsRequest) ProtoMessage() {}

func (x *GroupReparentJobsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupReparentJobsRequest.ProtoReflect.Descriptor instead.
func (*GroupReparentJobsRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{66}
}

func (x *GroupReparentJobsRequest) GetGroup() *Group {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *GroupReparentJobsRequest) GetJobs() *JobSeq {
	if x != nil {
		return x.Jobs
	}
	return nil
}

type GroupReparentJobsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GroupReparentJobsResponse) Reset() {
	*x = GroupReparentJobsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupReparentJobsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupReparentJobsResponse) ProtoMessage() {}

func (x *GroupReparentJobsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupReparentJobsResponse.ProtoReflect.Descriptor instead.
func (*GroupReparentJobsResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{67}
}

// SetDefJobMaxCores
type GroupSetDefJobMaxCoresRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group    *Group  `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	MaxCores float32 `protobuf:"fixed32,2,opt,name=max_cores,json=maxCores,proto3" json:"max_cores,omitempty"`
}

func (x *GroupSetDefJobMaxCoresRequest) Reset() {
	*x = GroupSetDefJobMaxCoresRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupSetDefJobMaxCoresRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupSetDefJobMaxCoresRequest) ProtoMessage() {}

func (x *GroupSetDefJobMaxCoresRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupSetDefJobMaxCoresRequest.ProtoReflect.Descriptor instead.
func (*GroupSetDefJobMaxCoresRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{68}
}

func (x *GroupSetDefJobMaxCoresRequest) GetGroup() *Group {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *GroupSetDefJobMaxCoresRequest) GetMaxCores() float32 {
	if x != nil {
		return x.MaxCores
	}
	return 0
}

type GroupSetDefJobMaxCoresResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GroupSetDefJobMaxCoresResponse) Reset() {
	*x = GroupSetDefJobMaxCoresResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupSetDefJobMaxCoresResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupSetDefJobMaxCoresResponse) ProtoMessage() {}

func (x *GroupSetDefJobMaxCoresResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupSetDefJobMaxCoresResponse.ProtoReflect.Descriptor instead.
func (*GroupSetDefJobMaxCoresResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{69}
}

// SetDefJobMinCores
type GroupSetDefJobMinCoresRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group    *Group  `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	MinCores float32 `protobuf:"fixed32,2,opt,name=min_cores,json=minCores,proto3" json:"min_cores,omitempty"`
}

func (x *GroupSetDefJobMinCoresRequest) Reset() {
	*x = GroupSetDefJobMinCoresRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupSetDefJobMinCoresRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupSetDefJobMinCoresRequest) ProtoMessage() {}

func (x *GroupSetDefJobMinCoresRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupSetDefJobMinCoresRequest.ProtoReflect.Descriptor instead.
func (*GroupSetDefJobMinCoresRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{70}
}

func (x *GroupSetDefJobMinCoresRequest) GetGroup() *Group {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *GroupSetDefJobMinCoresRequest) GetMinCores() float32 {
	if x != nil {
		return x.MinCores
	}
	return 0
}

type GroupSetDefJobMinCoresResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GroupSetDefJobMinCoresResponse) Reset() {
	*x = GroupSetDefJobMinCoresResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupSetDefJobMinCoresResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupSetDefJobMinCoresResponse) ProtoMessage() {}

func (x *GroupSetDefJobMinCoresResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupSetDefJobMinCoresResponse.ProtoReflect.Descriptor instead.
func (*GroupSetDefJobMinCoresResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{71}
}

// SetDefaultJobMaxGpus
type GroupSetDefJobMaxGpusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group   *Group `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	MaxGpus int32  `protobuf:"varint,2,opt,name=max_gpus,json=maxGpus,proto3" json:"max_gpus,omitempty"`
}

func (x *GroupSetDefJobMaxGpusRequest) Reset() {
	*x = GroupSetDefJobMaxGpusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupSetDefJobMaxGpusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupSetDefJobMaxGpusRequest) ProtoMessage() {}

func (x *GroupSetDefJobMaxGpusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupSetDefJobMaxGpusRequest.ProtoReflect.Descriptor instead.
func (*GroupSetDefJobMaxGpusRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{72}
}

func (x *GroupSetDefJobMaxGpusRequest) GetGroup() *Group {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *GroupSetDefJobMaxGpusRequest) GetMaxGpus() int32 {
	if x != nil {
		return x.MaxGpus
	}
	return 0
}

type GroupSetDefJobMaxGpusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GroupSetDefJobMaxGpusResponse) Reset() {
	*x = GroupSetDefJobMaxGpusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupSetDefJobMaxGpusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupSetDefJobMaxGpusResponse) ProtoMessage() {}

func (x *GroupSetDefJobMaxGpusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupSetDefJobMaxGpusResponse.ProtoReflect.Descriptor instead.
func (*GroupSetDefJobMaxGpusResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{73}
}

// SetDefaultJobMinGpus
type GroupSetDefJobMinGpusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group   *Group `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	MinGpus int32  `protobuf:"varint,2,opt,name=min_gpus,json=minGpus,proto3" json:"min_gpus,omitempty"`
}

func (x *GroupSetDefJobMinGpusRequest) Reset() {
	*x = GroupSetDefJobMinGpusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupSetDefJobMinGpusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupSetDefJobMinGpusRequest) ProtoMessage() {}

func (x *GroupSetDefJobMinGpusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupSetDefJobMinGpusRequest.ProtoReflect.Descriptor instead.
func (*GroupSetDefJobMinGpusRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{74}
}

func (x *GroupSetDefJobMinGpusRequest) GetGroup() *Group {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *GroupSetDefJobMinGpusRequest) GetMinGpus() int32 {
	if x != nil {
		return x.MinGpus
	}
	return 0
}

type GroupSetDefJobMinGpusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GroupSetDefJobMinGpusResponse) Reset() {
	*x = GroupSetDefJobMinGpusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupSetDefJobMinGpusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupSetDefJobMinGpusResponse) ProtoMessage() {}

func (x *GroupSetDefJobMinGpusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupSetDefJobMinGpusResponse.ProtoReflect.Descriptor instead.
func (*GroupSetDefJobMinGpusResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{75}
}

// SetDefJobPriority
type GroupSetDefJobPriorityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group    *Group `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	Priority int32  `protobuf:"varint,2,opt,name=priority,proto3" json:"priority,omitempty"`
}

func (x *GroupSetDefJobPriorityRequest) Reset() {
	*x = GroupSetDefJobPriorityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupSetDefJobPriorityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupSetDefJobPriorityRequest) ProtoMessage() {}

func (x *GroupSetDefJobPriorityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupSetDefJobPriorityRequest.ProtoReflect.Descriptor instead.
func (*GroupSetDefJobPriorityRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{76}
}

func (x *GroupSetDefJobPriorityRequest) GetGroup() *Group {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *GroupSetDefJobPriorityRequest) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

type GroupSetDefJobPriorityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GroupSetDefJobPriorityResponse) Reset() {
	*x = GroupSetDefJobPriorityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupSetDefJobPriorityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupSetDefJobPriorityResponse) ProtoMessage() {}

func (x *GroupSetDefJobPriorityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupSetDefJobPriorityResponse.ProtoReflect.Descriptor instead.
func (*GroupSetDefJobPriorityResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{77}
}

// SetDept
type GroupSetDeptRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group *Group `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	Dept  string `protobuf:"bytes,2,opt,name=dept,proto3" json:"dept,omitempty"`
}

func (x *GroupSetDeptRequest) Reset() {
	*x = GroupSetDeptRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupSetDeptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupSetDeptRequest) ProtoMessage() {}

func (x *GroupSetDeptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupSetDeptRequest.ProtoReflect.Descriptor instead.
func (*GroupSetDeptRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{78}
}

func (x *GroupSetDeptRequest) GetGroup() *Group {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *GroupSetDeptRequest) GetDept() string {
	if x != nil {
		return x.Dept
	}
	return ""
}

type GroupSetDeptResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GroupSetDeptResponse) Reset() {
	*x = GroupSetDeptResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupSetDeptResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupSetDeptResponse) ProtoMessage() {}

func (x *GroupSetDeptResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupSetDeptResponse.ProtoReflect.Descriptor instead.
func (*GroupSetDeptResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{79}
}

// SetGroup
type GroupSetGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group       *Group `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	ParentGroup *Group `protobuf:"bytes,2,opt,name=parent_group,json=parentGroup,proto3" json:"parent_group,omitempty"`
}

func (x *GroupSetGroupRequest) Reset() {
	*x = GroupSetGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupSetGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupSetGroupRequest) ProtoMessage() {}

func (x *GroupSetGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupSetGroupRequest.ProtoReflect.Descriptor instead.
func (*GroupSetGroupRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{80}
}

func (x *GroupSetGroupRequest) GetGroup() *Group {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *GroupSetGroupRequest) GetParentGroup() *Group {
	if x != nil {
		return x.ParentGroup
	}
	return nil
}

type GroupSetGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GroupSetGroupResponse) Reset() {
	*x = GroupSetGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupSetGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupSetGroupResponse) ProtoMessage() {}

func (x *GroupSetGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupSetGroupResponse.ProtoReflect.Descriptor instead.
func (*GroupSetGroupResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{81}
}

// SetMaxCores
type GroupSetMaxCoresRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group    *Group  `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	MaxCores float32 `protobuf:"fixed32,2,opt,name=max_cores,json=maxCores,proto3" json:"max_cores,omitempty"`
}

func (x *GroupSetMaxCoresRequest) Reset() {
	*x = GroupSetMaxCoresRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupSetMaxCoresRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupSetMaxCoresRequest) ProtoMessage() {}

func (x *GroupSetMaxCoresRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupSetMaxCoresRequest.ProtoReflect.Descriptor instead.
func (*GroupSetMaxCoresRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{82}
}

func (x *GroupSetMaxCoresRequest) GetGroup() *Group {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *GroupSetMaxCoresRequest) GetMaxCores() float32 {
	if x != nil {
		return x.MaxCores
	}
	return 0
}

type GroupSetMaxCoresResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GroupSetMaxCoresResponse) Reset() {
	*x = GroupSetMaxCoresResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupSetMaxCoresResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupSetMaxCoresResponse) ProtoMessage() {}

func (x *GroupSetMaxCoresResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupSetMaxCoresResponse.ProtoReflect.Descriptor instead.
func (*GroupSetMaxCoresResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{83}
}

// SetMinCores
type GroupSetMinCoresRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group    *Group  `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	MinCores float32 `protobuf:"fixed32,2,opt,name=min_cores,json=minCores,proto3" json:"min_cores,omitempty"`
}

func (x *GroupSetMinCoresRequest) Reset() {
	*x = GroupSetMinCoresRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupSetMinCoresRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupSetMinCoresRequest) ProtoMessage() {}

func (x *GroupSetMinCoresRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupSetMinCoresRequest.ProtoReflect.Descriptor instead.
func (*GroupSetMinCoresRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{84}
}

func (x *GroupSetMinCoresRequest) GetGroup() *Group {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *GroupSetMinCoresRequest) GetMinCores() float32 {
	if x != nil {
		return x.MinCores
	}
	return 0
}

type GroupSetMinCoresResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GroupSetMinCoresResponse) Reset() {
	*x = GroupSetMinCoresResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupSetMinCoresResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupSetMinCoresResponse) ProtoMessage() {}

func (x *GroupSetMinCoresResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupSetMinCoresResponse.ProtoReflect.Descriptor instead.
func (*GroupSetMinCoresResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{85}
}

// SetMaxGpus
type GroupSetMaxGpusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group   *Group `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	MaxGpus int32  `protobuf:"varint,2,opt,name=max_gpus,json=maxGpus,proto3" json:"max_gpus,omitempty"`
}

func (x *GroupSetMaxGpusRequest) Reset() {
	*x = GroupSetMaxGpusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupSetMaxGpusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupSetMaxGpusRequest) ProtoMessage() {}

func (x *GroupSetMaxGpusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupSetMaxGpusRequest.ProtoReflect.Descriptor instead.
func (*GroupSetMaxGpusRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{86}
}

func (x *GroupSetMaxGpusRequest) GetGroup() *Group {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *GroupSetMaxGpusRequest) GetMaxGpus() int32 {
	if x != nil {
		return x.MaxGpus
	}
	return 0
}

type GroupSetMaxGpusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GroupSetMaxGpusResponse) Reset() {
	*x = GroupSetMaxGpusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupSetMaxGpusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupSetMaxGpusResponse) ProtoMessage() {}

func (x *GroupSetMaxGpusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupSetMaxGpusResponse.ProtoReflect.Descriptor instead.
func (*GroupSetMaxGpusResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{87}
}

// SetMinGpus
type GroupSetMinGpusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group   *Group `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	MinGpus int32  `protobuf:"varint,2,opt,name=min_gpus,json=minGpus,proto3" json:"min_gpus,omitempty"`
}

func (x *GroupSetMinGpusRequest) Reset() {
	*x = GroupSetMinGpusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupSetMinGpusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupSetMinGpusRequest) ProtoMessage() {}

func (x *GroupSetMinGpusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupSetMinGpusRequest.ProtoReflect.Descriptor instead.
func (*GroupSetMinGpusRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{88}
}

func (x *GroupSetMinGpusRequest) GetGroup() *Group {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *GroupSetMinGpusRequest) GetMinGpus() int32 {
	if x != nil {
		return x.MinGpus
	}
	return 0
}

type GroupSetMinGpusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GroupSetMinGpusResponse) Reset() {
	*x = GroupSetMinGpusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupSetMinGpusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupSetMinGpusResponse) ProtoMessage() {}

func (x *GroupSetMinGpusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupSetMinGpusResponse.ProtoReflect.Descriptor instead.
func (*GroupSetMinGpusResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{89}
}

// SetName
type GroupSetNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group *Group `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	Name  string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GroupSetNameRequest) Reset() {
	*x = GroupSetNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupSetNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupSetNameRequest) ProtoMessage() {}

func (x *GroupSetNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupSetNameRequest.ProtoReflect.Descriptor instead.
func (*GroupSetNameRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{90}
}

func (x *GroupSetNameRequest) GetGroup() *Group {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *GroupSetNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GroupSetNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GroupSetNameResponse) Reset() {
	*x = GroupSetNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupSetNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupSetNameResponse) ProtoMessage() {}

func (x *GroupSetNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupSetNameResponse.ProtoReflect.Descriptor instead.
func (*GroupSetNameResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{91}
}

// JOB ----
// AddComment
type JobAddCommentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Job        *Job             `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	NewComment *comment.Comment `protobuf:"bytes,2,opt,name=new_comment,json=newComment,proto3" json:"new_comment,omitempty"`
}

func (x *JobAddCommentRequest) Reset() {
	*x = JobAddCommentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobAddCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobAddCommentRequest) ProtoMessage() {}

func (x *JobAddCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobAddCommentRequest.ProtoReflect.Descriptor instead.
func (*JobAddCommentRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{92}
}

func (x *JobAddCommentRequest) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

func (x *JobAddCommentRequest) GetNewComment() *comment.Comment {
	if x != nil {
		return x.NewComment
	}
	return nil
}

type JobAddCommentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *JobAddCommentResponse) Reset() {
	*x = JobAddCommentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobAddCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobAddCommentResponse) ProtoMessage() {}

func (x *JobAddCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobAddCommentResponse.ProtoReflect.Descriptor instead.
func (*JobAddCommentResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{93}
}

// AddRenderPartition
type JobAddRenderPartRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Job          *Job   `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	Host         string `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	Threads      int32  `protobuf:"varint,3,opt,name=threads,proto3" json:"threads,omitempty"`
	MaxCores     int32  `protobuf:"varint,4,opt,name=max_cores,json=maxCores,proto3" json:"max_cores,omitempty"`
	MaxMemory    int64  `protobuf:"varint,5,opt,name=max_memory,json=maxMemory,proto3" json:"max_memory,omitempty"`
	MaxGpuMemory int64  `protobuf:"varint,6,opt,name=max_gpu_memory,json=maxGpuMemory,proto3" json:"max_gpu_memory,omitempty"`
	Username     string `protobuf:"bytes,7,opt,name=username,proto3" json:"username,omitempty"`
	MaxGpus      int32  `protobuf:"varint,8,opt,name=max_gpus,json=maxGpus,proto3" json:"max_gpus,omitempty"`
}

func (x *JobAddRenderPartRequest) Reset() {
	*x = JobAddRenderPartRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobAddRenderPartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobAddRenderPartRequest) ProtoMessage() {}

func (x *JobAddRenderPartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobAddRenderPartRequest.ProtoReflect.Descriptor instead.
func (*JobAddRenderPartRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{94}
}

func (x *JobAddRenderPartRequest) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

func (x *JobAddRenderPartRequest) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *JobAddRenderPartRequest) GetThreads() int32 {
	if x != nil {
		return x.Threads
	}
	return 0
}

func (x *JobAddRenderPartRequest) GetMaxCores() int32 {
	if x != nil {
		return x.MaxCores
	}
	return 0
}

func (x *JobAddRenderPartRequest) GetMaxMemory() int64 {
	if x != nil {
		return x.MaxMemory
	}
	return 0
}

func (x *JobAddRenderPartRequest) GetMaxGpuMemory() int64 {
	if x != nil {
		return x.MaxGpuMemory
	}
	return 0
}

func (x *JobAddRenderPartRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *JobAddRenderPartRequest) GetMaxGpus() int32 {
	if x != nil {
		return x.MaxGpus
	}
	return 0
}

type JobAddRenderPartResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RenderPartition *renderPartition.RenderPartition `protobuf:"bytes,1,opt,name=render_partition,json=renderPartition,proto3" json:"render_partition,omitempty"`
}

func (x *JobAddRenderPartResponse) Reset() {
	*x = JobAddRenderPartResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobAddRenderPartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobAddRenderPartResponse) ProtoMessage() {}

func (x *JobAddRenderPartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobAddRenderPartResponse.ProtoReflect.Descriptor instead.
func (*JobAddRenderPartResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{95}
}

func (x *JobAddRenderPartResponse) GetRenderPartition() *renderPartition.RenderPartition {
	if x != nil {
		return x.RenderPartition
	}
	return nil
}

// CreateDependencyOnFrame
type JobCreateDependencyOnFrameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Job   *Job   `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	Frame *Frame `protobuf:"bytes,2,opt,name=frame,proto3" json:"frame,omitempty"`
}

func (x *JobCreateDependencyOnFrameRequest) Reset() {
	*x = JobCreateDependencyOnFrameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobCreateDependencyOnFrameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobCreateDependencyOnFrameRequest) ProtoMessage() {}

func (x *JobCreateDependencyOnFrameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobCreateDependencyOnFrameRequest.ProtoReflect.Descriptor instead.
func (*JobCreateDependencyOnFrameRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{96}
}

func (x *JobCreateDependencyOnFrameRequest) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

func (x *JobCreateDependencyOnFrameRequest) GetFrame() *Frame {
	if x != nil {
		return x.Frame
	}
	return nil
}

type JobCreateDependencyOnFrameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Depend *depend.Depend `protobuf:"bytes,1,opt,name=depend,proto3" json:"depend,omitempty"`
}

func (x *JobCreateDependencyOnFrameResponse) Reset() {
	*x = JobCreateDependencyOnFrameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobCreateDependencyOnFrameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobCreateDependencyOnFrameResponse) ProtoMessage() {}

func (x *JobCreateDependencyOnFrameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobCreateDependencyOnFrameResponse.ProtoReflect.Descriptor instead.
func (*JobCreateDependencyOnFrameResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{97}
}

func (x *JobCreateDependencyOnFrameResponse) GetDepend() *depend.Depend {
	if x != nil {
		return x.Depend
	}
	return nil
}

// CreateDependencyOnJob
type JobCreateDependencyOnJobRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Job   *Job `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	OnJob *Job `protobuf:"bytes,2,opt,name=on_job,json=onJob,proto3" json:"on_job,omitempty"`
}

func (x *JobCreateDependencyOnJobRequest) Reset() {
	*x = JobCreateDependencyOnJobRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobCreateDependencyOnJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobCreateDependencyOnJobRequest) ProtoMessage() {}

func (x *JobCreateDependencyOnJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobCreateDependencyOnJobRequest.ProtoReflect.Descriptor instead.
func (*JobCreateDependencyOnJobRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{98}
}

func (x *JobCreateDependencyOnJobRequest) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

func (x *JobCreateDependencyOnJobRequest) GetOnJob() *Job {
	if x != nil {
		return x.OnJob
	}
	return nil
}

type JobCreateDependencyOnJobResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Depend *depend.Depend `protobuf:"bytes,1,opt,name=depend,proto3" json:"depend,omitempty"`
}

func (x *JobCreateDependencyOnJobResponse) Reset() {
	*x = JobCreateDependencyOnJobResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobCreateDependencyOnJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobCreateDependencyOnJobResponse) ProtoMessage() {}

func (x *JobCreateDependencyOnJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobCreateDependencyOnJobResponse.ProtoReflect.Descriptor instead.
func (*JobCreateDependencyOnJobResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{99}
}

func (x *JobCreateDependencyOnJobResponse) GetDepend() *depend.Depend {
	if x != nil {
		return x.Depend
	}
	return nil
}

// CreateDependencyOnLayer
type JobCreateDependencyOnLayerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Job   *Job   `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	Layer *Layer `protobuf:"bytes,2,opt,name=layer,proto3" json:"layer,omitempty"`
}

func (x *JobCreateDependencyOnLayerRequest) Reset() {
	*x = JobCreateDependencyOnLayerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobCreateDependencyOnLayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobCreateDependencyOnLayerRequest) ProtoMessage() {}

func (x *JobCreateDependencyOnLayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobCreateDependencyOnLayerRequest.ProtoReflect.Descriptor instead.
func (*JobCreateDependencyOnLayerRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{100}
}

func (x *JobCreateDependencyOnLayerRequest) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

func (x *JobCreateDependencyOnLayerRequest) GetLayer() *Layer {
	if x != nil {
		return x.Layer
	}
	return nil
}

type JobCreateDependencyOnLayerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Depend *depend.Depend `protobuf:"bytes,1,opt,name=depend,proto3" json:"depend,omitempty"`
}

func (x *JobCreateDependencyOnLayerResponse) Reset() {
	*x = JobCreateDependencyOnLayerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobCreateDependencyOnLayerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobCreateDependencyOnLayerResponse) ProtoMessage() {}

func (x *JobCreateDependencyOnLayerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobCreateDependencyOnLayerResponse.ProtoReflect.Descriptor instead.
func (*JobCreateDependencyOnLayerResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{101}
}

func (x *JobCreateDependencyOnLayerResponse) GetDepend() *depend.Depend {
	if x != nil {
		return x.Depend
	}
	return nil
}

// DropDepends
type JobDropDependsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Job    *Job                `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	Target depend.DependTarget `protobuf:"varint,2,opt,name=target,proto3,enum=depend.DependTarget" json:"target,omitempty"`
}

func (x *JobDropDependsRequest) Reset() {
	*x = JobDropDependsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobDropDependsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobDropDependsRequest) ProtoMessage() {}

func (x *JobDropDependsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobDropDependsRequest.ProtoReflect.Descriptor instead.
func (*JobDropDependsRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{102}
}

func (x *JobDropDependsRequest) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

func (x *JobDropDependsRequest) GetTarget() depend.DependTarget {
	if x != nil {
		return x.Target
	}
	return depend.DependTarget(0)
}

type JobDropDependsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *JobDropDependsResponse) Reset() {
	*x = JobDropDependsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobDropDependsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobDropDependsResponse) ProtoMessage() {}

func (x *JobDropDependsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobDropDependsResponse.ProtoReflect.Descriptor instead.
func (*JobDropDependsResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{103}
}

// EatFrames
type JobEatFramesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Job *Job                 `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	Req *FrameSearchCriteria `protobuf:"bytes,2,opt,name=req,proto3" json:"req,omitempty"`
}

func (x *JobEatFramesRequest) Reset() {
	*x = JobEatFramesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobEatFramesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobEatFramesRequest) ProtoMessage() {}

func (x *JobEatFramesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobEatFramesRequest.ProtoReflect.Descriptor instead.
func (*JobEatFramesRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{104}
}

func (x *JobEatFramesRequest) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

func (x *JobEatFramesRequest) GetReq() *FrameSearchCriteria {
	if x != nil {
		return x.Req
	}
	return nil
}

type JobEatFramesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *JobEatFramesResponse) Reset() {
	*x = JobEatFramesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobEatFramesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobEatFramesResponse) ProtoMessage() {}

func (x *JobEatFramesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobEatFramesResponse.ProtoReflect.Descriptor instead.
func (*JobEatFramesResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{105}
}

// FindJob
type JobFindJobRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *JobFindJobRequest) Reset() {
	*x = JobFindJobRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobFindJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobFindJobRequest) ProtoMessage() {}

func (x *JobFindJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobFindJobRequest.ProtoReflect.Descriptor instead.
func (*JobFindJobRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{106}
}

func (x *JobFindJobRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type JobFindJobResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Job *Job `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
}

func (x *JobFindJobResponse) Reset() {
	*x = JobFindJobResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobFindJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobFindJobResponse) ProtoMessage() {}

func (x *JobFindJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobFindJobResponse.ProtoReflect.Descriptor instead.
func (*JobFindJobResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{107}
}

func (x *JobFindJobResponse) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

// GetComments
type JobGetCommentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Job *Job `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
}

func (x *JobGetCommentsRequest) Reset() {
	*x = JobGetCommentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobGetCommentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobGetCommentsRequest) ProtoMessage() {}

func (x *JobGetCommentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobGetCommentsRequest.ProtoReflect.Descriptor instead.
func (*JobGetCommentsRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{108}
}

func (x *JobGetCommentsRequest) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

type JobGetCommentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Comments *comment.CommentSeq `protobuf:"bytes,1,opt,name=comments,proto3" json:"comments,omitempty"`
}

func (x *JobGetCommentsResponse) Reset() {
	*x = JobGetCommentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobGetCommentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobGetCommentsResponse) ProtoMessage() {}

func (x *JobGetCommentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobGetCommentsResponse.ProtoReflect.Descriptor instead.
func (*JobGetCommentsResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{109}
}

func (x *JobGetCommentsResponse) GetComments() *comment.CommentSeq {
	if x != nil {
		return x.Comments
	}
	return nil
}

// GetCurrent
type JobGetCurrentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Job *Job `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
}

func (x *JobGetCurrentRequest) Reset() {
	*x = JobGetCurrentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobGetCurrentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobGetCurrentRequest) ProtoMessage() {}

func (x *JobGetCurrentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobGetCurrentRequest.ProtoReflect.Descriptor instead.
func (*JobGetCurrentRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{110}
}

func (x *JobGetCurrentRequest) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

type JobGetCurrentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Job *Job `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
}

func (x *JobGetCurrentResponse) Reset() {
	*x = JobGetCurrentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobGetCurrentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobGetCurrentResponse) ProtoMessage() {}

func (x *JobGetCurrentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobGetCurrentResponse.ProtoReflect.Descriptor instead.
func (*JobGetCurrentResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{111}
}

func (x *JobGetCurrentResponse) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

// GetDepends
type JobGetDependsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Job *Job `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
}

func (x *JobGetDependsRequest) Reset() {
	*x = JobGetDependsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobGetDependsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobGetDependsRequest) ProtoMessage() {}

func (x *JobGetDependsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobGetDependsRequest.ProtoReflect.Descriptor instead.
func (*JobGetDependsRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{112}
}

func (x *JobGetDependsRequest) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

type JobGetDependsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Depends *depend.DependSeq `protobuf:"bytes,1,opt,name=depends,proto3" json:"depends,omitempty"`
}

func (x *JobGetDependsResponse) Reset() {
	*x = JobGetDependsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobGetDependsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobGetDependsResponse) ProtoMessage() {}

func (x *JobGetDependsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobGetDependsResponse.ProtoReflect.Descriptor instead.
func (*JobGetDependsResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{113}
}

func (x *JobGetDependsResponse) GetDepends() *depend.DependSeq {
	if x != nil {
		return x.Depends
	}
	return nil
}

// GetFrames
type JobGetFramesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Job *Job                 `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	Req *FrameSearchCriteria `protobuf:"bytes,2,opt,name=req,proto3" json:"req,omitempty"`
}

func (x *JobGetFramesRequest) Reset() {
	*x = JobGetFramesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobGetFramesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobGetFramesRequest) ProtoMessage() {}

func (x *JobGetFramesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobGetFramesRequest.ProtoReflect.Descriptor instead.
func (*JobGetFramesRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{114}
}

func (x *JobGetFramesRequest) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

func (x *JobGetFramesRequest) GetReq() *FrameSearchCriteria {
	if x != nil {
		return x.Req
	}
	return nil
}

type JobGetFramesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Frames *FrameSeq `protobuf:"bytes,1,opt,name=frames,proto3" json:"frames,omitempty"`
}

func (x *JobGetFramesResponse) Reset() {
	*x = JobGetFramesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobGetFramesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobGetFramesResponse) ProtoMessage() {}

func (x *JobGetFramesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobGetFramesResponse.ProtoReflect.Descriptor instead.
func (*JobGetFramesResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{115}
}

func (x *JobGetFramesResponse) GetFrames() *FrameSeq {
	if x != nil {
		return x.Frames
	}
	return nil
}

// GetJob
type JobGetJobRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *JobGetJobRequest) Reset() {
	*x = JobGetJobRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobGetJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobGetJobRequest) ProtoMessage() {}

func (x *JobGetJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobGetJobRequest.ProtoReflect.Descriptor instead.
func (*JobGetJobRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{116}
}

func (x *JobGetJobRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type JobGetJobResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Job *Job `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
}

func (x *JobGetJobResponse) Reset() {
	*x = JobGetJobResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobGetJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobGetJobResponse) ProtoMessage() {}

func (x *JobGetJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobGetJobResponse.ProtoReflect.Descriptor instead.
func (*JobGetJobResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{117}
}

func (x *JobGetJobResponse) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

// GetJobs
type JobGetJobsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	R *JobSearchCriteria `protobuf:"bytes,1,opt,name=r,proto3" json:"r,omitempty"`
}

func (x *JobGetJobsRequest) Reset() {
	*x = JobGetJobsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobGetJobsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobGetJobsRequest) ProtoMessage() {}

func (x *JobGetJobsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobGetJobsRequest.ProtoReflect.Descriptor instead.
func (*JobGetJobsRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{118}
}

func (x *JobGetJobsRequest) GetR() *JobSearchCriteria {
	if x != nil {
		return x.R
	}
	return nil
}

type JobGetJobsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Jobs *JobSeq `protobuf:"bytes,1,opt,name=jobs,proto3" json:"jobs,omitempty"`
}

func (x *JobGetJobsResponse) Reset() {
	*x = JobGetJobsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobGetJobsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobGetJobsResponse) ProtoMessage() {}

func (x *JobGetJobsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobGetJobsResponse.ProtoReflect.Descriptor instead.
func (*JobGetJobsResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{119}
}

func (x *JobGetJobsResponse) GetJobs() *JobSeq {
	if x != nil {
		return x.Jobs
	}
	return nil
}

// GetJobNames
type JobGetJobNamesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	R *JobSearchCriteria `protobuf:"bytes,1,opt,name=r,proto3" json:"r,omitempty"`
}

func (x *JobGetJobNamesRequest) Reset() {
	*x = JobGetJobNamesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobGetJobNamesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobGetJobNamesRequest) ProtoMessage() {}

func (x *JobGetJobNamesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobGetJobNamesRequest.ProtoReflect.Descriptor instead.
func (*JobGetJobNamesRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{120}
}

func (x *JobGetJobNamesRequest) GetR() *JobSearchCriteria {
	if x != nil {
		return x.R
	}
	return nil
}

type JobGetJobNamesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Names []string `protobuf:"bytes,1,rep,name=names,proto3" json:"names,omitempty"`
}

func (x *JobGetJobNamesResponse) Reset() {
	*x = JobGetJobNamesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobGetJobNamesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobGetJobNamesResponse) ProtoMessage() {}

func (x *JobGetJobNamesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobGetJobNamesResponse.ProtoReflect.Descriptor instead.
func (*JobGetJobNamesResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{121}
}

func (x *JobGetJobNamesResponse) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

// GetLayers
type JobGetLayersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Job *Job `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
}

func (x *JobGetLayersRequest) Reset() {
	*x = JobGetLayersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobGetLayersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobGetLayersRequest) ProtoMessage() {}

func (x *JobGetLayersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobGetLayersRequest.ProtoReflect.Descriptor instead.
func (*JobGetLayersRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{122}
}

func (x *JobGetLayersRequest) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

type JobGetLayersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Layers *LayerSeq `protobuf:"bytes,1,opt,name=layers,proto3" json:"layers,omitempty"`
}

func (x *JobGetLayersResponse) Reset() {
	*x = JobGetLayersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobGetLayersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobGetLayersResponse) ProtoMessage() {}

func (x *JobGetLayersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobGetLayersResponse.ProtoReflect.Descriptor instead.
func (*JobGetLayersResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{123}
}

func (x *JobGetLayersResponse) GetLayers() *LayerSeq {
	if x != nil {
		return x.Layers
	}
	return nil
}

// GetUpdatedFrames
type JobGetUpdatedFramesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Job         *Job      `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	LastCheck   int32     `protobuf:"varint,2,opt,name=last_check,json=lastCheck,proto3" json:"last_check,omitempty"`
	LayerFilter *LayerSeq `protobuf:"bytes,3,opt,name=layer_filter,json=layerFilter,proto3" json:"layer_filter,omitempty"`
}

func (x *JobGetUpdatedFramesRequest) Reset() {
	*x = JobGetUpdatedFramesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobGetUpdatedFramesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobGetUpdatedFramesRequest) ProtoMessage() {}

func (x *JobGetUpdatedFramesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobGetUpdatedFramesRequest.ProtoReflect.Descriptor instead.
func (*JobGetUpdatedFramesRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{124}
}

func (x *JobGetUpdatedFramesRequest) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

func (x *JobGetUpdatedFramesRequest) GetLastCheck() int32 {
	if x != nil {
		return x.LastCheck
	}
	return 0
}

func (x *JobGetUpdatedFramesRequest) GetLayerFilter() *LayerSeq {
	if x != nil {
		return x.LayerFilter
	}
	return nil
}

type JobGetUpdatedFramesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State         JobState         `protobuf:"varint,1,opt,name=state,proto3,enum=job.JobState" json:"state,omitempty"`
	ServerTime    int32            `protobuf:"varint,2,opt,name=server_time,json=serverTime,proto3" json:"server_time,omitempty"`
	UpdatedFrames *UpdatedFrameSeq `protobuf:"bytes,3,opt,name=updated_frames,json=updatedFrames,proto3" json:"updated_frames,omitempty"`
}

func (x *JobGetUpdatedFramesResponse) Reset() {
	*x = JobGetUpdatedFramesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobGetUpdatedFramesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobGetUpdatedFramesResponse) ProtoMessage() {}

func (x *JobGetUpdatedFramesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobGetUpdatedFramesResponse.ProtoReflect.Descriptor instead.
func (*JobGetUpdatedFramesResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{125}
}

func (x *JobGetUpdatedFramesResponse) GetState() JobState {
	if x != nil {
		return x.State
	}
	return JobState_PENDING
}

func (x *JobGetUpdatedFramesResponse) GetServerTime() int32 {
	if x != nil {
		return x.ServerTime
	}
	return 0
}

func (x *JobGetUpdatedFramesResponse) GetUpdatedFrames() *UpdatedFrameSeq {
	if x != nil {
		return x.UpdatedFrames
	}
	return nil
}

// GetWhatDependsOnThis
type JobGetWhatDependsOnThisRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Job *Job `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
}

func (x *JobGetWhatDependsOnThisRequest) Reset() {
	*x = JobGetWhatDependsOnThisRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobGetWhatDependsOnThisRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobGetWhatDependsOnThisRequest) ProtoMessage() {}

func (x *JobGetWhatDependsOnThisRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobGetWhatDependsOnThisRequest.ProtoReflect.Descriptor instead.
func (*JobGetWhatDependsOnThisRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{126}
}

func (x *JobGetWhatDependsOnThisRequest) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

type JobGetWhatDependsOnThisResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Depends *depend.DependSeq `protobuf:"bytes,1,opt,name=depends,proto3" json:"depends,omitempty"`
}

func (x *JobGetWhatDependsOnThisResponse) Reset() {
	*x = JobGetWhatDependsOnThisResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobGetWhatDependsOnThisResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobGetWhatDependsOnThisResponse) ProtoMessage() {}

func (x *JobGetWhatDependsOnThisResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[127]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobGetWhatDependsOnThisResponse.ProtoReflect.Descriptor instead.
func (*JobGetWhatDependsOnThisResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{127}
}

func (x *JobGetWhatDependsOnThisResponse) GetDepends() *depend.DependSeq {
	if x != nil {
		return x.Depends
	}
	return nil
}

// GetWhatThisDependsOn
type JobGetWhatThisDependsOnRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Job *Job `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
}

func (x *JobGetWhatThisDependsOnRequest) Reset() {
	*x = JobGetWhatThisDependsOnRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[128]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobGetWhatThisDependsOnRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobGetWhatThisDependsOnRequest) ProtoMessage() {}

func (x *JobGetWhatThisDependsOnRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[128]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobGetWhatThisDependsOnRequest.ProtoReflect.Descriptor instead.
func (*JobGetWhatThisDependsOnRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{128}
}

func (x *JobGetWhatThisDependsOnRequest) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

type JobGetWhatThisDependsOnResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Depends *depend.DependSeq `protobuf:"bytes,1,opt,name=depends,proto3" json:"depends,omitempty"`
}

func (x *JobGetWhatThisDependsOnResponse) Reset() {
	*x = JobGetWhatThisDependsOnResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[129]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobGetWhatThisDependsOnResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobGetWhatThisDependsOnResponse) ProtoMessage() {}

func (x *JobGetWhatThisDependsOnResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[129]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobGetWhatThisDependsOnResponse.ProtoReflect.Descriptor instead.
func (*JobGetWhatThisDependsOnResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{129}
}

func (x *JobGetWhatThisDependsOnResponse) GetDepends() *depend.DependSeq {
	if x != nil {
		return x.Depends
	}
	return nil
}

// IsJobPending
type JobIsJobPendingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *JobIsJobPendingRequest) Reset() {
	*x = JobIsJobPendingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[130]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobIsJobPendingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobIsJobPendingRequest) ProtoMessage() {}

func (x *JobIsJobPendingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[130]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobIsJobPendingRequest.ProtoReflect.Descriptor instead.
func (*JobIsJobPendingRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{130}
}

func (x *JobIsJobPendingRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type JobIsJobPendingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value bool `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *JobIsJobPendingResponse) Reset() {
	*x = JobIsJobPendingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[131]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobIsJobPendingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobIsJobPendingResponse) ProtoMessage() {}

func (x *JobIsJobPendingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[131]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobIsJobPendingResponse.ProtoReflect.Descriptor instead.
func (*JobIsJobPendingResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{131}
}

func (x *JobIsJobPendingResponse) GetValue() bool {
	if x != nil {
		return x.Value
	}
	return false
}

// Kill
type JobKillRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Job *Job `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
}

func (x *JobKillRequest) Reset() {
	*x = JobKillRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[132]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobKillRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobKillRequest) ProtoMessage() {}

func (x *JobKillRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[132]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobKillRequest.ProtoReflect.Descriptor instead.
func (*JobKillRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{132}
}

func (x *JobKillRequest) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

type JobKillResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *JobKillResponse) Reset() {
	*x = JobKillResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[133]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobKillResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobKillResponse) ProtoMessage() {}

func (x *JobKillResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[133]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobKillResponse.ProtoReflect.Descriptor instead.
func (*JobKillResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{133}
}

// KillFrames
type JobKillFramesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Job *Job                 `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	Req *FrameSearchCriteria `protobuf:"bytes,2,opt,name=req,proto3" json:"req,omitempty"`
}

func (x *JobKillFramesRequest) Reset() {
	*x = JobKillFramesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[134]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobKillFramesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobKillFramesRequest) ProtoMessage() {}

func (x *JobKillFramesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[134]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobKillFramesRequest.ProtoReflect.Descriptor instead.
func (*JobKillFramesRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{134}
}

func (x *JobKillFramesRequest) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

func (x *JobKillFramesRequest) GetReq() *FrameSearchCriteria {
	if x != nil {
		return x.Req
	}
	return nil
}

type JobKillFramesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *JobKillFramesResponse) Reset() {
	*x = JobKillFramesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[135]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobKillFramesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobKillFramesResponse) ProtoMessage() {}

func (x *JobKillFramesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[135]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobKillFramesResponse.ProtoReflect.Descriptor instead.
func (*JobKillFramesResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{135}
}

// LaunchSpec
type JobLaunchSpecRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Spec string `protobuf:"bytes,1,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *JobLaunchSpecRequest) Reset() {
	*x = JobLaunchSpecRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[136]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobLaunchSpecRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobLaunchSpecRequest) ProtoMessage() {}

func (x *JobLaunchSpecRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[136]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobLaunchSpecRequest.ProtoReflect.Descriptor instead.
func (*JobLaunchSpecRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{136}
}

func (x *JobLaunchSpecRequest) GetSpec() string {
	if x != nil {
		return x.Spec
	}
	return ""
}

type JobLaunchSpecResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Names []string `protobuf:"bytes,1,rep,name=names,proto3" json:"names,omitempty"`
}

func (x *JobLaunchSpecResponse) Reset() {
	*x = JobLaunchSpecResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[137]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobLaunchSpecResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobLaunchSpecResponse) ProtoMessage() {}

func (x *JobLaunchSpecResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[137]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobLaunchSpecResponse.ProtoReflect.Descriptor instead.
func (*JobLaunchSpecResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{137}
}

func (x *JobLaunchSpecResponse) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

// LaunchSpecAndWait
type JobLaunchSpecAndWaitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Spec string `protobuf:"bytes,1,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *JobLaunchSpecAndWaitRequest) Reset() {
	*x = JobLaunchSpecAndWaitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[138]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobLaunchSpecAndWaitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobLaunchSpecAndWaitRequest) ProtoMessage() {}

func (x *JobLaunchSpecAndWaitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[138]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobLaunchSpecAndWaitRequest.ProtoReflect.Descriptor instead.
func (*JobLaunchSpecAndWaitRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{138}
}

func (x *JobLaunchSpecAndWaitRequest) GetSpec() string {
	if x != nil {
		return x.Spec
	}
	return ""
}

type JobLaunchSpecAndWaitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Jobs *JobSeq `protobuf:"bytes,1,opt,name=jobs,proto3" json:"jobs,omitempty"`
}

func (x *JobLaunchSpecAndWaitResponse) Reset() {
	*x = JobLaunchSpecAndWaitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[139]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobLaunchSpecAndWaitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobLaunchSpecAndWaitResponse) ProtoMessage() {}

func (x *JobLaunchSpecAndWaitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[139]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobLaunchSpecAndWaitResponse.ProtoReflect.Descriptor instead.
func (*JobLaunchSpecAndWaitResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{139}
}

func (x *JobLaunchSpecAndWaitResponse) GetJobs() *JobSeq {
	if x != nil {
		return x.Jobs
	}
	return nil
}

// MarkAsWaiting
type JobMarkAsWaitingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Job *Job                 `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	Req *FrameSearchCriteria `protobuf:"bytes,2,opt,name=req,proto3" json:"req,omitempty"`
}

func (x *JobMarkAsWaitingRequest) Reset() {
	*x = JobMarkAsWaitingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[140]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobMarkAsWaitingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobMarkAsWaitingRequest) ProtoMessage() {}

func (x *JobMarkAsWaitingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[140]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobMarkAsWaitingRequest.ProtoReflect.Descriptor instead.
func (*JobMarkAsWaitingRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{140}
}

func (x *JobMarkAsWaitingRequest) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

func (x *JobMarkAsWaitingRequest) GetReq() *FrameSearchCriteria {
	if x != nil {
		return x.Req
	}
	return nil
}

type JobMarkAsWaitingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *JobMarkAsWaitingResponse) Reset() {
	*x = JobMarkAsWaitingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[141]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobMarkAsWaitingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobMarkAsWaitingResponse) ProtoMessage() {}

func (x *JobMarkAsWaitingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[141]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobMarkAsWaitingResponse.ProtoReflect.Descriptor instead.
func (*JobMarkAsWaitingResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{141}
}

// MarkDoneFrames
type JobMarkDoneFramesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Job *Job                 `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	Req *FrameSearchCriteria `protobuf:"bytes,2,opt,name=req,proto3" json:"req,omitempty"`
}

func (x *JobMarkDoneFramesRequest) Reset() {
	*x = JobMarkDoneFramesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[142]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobMarkDoneFramesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobMarkDoneFramesRequest) ProtoMessage() {}

func (x *JobMarkDoneFramesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[142]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobMarkDoneFramesRequest.ProtoReflect.Descriptor instead.
func (*JobMarkDoneFramesRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{142}
}

func (x *JobMarkDoneFramesRequest) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

func (x *JobMarkDoneFramesRequest) GetReq() *FrameSearchCriteria {
	if x != nil {
		return x.Req
	}
	return nil
}

type JobMarkDoneFramesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *JobMarkDoneFramesResponse) Reset() {
	*x = JobMarkDoneFramesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[143]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobMarkDoneFramesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobMarkDoneFramesResponse) ProtoMessage() {}

func (x *JobMarkDoneFramesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[143]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobMarkDoneFramesResponse.ProtoReflect.Descriptor instead.
func (*JobMarkDoneFramesResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{143}
}

// Pause
type JobPauseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Job *Job `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
}

func (x *JobPauseRequest) Reset() {
	*x = JobPauseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[144]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobPauseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobPauseRequest) ProtoMessage() {}

func (x *JobPauseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[144]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobPauseRequest.ProtoReflect.Descriptor instead.
func (*JobPauseRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{144}
}

func (x *JobPauseRequest) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

type JobPauseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *JobPauseResponse) Reset() {
	*x = JobPauseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[145]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobPauseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobPauseResponse) ProtoMessage() {}

func (x *JobPauseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[145]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobPauseResponse.ProtoReflect.Descriptor instead.
func (*JobPauseResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{145}
}

// ReorderFrames
type JobReorderFramesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Job   *Job   `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	Range string `protobuf:"bytes,2,opt,name=range,proto3" json:"range,omitempty"`
	Order Order  `protobuf:"varint,3,opt,name=order,proto3,enum=job.Order" json:"order,omitempty"`
}

func (x *JobReorderFramesRequest) Reset() {
	*x = JobReorderFramesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[146]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobReorderFramesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobReorderFramesRequest) ProtoMessage() {}

func (x *JobReorderFramesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[146]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobReorderFramesRequest.ProtoReflect.Descriptor instead.
func (*JobReorderFramesRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{146}
}

func (x *JobReorderFramesRequest) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

func (x *JobReorderFramesRequest) GetRange() string {
	if x != nil {
		return x.Range
	}
	return ""
}

func (x *JobReorderFramesRequest) GetOrder() Order {
	if x != nil {
		return x.Order
	}
	return Order_FIRST
}

type JobReorderFramesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *JobReorderFramesResponse) Reset() {
	*x = JobReorderFramesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[147]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobReorderFramesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobReorderFramesResponse) ProtoMessage() {}

func (x *JobReorderFramesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[147]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobReorderFramesResponse.ProtoReflect.Descriptor instead.
func (*JobReorderFramesResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{147}
}

// Resume
type JobResumeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Job *Job `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
}

func (x *JobResumeRequest) Reset() {
	*x = JobResumeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[148]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobResumeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobResumeRequest) ProtoMessage() {}

func (x *JobResumeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[148]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobResumeRequest.ProtoReflect.Descriptor instead.
func (*JobResumeRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{148}
}

func (x *JobResumeRequest) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

type JobResumeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *JobResumeResponse) Reset() {
	*x = JobResumeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[149]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobResumeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobResumeResponse) ProtoMessage() {}

func (x *JobResumeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[149]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobResumeResponse.ProtoReflect.Descriptor instead.
func (*JobResumeResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{149}
}

// RetryFrames
type JobRetryFramesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Job *Job                 `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	Req *FrameSearchCriteria `protobuf:"bytes,2,opt,name=req,proto3" json:"req,omitempty"`
}

func (x *JobRetryFramesRequest) Reset() {
	*x = JobRetryFramesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[150]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobRetryFramesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobRetryFramesRequest) ProtoMessage() {}

func (x *JobRetryFramesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[150]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobRetryFramesRequest.ProtoReflect.Descriptor instead.
func (*JobRetryFramesRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{150}
}

func (x *JobRetryFramesRequest) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

func (x *JobRetryFramesRequest) GetReq() *FrameSearchCriteria {
	if x != nil {
		return x.Req
	}
	return nil
}

type JobRetryFramesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *JobRetryFramesResponse) Reset() {
	*x = JobRetryFramesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[151]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobRetryFramesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobRetryFramesResponse) ProtoMessage() {}

func (x *JobRetryFramesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[151]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobRetryFramesResponse.ProtoReflect.Descriptor instead.
func (*JobRetryFramesResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{151}
}

// RunFilters
type JobRunFiltersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Job *Job `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
}

func (x *JobRunFiltersRequest) Reset() {
	*x = JobRunFiltersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[152]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobRunFiltersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobRunFiltersRequest) ProtoMessage() {}

func (x *JobRunFiltersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[152]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobRunFiltersRequest.ProtoReflect.Descriptor instead.
func (*JobRunFiltersRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{152}
}

func (x *JobRunFiltersRequest) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

type JobRunFiltersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *JobRunFiltersResponse) Reset() {
	*x = JobRunFiltersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[153]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobRunFiltersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobRunFiltersResponse) ProtoMessage() {}

func (x *JobRunFiltersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[153]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobRunFiltersResponse.ProtoReflect.Descriptor instead.
func (*JobRunFiltersResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{153}
}

// SetAutoEat
type JobSetAutoEatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Job   *Job `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	Value bool `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *JobSetAutoEatRequest) Reset() {
	*x = JobSetAutoEatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[154]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobSetAutoEatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobSetAutoEatRequest) ProtoMessage() {}

func (x *JobSetAutoEatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[154]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobSetAutoEatRequest.ProtoReflect.Descriptor instead.
func (*JobSetAutoEatRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{154}
}

func (x *JobSetAutoEatRequest) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

func (x *JobSetAutoEatRequest) GetValue() bool {
	if x != nil {
		return x.Value
	}
	return false
}

type JobSetAutoEatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *JobSetAutoEatResponse) Reset() {
	*x = JobSetAutoEatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[155]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobSetAutoEatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobSetAutoEatResponse) ProtoMessage() {}

func (x *JobSetAutoEatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[155]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobSetAutoEatResponse.ProtoReflect.Descriptor instead.
func (*JobSetAutoEatResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{155}
}

// SetGroup
type JobSetGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Job     *Job   `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	GroupId string `protobuf:"bytes,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
}

func (x *JobSetGroupRequest) Reset() {
	*x = JobSetGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[156]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobSetGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobSetGroupRequest) ProtoMessage() {}

func (x *JobSetGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[156]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobSetGroupRequest.ProtoReflect.Descriptor instead.
func (*JobSetGroupRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{156}
}

func (x *JobSetGroupRequest) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

func (x *JobSetGroupRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type JobSetGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *JobSetGroupResponse) Reset() {
	*x = JobSetGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[157]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobSetGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobSetGroupResponse) ProtoMessage() {}

func (x *JobSetGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[157]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobSetGroupResponse.ProtoReflect.Descriptor instead.
func (*JobSetGroupResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{157}
}

// SetMaxCores
type JobSetMaxCoresRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Job *Job    `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	Val float32 `protobuf:"fixed32,2,opt,name=val,proto3" json:"val,omitempty"`
}

func (x *JobSetMaxCoresRequest) Reset() {
	*x = JobSetMaxCoresRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[158]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobSetMaxCoresRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobSetMaxCoresRequest) ProtoMessage() {}

func (x *JobSetMaxCoresRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[158]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobSetMaxCoresRequest.ProtoReflect.Descriptor instead.
func (*JobSetMaxCoresRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{158}
}

func (x *JobSetMaxCoresRequest) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

func (x *JobSetMaxCoresRequest) GetVal() float32 {
	if x != nil {
		return x.Val
	}
	return 0
}

type JobSetMaxCoresResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *JobSetMaxCoresResponse) Reset() {
	*x = JobSetMaxCoresResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[159]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobSetMaxCoresResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobSetMaxCoresResponse) ProtoMessage() {}

func (x *JobSetMaxCoresResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[159]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobSetMaxCoresResponse.ProtoReflect.Descriptor instead.
func (*JobSetMaxCoresResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{159}
}

// SetMaxGpus
type JobSetMaxGpusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Job *Job  `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	Val int32 `protobuf:"varint,2,opt,name=val,proto3" json:"val,omitempty"`
}

func (x *JobSetMaxGpusRequest) Reset() {
	*x = JobSetMaxGpusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[160]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobSetMaxGpusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobSetMaxGpusRequest) ProtoMessage() {}

func (x *JobSetMaxGpusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[160]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobSetMaxGpusRequest.ProtoReflect.Descriptor instead.
func (*JobSetMaxGpusRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{160}
}

func (x *JobSetMaxGpusRequest) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

func (x *JobSetMaxGpusRequest) GetVal() int32 {
	if x != nil {
		return x.Val
	}
	return 0
}

type JobSetMaxGpusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *JobSetMaxGpusResponse) Reset() {
	*x = JobSetMaxGpusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[161]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobSetMaxGpusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobSetMaxGpusResponse) ProtoMessage() {}

func (x *JobSetMaxGpusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[161]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobSetMaxGpusResponse.ProtoReflect.Descriptor instead.
func (*JobSetMaxGpusResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{161}
}

// SetMaxRetries
type JobSetMaxRetriesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Job        *Job  `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	MaxRetries int32 `protobuf:"varint,2,opt,name=max_retries,json=maxRetries,proto3" json:"max_retries,omitempty"`
}

func (x *JobSetMaxRetriesRequest) Reset() {
	*x = JobSetMaxRetriesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[162]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobSetMaxRetriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobSetMaxRetriesRequest) ProtoMessage() {}

func (x *JobSetMaxRetriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[162]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobSetMaxRetriesRequest.ProtoReflect.Descriptor instead.
func (*JobSetMaxRetriesRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{162}
}

func (x *JobSetMaxRetriesRequest) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

func (x *JobSetMaxRetriesRequest) GetMaxRetries() int32 {
	if x != nil {
		return x.MaxRetries
	}
	return 0
}

type JobSetMaxRetriesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *JobSetMaxRetriesResponse) Reset() {
	*x = JobSetMaxRetriesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[163]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobSetMaxRetriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobSetMaxRetriesResponse) ProtoMessage() {}

func (x *JobSetMaxRetriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[163]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobSetMaxRetriesResponse.ProtoReflect.Descriptor instead.
func (*JobSetMaxRetriesResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{163}
}

// SetMinCores
type JobSetMinCoresRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Job *Job    `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	Val float32 `protobuf:"fixed32,2,opt,name=val,proto3" json:"val,omitempty"`
}

func (x *JobSetMinCoresRequest) Reset() {
	*x = JobSetMinCoresRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[164]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobSetMinCoresRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobSetMinCoresRequest) ProtoMessage() {}

func (x *JobSetMinCoresRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[164]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobSetMinCoresRequest.ProtoReflect.Descriptor instead.
func (*JobSetMinCoresRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{164}
}

func (x *JobSetMinCoresRequest) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

func (x *JobSetMinCoresRequest) GetVal() float32 {
	if x != nil {
		return x.Val
	}
	return 0
}

type JobSetMinCoresResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *JobSetMinCoresResponse) Reset() {
	*x = JobSetMinCoresResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[165]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobSetMinCoresResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobSetMinCoresResponse) ProtoMessage() {}

func (x *JobSetMinCoresResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[165]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobSetMinCoresResponse.ProtoReflect.Descriptor instead.
func (*JobSetMinCoresResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{165}
}

// SetMinGpus
type JobSetMinGpusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Job *Job  `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	Val int32 `protobuf:"varint,2,opt,name=val,proto3" json:"val,omitempty"`
}

func (x *JobSetMinGpusRequest) Reset() {
	*x = JobSetMinGpusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[166]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobSetMinGpusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobSetMinGpusRequest) ProtoMessage() {}

func (x *JobSetMinGpusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[166]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobSetMinGpusRequest.ProtoReflect.Descriptor instead.
func (*JobSetMinGpusRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{166}
}

func (x *JobSetMinGpusRequest) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

func (x *JobSetMinGpusRequest) GetVal() int32 {
	if x != nil {
		return x.Val
	}
	return 0
}

type JobSetMinGpusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *JobSetMinGpusResponse) Reset() {
	*x = JobSetMinGpusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[167]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobSetMinGpusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobSetMinGpusResponse) ProtoMessage() {}

func (x *JobSetMinGpusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[167]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobSetMinGpusResponse.ProtoReflect.Descriptor instead.
func (*JobSetMinGpusResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{167}
}

// SetPriority
type JobSetPriorityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Job *Job  `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	Val int32 `protobuf:"varint,2,opt,name=val,proto3" json:"val,omitempty"`
}

func (x *JobSetPriorityRequest) Reset() {
	*x = JobSetPriorityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[168]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobSetPriorityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobSetPriorityRequest) ProtoMessage() {}

func (x *JobSetPriorityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[168]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobSetPriorityRequest.ProtoReflect.Descriptor instead.
func (*JobSetPriorityRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{168}
}

func (x *JobSetPriorityRequest) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

func (x *JobSetPriorityRequest) GetVal() int32 {
	if x != nil {
		return x.Val
	}
	return 0
}

type JobSetPriorityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *JobSetPriorityResponse) Reset() {
	*x = JobSetPriorityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[169]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobSetPriorityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobSetPriorityResponse) ProtoMessage() {}

func (x *JobSetPriorityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[169]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobSetPriorityResponse.ProtoReflect.Descriptor instead.
func (*JobSetPriorityResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{169}
}

// ShutdownIfCompleted
type JobShutdownIfCompletedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Job *Job `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
}

func (x *JobShutdownIfCompletedRequest) Reset() {
	*x = JobShutdownIfCompletedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[170]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobShutdownIfCompletedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobShutdownIfCompletedRequest) ProtoMessage() {}

func (x *JobShutdownIfCompletedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[170]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobShutdownIfCompletedRequest.ProtoReflect.Descriptor instead.
func (*JobShutdownIfCompletedRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{170}
}

func (x *JobShutdownIfCompletedRequest) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

type JobShutdownIfCompletedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *JobShutdownIfCompletedResponse) Reset() {
	*x = JobShutdownIfCompletedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[171]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobShutdownIfCompletedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobShutdownIfCompletedResponse) ProtoMessage() {}

func (x *JobShutdownIfCompletedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[171]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobShutdownIfCompletedResponse.ProtoReflect.Descriptor instead.
func (*JobShutdownIfCompletedResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{171}
}

// StaggerFrames
type JobStaggerFramesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Job     *Job   `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	Range   string `protobuf:"bytes,2,opt,name=range,proto3" json:"range,omitempty"`
	Stagger int32  `protobuf:"varint,3,opt,name=stagger,proto3" json:"stagger,omitempty"`
}

func (x *JobStaggerFramesRequest) Reset() {
	*x = JobStaggerFramesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[172]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobStaggerFramesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobStaggerFramesRequest) ProtoMessage() {}

func (x *JobStaggerFramesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[172]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobStaggerFramesRequest.ProtoReflect.Descriptor instead.
func (*JobStaggerFramesRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{172}
}

func (x *JobStaggerFramesRequest) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

func (x *JobStaggerFramesRequest) GetRange() string {
	if x != nil {
		return x.Range
	}
	return ""
}

func (x *JobStaggerFramesRequest) GetStagger() int32 {
	if x != nil {
		return x.Stagger
	}
	return 0
}

type JobStaggerFramesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *JobStaggerFramesResponse) Reset() {
	*x = JobStaggerFramesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[173]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobStaggerFramesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobStaggerFramesResponse) ProtoMessage() {}

func (x *JobStaggerFramesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[173]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobStaggerFramesResponse.ProtoReflect.Descriptor instead.
func (*JobStaggerFramesResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{173}
}

// LAYER ----
// AddLimit
type LayerAddLimitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Layer   *Layer `protobuf:"bytes,1,opt,name=layer,proto3" json:"layer,omitempty"`
	LimitId string `protobuf:"bytes,2,opt,name=limit_id,json=limitId,proto3" json:"limit_id,omitempty"`
}

func (x *LayerAddLimitRequest) Reset() {
	*x = LayerAddLimitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[174]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayerAddLimitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayerAddLimitRequest) ProtoMessage() {}

func (x *LayerAddLimitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[174]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayerAddLimitRequest.ProtoReflect.Descriptor instead.
func (*LayerAddLimitRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{174}
}

func (x *LayerAddLimitRequest) GetLayer() *Layer {
	if x != nil {
		return x.Layer
	}
	return nil
}

func (x *LayerAddLimitRequest) GetLimitId() string {
	if x != nil {
		return x.LimitId
	}
	return ""
}

type LayerAddLimitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LayerAddLimitResponse) Reset() {
	*x = LayerAddLimitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[175]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayerAddLimitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayerAddLimitResponse) ProtoMessage() {}

func (x *LayerAddLimitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[175]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayerAddLimitResponse.ProtoReflect.Descriptor instead.
func (*LayerAddLimitResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{175}
}

// AddRenderPartion
type LayerAddRenderPartitionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Layer        *Layer `protobuf:"bytes,1,opt,name=layer,proto3" json:"layer,omitempty"`
	Host         string `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	Threads      int32  `protobuf:"varint,3,opt,name=threads,proto3" json:"threads,omitempty"`
	MaxCores     int32  `protobuf:"varint,4,opt,name=max_cores,json=maxCores,proto3" json:"max_cores,omitempty"`
	MaxMemory    int64  `protobuf:"varint,5,opt,name=max_memory,json=maxMemory,proto3" json:"max_memory,omitempty"`
	MaxGpuMemory int64  `protobuf:"varint,6,opt,name=max_gpu_memory,json=maxGpuMemory,proto3" json:"max_gpu_memory,omitempty"`
	Username     string `protobuf:"bytes,7,opt,name=username,proto3" json:"username,omitempty"`
	MaxGpus      int32  `protobuf:"varint,8,opt,name=max_gpus,json=maxGpus,proto3" json:"max_gpus,omitempty"`
}

func (x *LayerAddRenderPartitionRequest) Reset() {
	*x = LayerAddRenderPartitionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[176]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayerAddRenderPartitionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayerAddRenderPartitionRequest) ProtoMessage() {}

func (x *LayerAddRenderPartitionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[176]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayerAddRenderPartitionRequest.ProtoReflect.Descriptor instead.
func (*LayerAddRenderPartitionRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{176}
}

func (x *LayerAddRenderPartitionRequest) GetLayer() *Layer {
	if x != nil {
		return x.Layer
	}
	return nil
}

func (x *LayerAddRenderPartitionRequest) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *LayerAddRenderPartitionRequest) GetThreads() int32 {
	if x != nil {
		return x.Threads
	}
	return 0
}

func (x *LayerAddRenderPartitionRequest) GetMaxCores() int32 {
	if x != nil {
		return x.MaxCores
	}
	return 0
}

func (x *LayerAddRenderPartitionRequest) GetMaxMemory() int64 {
	if x != nil {
		return x.MaxMemory
	}
	return 0
}

func (x *LayerAddRenderPartitionRequest) GetMaxGpuMemory() int64 {
	if x != nil {
		return x.MaxGpuMemory
	}
	return 0
}

func (x *LayerAddRenderPartitionRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *LayerAddRenderPartitionRequest) GetMaxGpus() int32 {
	if x != nil {
		return x.MaxGpus
	}
	return 0
}

type LayerAddRenderPartitionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RenderPartition *renderPartition.RenderPartition `protobuf:"bytes,1,opt,name=render_partition,json=renderPartition,proto3" json:"render_partition,omitempty"`
}

func (x *LayerAddRenderPartitionResponse) Reset() {
	*x = LayerAddRenderPartitionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[177]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayerAddRenderPartitionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayerAddRenderPartitionResponse) ProtoMessage() {}

func (x *LayerAddRenderPartitionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[177]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayerAddRenderPartitionResponse.ProtoReflect.Descriptor instead.
func (*LayerAddRenderPartitionResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{177}
}

func (x *LayerAddRenderPartitionResponse) GetRenderPartition() *renderPartition.RenderPartition {
	if x != nil {
		return x.RenderPartition
	}
	return nil
}

// CreateDependencyOnFrame
type LayerCreateDependOnFrameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Layer *Layer `protobuf:"bytes,1,opt,name=layer,proto3" json:"layer,omitempty"`
	Frame *Frame `protobuf:"bytes,2,opt,name=frame,proto3" json:"frame,omitempty"`
}

func (x *LayerCreateDependOnFrameRequest) Reset() {
	*x = LayerCreateDependOnFrameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[178]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayerCreateDependOnFrameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayerCreateDependOnFrameRequest) ProtoMessage() {}

func (x *LayerCreateDependOnFrameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[178]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayerCreateDependOnFrameRequest.ProtoReflect.Descriptor instead.
func (*LayerCreateDependOnFrameRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{178}
}

func (x *LayerCreateDependOnFrameRequest) GetLayer() *Layer {
	if x != nil {
		return x.Layer
	}
	return nil
}

func (x *LayerCreateDependOnFrameRequest) GetFrame() *Frame {
	if x != nil {
		return x.Frame
	}
	return nil
}

type LayerCreateDependOnFrameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Depend *depend.Depend `protobuf:"bytes,1,opt,name=depend,proto3" json:"depend,omitempty"`
}

func (x *LayerCreateDependOnFrameResponse) Reset() {
	*x = LayerCreateDependOnFrameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[179]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayerCreateDependOnFrameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayerCreateDependOnFrameResponse) ProtoMessage() {}

func (x *LayerCreateDependOnFrameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[179]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayerCreateDependOnFrameResponse.ProtoReflect.Descriptor instead.
func (*LayerCreateDependOnFrameResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{179}
}

func (x *LayerCreateDependOnFrameResponse) GetDepend() *depend.Depend {
	if x != nil {
		return x.Depend
	}
	return nil
}

// CreateDependencyOnJob
type LayerCreateDependOnJobRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Layer *Layer `protobuf:"bytes,1,opt,name=layer,proto3" json:"layer,omitempty"`
	Job   *Job   `protobuf:"bytes,2,opt,name=job,proto3" json:"job,omitempty"`
}

func (x *LayerCreateDependOnJobRequest) Reset() {
	*x = LayerCreateDependOnJobRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[180]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayerCreateDependOnJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayerCreateDependOnJobRequest) ProtoMessage() {}

func (x *LayerCreateDependOnJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[180]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayerCreateDependOnJobRequest.ProtoReflect.Descriptor instead.
func (*LayerCreateDependOnJobRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{180}
}

func (x *LayerCreateDependOnJobRequest) GetLayer() *Layer {
	if x != nil {
		return x.Layer
	}
	return nil
}

func (x *LayerCreateDependOnJobRequest) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

type LayerCreateDependOnJobResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Depend *depend.Depend `protobuf:"bytes,1,opt,name=depend,proto3" json:"depend,omitempty"`
}

func (x *LayerCreateDependOnJobResponse) Reset() {
	*x = LayerCreateDependOnJobResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[181]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayerCreateDependOnJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayerCreateDependOnJobResponse) ProtoMessage() {}

func (x *LayerCreateDependOnJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[181]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayerCreateDependOnJobResponse.ProtoReflect.Descriptor instead.
func (*LayerCreateDependOnJobResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{181}
}

func (x *LayerCreateDependOnJobResponse) GetDepend() *depend.Depend {
	if x != nil {
		return x.Depend
	}
	return nil
}

// CreateDependencyOnLayer
type LayerCreateDependOnLayerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Layer         *Layer `protobuf:"bytes,1,opt,name=layer,proto3" json:"layer,omitempty"`
	DependOnLayer *Layer `protobuf:"bytes,2,opt,name=depend_on_layer,json=dependOnLayer,proto3" json:"depend_on_layer,omitempty"`
}

func (x *LayerCreateDependOnLayerRequest) Reset() {
	*x = LayerCreateDependOnLayerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[182]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayerCreateDependOnLayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayerCreateDependOnLayerRequest) ProtoMessage() {}

func (x *LayerCreateDependOnLayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[182]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayerCreateDependOnLayerRequest.ProtoReflect.Descriptor instead.
func (*LayerCreateDependOnLayerRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{182}
}

func (x *LayerCreateDependOnLayerRequest) GetLayer() *Layer {
	if x != nil {
		return x.Layer
	}
	return nil
}

func (x *LayerCreateDependOnLayerRequest) GetDependOnLayer() *Layer {
	if x != nil {
		return x.DependOnLayer
	}
	return nil
}

type LayerCreateDependOnLayerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Depend *depend.Depend `protobuf:"bytes,1,opt,name=depend,proto3" json:"depend,omitempty"`
}

func (x *LayerCreateDependOnLayerResponse) Reset() {
	*x = LayerCreateDependOnLayerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[183]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayerCreateDependOnLayerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayerCreateDependOnLayerResponse) ProtoMessage() {}

func (x *LayerCreateDependOnLayerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[183]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayerCreateDependOnLayerResponse.ProtoReflect.Descriptor instead.
func (*LayerCreateDependOnLayerResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{183}
}

func (x *LayerCreateDependOnLayerResponse) GetDepend() *depend.Depend {
	if x != nil {
		return x.Depend
	}
	return nil
}

// CreateFrameByFrameDependency
type LayerCreateFrameByFrameDependRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Layer       *Layer `protobuf:"bytes,1,opt,name=layer,proto3" json:"layer,omitempty"`
	DependLayer *Layer `protobuf:"bytes,2,opt,name=depend_layer,json=dependLayer,proto3" json:"depend_layer,omitempty"`
	AnyFrame    bool   `protobuf:"varint,3,opt,name=any_frame,json=anyFrame,proto3" json:"any_frame,omitempty"`
}

func (x *LayerCreateFrameByFrameDependRequest) Reset() {
	*x = LayerCreateFrameByFrameDependRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[184]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayerCreateFrameByFrameDependRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayerCreateFrameByFrameDependRequest) ProtoMessage() {}

func (x *LayerCreateFrameByFrameDependRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[184]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayerCreateFrameByFrameDependRequest.ProtoReflect.Descriptor instead.
func (*LayerCreateFrameByFrameDependRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{184}
}

func (x *LayerCreateFrameByFrameDependRequest) GetLayer() *Layer {
	if x != nil {
		return x.Layer
	}
	return nil
}

func (x *LayerCreateFrameByFrameDependRequest) GetDependLayer() *Layer {
	if x != nil {
		return x.DependLayer
	}
	return nil
}

func (x *LayerCreateFrameByFrameDependRequest) GetAnyFrame() bool {
	if x != nil {
		return x.AnyFrame
	}
	return false
}

type LayerCreateFrameByFrameDependResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Depend *depend.Depend `protobuf:"bytes,1,opt,name=depend,proto3" json:"depend,omitempty"`
}

func (x *LayerCreateFrameByFrameDependResponse) Reset() {
	*x = LayerCreateFrameByFrameDependResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[185]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayerCreateFrameByFrameDependResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayerCreateFrameByFrameDependResponse) ProtoMessage() {}

func (x *LayerCreateFrameByFrameDependResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[185]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayerCreateFrameByFrameDependResponse.ProtoReflect.Descriptor instead.
func (*LayerCreateFrameByFrameDependResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{185}
}

func (x *LayerCreateFrameByFrameDependResponse) GetDepend() *depend.Depend {
	if x != nil {
		return x.Depend
	}
	return nil
}

// DropDepends
type LayerDropDependsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Layer  *Layer              `protobuf:"bytes,1,opt,name=layer,proto3" json:"layer,omitempty"`
	Target depend.DependTarget `protobuf:"varint,2,opt,name=target,proto3,enum=depend.DependTarget" json:"target,omitempty"`
}

func (x *LayerDropDependsRequest) Reset() {
	*x = LayerDropDependsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[186]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayerDropDependsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayerDropDependsRequest) ProtoMessage() {}

func (x *LayerDropDependsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[186]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayerDropDependsRequest.ProtoReflect.Descriptor instead.
func (*LayerDropDependsRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{186}
}

func (x *LayerDropDependsRequest) GetLayer() *Layer {
	if x != nil {
		return x.Layer
	}
	return nil
}

func (x *LayerDropDependsRequest) GetTarget() depend.DependTarget {
	if x != nil {
		return x.Target
	}
	return depend.DependTarget(0)
}

type LayerDropDependsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LayerDropDependsResponse) Reset() {
	*x = LayerDropDependsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[187]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayerDropDependsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayerDropDependsResponse) ProtoMessage() {}

func (x *LayerDropDependsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[187]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayerDropDependsResponse.ProtoReflect.Descriptor instead.
func (*LayerDropDependsResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{187}
}

// DropLimit
type LayerDropLimitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Layer   *Layer `protobuf:"bytes,1,opt,name=layer,proto3" json:"layer,omitempty"`
	LimitId string `protobuf:"bytes,2,opt,name=limit_id,json=limitId,proto3" json:"limit_id,omitempty"`
}

func (x *LayerDropLimitRequest) Reset() {
	*x = LayerDropLimitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[188]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayerDropLimitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayerDropLimitRequest) ProtoMessage() {}

func (x *LayerDropLimitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[188]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayerDropLimitRequest.ProtoReflect.Descriptor instead.
func (*LayerDropLimitRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{188}
}

func (x *LayerDropLimitRequest) GetLayer() *Layer {
	if x != nil {
		return x.Layer
	}
	return nil
}

func (x *LayerDropLimitRequest) GetLimitId() string {
	if x != nil {
		return x.LimitId
	}
	return ""
}

type LayerDropLimitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LayerDropLimitResponse) Reset() {
	*x = LayerDropLimitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[189]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayerDropLimitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayerDropLimitResponse) ProtoMessage() {}

func (x *LayerDropLimitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[189]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayerDropLimitResponse.ProtoReflect.Descriptor instead.
func (*LayerDropLimitResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{189}
}

// EatFrames
type LayerEatFramesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Layer *Layer `protobuf:"bytes,1,opt,name=layer,proto3" json:"layer,omitempty"`
}

func (x *LayerEatFramesRequest) Reset() {
	*x = LayerEatFramesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[190]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayerEatFramesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayerEatFramesRequest) ProtoMessage() {}

func (x *LayerEatFramesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[190]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayerEatFramesRequest.ProtoReflect.Descriptor instead.
func (*LayerEatFramesRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{190}
}

func (x *LayerEatFramesRequest) GetLayer() *Layer {
	if x != nil {
		return x.Layer
	}
	return nil
}

type LayerEatFramesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LayerEatFramesResponse) Reset() {
	*x = LayerEatFramesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[191]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayerEatFramesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayerEatFramesResponse) ProtoMessage() {}

func (x *LayerEatFramesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[191]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayerEatFramesResponse.ProtoReflect.Descriptor instead.
func (*LayerEatFramesResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{191}
}

// EnableMemoryOptimizer
type LayerEnableMemoryOptimizerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Layer *Layer `protobuf:"bytes,1,opt,name=layer,proto3" json:"layer,omitempty"`
	Value bool   `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *LayerEnableMemoryOptimizerRequest) Reset() {
	*x = LayerEnableMemoryOptimizerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[192]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayerEnableMemoryOptimizerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayerEnableMemoryOptimizerRequest) ProtoMessage() {}

func (x *LayerEnableMemoryOptimizerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[192]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayerEnableMemoryOptimizerRequest.ProtoReflect.Descriptor instead.
func (*LayerEnableMemoryOptimizerRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{192}
}

func (x *LayerEnableMemoryOptimizerRequest) GetLayer() *Layer {
	if x != nil {
		return x.Layer
	}
	return nil
}

func (x *LayerEnableMemoryOptimizerRequest) GetValue() bool {
	if x != nil {
		return x.Value
	}
	return false
}

type LayerEnableMemoryOptimizerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LayerEnableMemoryOptimizerResponse) Reset() {
	*x = LayerEnableMemoryOptimizerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[193]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayerEnableMemoryOptimizerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayerEnableMemoryOptimizerResponse) ProtoMessage() {}

func (x *LayerEnableMemoryOptimizerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[193]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayerEnableMemoryOptimizerResponse.ProtoReflect.Descriptor instead.
func (*LayerEnableMemoryOptimizerResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{193}
}

// FindLayer
type LayerFindLayerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Job   string `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	Layer string `protobuf:"bytes,2,opt,name=layer,proto3" json:"layer,omitempty"`
}

func (x *LayerFindLayerRequest) Reset() {
	*x = LayerFindLayerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[194]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayerFindLayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayerFindLayerRequest) ProtoMessage() {}

func (x *LayerFindLayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[194]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayerFindLayerRequest.ProtoReflect.Descriptor instead.
func (*LayerFindLayerRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{194}
}

func (x *LayerFindLayerRequest) GetJob() string {
	if x != nil {
		return x.Job
	}
	return ""
}

func (x *LayerFindLayerRequest) GetLayer() string {
	if x != nil {
		return x.Layer
	}
	return ""
}

type LayerFindLayerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Layer *Layer `protobuf:"bytes,1,opt,name=layer,proto3" json:"layer,omitempty"`
}

func (x *LayerFindLayerResponse) Reset() {
	*x = LayerFindLayerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[195]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayerFindLayerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayerFindLayerResponse) ProtoMessage() {}

func (x *LayerFindLayerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[195]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayerFindLayerResponse.ProtoReflect.Descriptor instead.
func (*LayerFindLayerResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{195}
}

func (x *LayerFindLayerResponse) GetLayer() *Layer {
	if x != nil {
		return x.Layer
	}
	return nil
}

// GetFrames
type LayerGetFramesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Layer *Layer               `protobuf:"bytes,1,opt,name=layer,proto3" json:"layer,omitempty"`
	S     *FrameSearchCriteria `protobuf:"bytes,2,opt,name=s,proto3" json:"s,omitempty"`
}

func (x *LayerGetFramesRequest) Reset() {
	*x = LayerGetFramesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[196]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayerGetFramesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayerGetFramesRequest) ProtoMessage() {}

func (x *LayerGetFramesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[196]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayerGetFramesRequest.ProtoReflect.Descriptor instead.
func (*LayerGetFramesRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{196}
}

func (x *LayerGetFramesRequest) GetLayer() *Layer {
	if x != nil {
		return x.Layer
	}
	return nil
}

func (x *LayerGetFramesRequest) GetS() *FrameSearchCriteria {
	if x != nil {
		return x.S
	}
	return nil
}

type LayerGetFramesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Frames *FrameSeq `protobuf:"bytes,1,opt,name=frames,proto3" json:"frames,omitempty"`
}

func (x *LayerGetFramesResponse) Reset() {
	*x = LayerGetFramesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[197]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayerGetFramesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayerGetFramesResponse) ProtoMessage() {}

func (x *LayerGetFramesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[197]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayerGetFramesResponse.ProtoReflect.Descriptor instead.
func (*LayerGetFramesResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{197}
}

func (x *LayerGetFramesResponse) GetFrames() *FrameSeq {
	if x != nil {
		return x.Frames
	}
	return nil
}

// GetLayer
type LayerGetLayerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *LayerGetLayerRequest) Reset() {
	*x = LayerGetLayerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[198]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayerGetLayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayerGetLayerRequest) ProtoMessage() {}

func (x *LayerGetLayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[198]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayerGetLayerRequest.ProtoReflect.Descriptor instead.
func (*LayerGetLayerRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{198}
}

func (x *LayerGetLayerRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type LayerGetLayerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Layer *Layer `protobuf:"bytes,1,opt,name=layer,proto3" json:"layer,omitempty"`
}

func (x *LayerGetLayerResponse) Reset() {
	*x = LayerGetLayerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[199]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayerGetLayerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayerGetLayerResponse) ProtoMessage() {}

func (x *LayerGetLayerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[199]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayerGetLayerResponse.ProtoReflect.Descriptor instead.
func (*LayerGetLayerResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{199}
}

func (x *LayerGetLayerResponse) GetLayer() *Layer {
	if x != nil {
		return x.Layer
	}
	return nil
}

// GetLayer
type LayerGetLimitsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Layer *Layer `protobuf:"bytes,1,opt,name=layer,proto3" json:"layer,omitempty"`
}

func (x *LayerGetLimitsRequest) Reset() {
	*x = LayerGetLimitsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[200]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayerGetLimitsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayerGetLimitsRequest) ProtoMessage() {}

func (x *LayerGetLimitsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[200]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayerGetLimitsRequest.ProtoReflect.Descriptor instead.
func (*LayerGetLimitsRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{200}
}

func (x *LayerGetLimitsRequest) GetLayer() *Layer {
	if x != nil {
		return x.Layer
	}
	return nil
}

type LayerGetLimitsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limits []*limit.Limit `protobuf:"bytes,1,rep,name=limits,proto3" json:"limits,omitempty"`
}

func (x *LayerGetLimitsResponse) Reset() {
	*x = LayerGetLimitsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[201]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayerGetLimitsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayerGetLimitsResponse) ProtoMessage() {}

func (x *LayerGetLimitsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[201]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayerGetLimitsResponse.ProtoReflect.Descriptor instead.
func (*LayerGetLimitsResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{201}
}

func (x *LayerGetLimitsResponse) GetLimits() []*limit.Limit {
	if x != nil {
		return x.Limits
	}
	return nil
}

// GetOutputPaths
type LayerGetOutputPathsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Layer *Layer `protobuf:"bytes,1,opt,name=layer,proto3" json:"layer,omitempty"`
}

func (x *LayerGetOutputPathsRequest) Reset() {
	*x = LayerGetOutputPathsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[202]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayerGetOutputPathsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayerGetOutputPathsRequest) ProtoMessage() {}

func (x *LayerGetOutputPathsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[202]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayerGetOutputPathsRequest.ProtoReflect.Descriptor instead.
func (*LayerGetOutputPathsRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{202}
}

func (x *LayerGetOutputPathsRequest) GetLayer() *Layer {
	if x != nil {
		return x.Layer
	}
	return nil
}

type LayerGetOutputPathsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OutputPaths []string `protobuf:"bytes,1,rep,name=output_paths,json=outputPaths,proto3" json:"output_paths,omitempty"`
}

func (x *LayerGetOutputPathsResponse) Reset() {
	*x = LayerGetOutputPathsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[203]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayerGetOutputPathsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayerGetOutputPathsResponse) ProtoMessage() {}

func (x *LayerGetOutputPathsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[203]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayerGetOutputPathsResponse.ProtoReflect.Descriptor instead.
func (*LayerGetOutputPathsResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{203}
}

func (x *LayerGetOutputPathsResponse) GetOutputPaths() []string {
	if x != nil {
		return x.OutputPaths
	}
	return nil
}

// GetWhatDependsOnThis
type LayerGetWhatDependsOnThisRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Layer *Layer `protobuf:"bytes,1,opt,name=layer,proto3" json:"layer,omitempty"`
}

func (x *LayerGetWhatDependsOnThisRequest) Reset() {
	*x = LayerGetWhatDependsOnThisRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[204]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayerGetWhatDependsOnThisRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayerGetWhatDependsOnThisRequest) ProtoMessage() {}

func (x *LayerGetWhatDependsOnThisRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[204]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayerGetWhatDependsOnThisRequest.ProtoReflect.Descriptor instead.
func (*LayerGetWhatDependsOnThisRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{204}
}

func (x *LayerGetWhatDependsOnThisRequest) GetLayer() *Layer {
	if x != nil {
		return x.Layer
	}
	return nil
}

type LayerGetWhatDependsOnThisResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Depends *depend.DependSeq `protobuf:"bytes,1,opt,name=depends,proto3" json:"depends,omitempty"`
}

func (x *LayerGetWhatDependsOnThisResponse) Reset() {
	*x = LayerGetWhatDependsOnThisResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[205]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayerGetWhatDependsOnThisResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayerGetWhatDependsOnThisResponse) ProtoMessage() {}

func (x *LayerGetWhatDependsOnThisResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[205]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayerGetWhatDependsOnThisResponse.ProtoReflect.Descriptor instead.
func (*LayerGetWhatDependsOnThisResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{205}
}

func (x *LayerGetWhatDependsOnThisResponse) GetDepends() *depend.DependSeq {
	if x != nil {
		return x.Depends
	}
	return nil
}

// GetWhatThisDependsOn
type LayerGetWhatThisDependsOnRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Layer *Layer `protobuf:"bytes,1,opt,name=layer,proto3" json:"layer,omitempty"`
}

func (x *LayerGetWhatThisDependsOnRequest) Reset() {
	*x = LayerGetWhatThisDependsOnRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[206]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayerGetWhatThisDependsOnRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayerGetWhatThisDependsOnRequest) ProtoMessage() {}

func (x *LayerGetWhatThisDependsOnRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[206]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayerGetWhatThisDependsOnRequest.ProtoReflect.Descriptor instead.
func (*LayerGetWhatThisDependsOnRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{206}
}

func (x *LayerGetWhatThisDependsOnRequest) GetLayer() *Layer {
	if x != nil {
		return x.Layer
	}
	return nil
}

type LayerGetWhatThisDependsOnResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Depends *depend.DependSeq `protobuf:"bytes,1,opt,name=depends,proto3" json:"depends,omitempty"`
}

func (x *LayerGetWhatThisDependsOnResponse) Reset() {
	*x = LayerGetWhatThisDependsOnResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[207]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayerGetWhatThisDependsOnResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayerGetWhatThisDependsOnResponse) ProtoMessage() {}

func (x *LayerGetWhatThisDependsOnResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[207]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayerGetWhatThisDependsOnResponse.ProtoReflect.Descriptor instead.
func (*LayerGetWhatThisDependsOnResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{207}
}

func (x *LayerGetWhatThisDependsOnResponse) GetDepends() *depend.DependSeq {
	if x != nil {
		return x.Depends
	}
	return nil
}

// KillFrames
type LayerKillFramesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Layer *Layer `protobuf:"bytes,1,opt,name=layer,proto3" json:"layer,omitempty"`
}

func (x *LayerKillFramesRequest) Reset() {
	*x = LayerKillFramesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[208]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayerKillFramesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayerKillFramesRequest) ProtoMessage() {}

func (x *LayerKillFramesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[208]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayerKillFramesRequest.ProtoReflect.Descriptor instead.
func (*LayerKillFramesRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{208}
}

func (x *LayerKillFramesRequest) GetLayer() *Layer {
	if x != nil {
		return x.Layer
	}
	return nil
}

type LayerKillFramesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LayerKillFramesResponse) Reset() {
	*x = LayerKillFramesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[209]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayerKillFramesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayerKillFramesResponse) ProtoMessage() {}

func (x *LayerKillFramesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[209]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayerKillFramesResponse.ProtoReflect.Descriptor instead.
func (*LayerKillFramesResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{209}
}

// MarkdoneFrames
type LayerMarkdoneFramesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Layer *Layer `protobuf:"bytes,1,opt,name=layer,proto3" json:"layer,omitempty"`
}

func (x *LayerMarkdoneFramesRequest) Reset() {
	*x = LayerMarkdoneFramesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[210]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayerMarkdoneFramesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayerMarkdoneFramesRequest) ProtoMessage() {}

func (x *LayerMarkdoneFramesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[210]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayerMarkdoneFramesRequest.ProtoReflect.Descriptor instead.
func (*LayerMarkdoneFramesRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{210}
}

func (x *LayerMarkdoneFramesRequest) GetLayer() *Layer {
	if x != nil {
		return x.Layer
	}
	return nil
}

type LayerMarkdoneFramesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LayerMarkdoneFramesResponse) Reset() {
	*x = LayerMarkdoneFramesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[211]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayerMarkdoneFramesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayerMarkdoneFramesResponse) ProtoMessage() {}

func (x *LayerMarkdoneFramesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[211]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayerMarkdoneFramesResponse.ProtoReflect.Descriptor instead.
func (*LayerMarkdoneFramesResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{211}
}

// RetryFrames
type LayerRetryFramesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Layer *Layer `protobuf:"bytes,1,opt,name=layer,proto3" json:"layer,omitempty"`
}

func (x *LayerRetryFramesRequest) Reset() {
	*x = LayerRetryFramesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[212]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayerRetryFramesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayerRetryFramesRequest) ProtoMessage() {}

func (x *LayerRetryFramesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[212]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayerRetryFramesRequest.ProtoReflect.Descriptor instead.
func (*LayerRetryFramesRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{212}
}

func (x *LayerRetryFramesRequest) GetLayer() *Layer {
	if x != nil {
		return x.Layer
	}
	return nil
}

type LayerRetryFramesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LayerRetryFramesResponse) Reset() {
	*x = LayerRetryFramesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[213]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayerRetryFramesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayerRetryFramesResponse) ProtoMessage() {}

func (x *LayerRetryFramesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[213]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayerRetryFramesResponse.ProtoReflect.Descriptor instead.
func (*LayerRetryFramesResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{213}
}

// RegisterOutputPath
type LayerRegisterOutputPathRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Layer *Layer `protobuf:"bytes,1,opt,name=layer,proto3" json:"layer,omitempty"`
	Spec  string `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *LayerRegisterOutputPathRequest) Reset() {
	*x = LayerRegisterOutputPathRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[214]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayerRegisterOutputPathRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayerRegisterOutputPathRequest) ProtoMessage() {}

func (x *LayerRegisterOutputPathRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[214]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayerRegisterOutputPathRequest.ProtoReflect.Descriptor instead.
func (*LayerRegisterOutputPathRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{214}
}

func (x *LayerRegisterOutputPathRequest) GetLayer() *Layer {
	if x != nil {
		return x.Layer
	}
	return nil
}

func (x *LayerRegisterOutputPathRequest) GetSpec() string {
	if x != nil {
		return x.Spec
	}
	return ""
}

type LayerRegisterOutputPathResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LayerRegisterOutputPathResponse) Reset() {
	*x = LayerRegisterOutputPathResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[215]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayerRegisterOutputPathResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayerRegisterOutputPathResponse) ProtoMessage() {}

func (x *LayerRegisterOutputPathResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[215]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayerRegisterOutputPathResponse.ProtoReflect.Descriptor instead.
func (*LayerRegisterOutputPathResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{215}
}

// ReorderFrames
type LayerReorderFramesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Layer *Layer `protobuf:"bytes,1,opt,name=layer,proto3" json:"layer,omitempty"`
	Range string `protobuf:"bytes,2,opt,name=range,proto3" json:"range,omitempty"`
	Order Order  `protobuf:"varint,3,opt,name=order,proto3,enum=job.Order" json:"order,omitempty"`
}

func (x *LayerReorderFramesRequest) Reset() {
	*x = LayerReorderFramesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[216]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayerReorderFramesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayerReorderFramesRequest) ProtoMessage() {}

func (x *LayerReorderFramesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[216]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayerReorderFramesRequest.ProtoReflect.Descriptor instead.
func (*LayerReorderFramesRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{216}
}

func (x *LayerReorderFramesRequest) GetLayer() *Layer {
	if x != nil {
		return x.Layer
	}
	return nil
}

func (x *LayerReorderFramesRequest) GetRange() string {
	if x != nil {
		return x.Range
	}
	return ""
}

func (x *LayerReorderFramesRequest) GetOrder() Order {
	if x != nil {
		return x.Order
	}
	return Order_FIRST
}

type LayerReorderFramesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LayerReorderFramesResponse) Reset() {
	*x = LayerReorderFramesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[217]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayerReorderFramesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayerReorderFramesResponse) ProtoMessage() {}

func (x *LayerReorderFramesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[217]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayerReorderFramesResponse.ProtoReflect.Descriptor instead.
func (*LayerReorderFramesResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{217}
}

// SetMaxCores
type LayerSetMaxCoresRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Layer *Layer  `protobuf:"bytes,1,opt,name=layer,proto3" json:"layer,omitempty"`
	Cores float32 `protobuf:"fixed32,2,opt,name=cores,proto3" json:"cores,omitempty"`
}

func (x *LayerSetMaxCoresRequest) Reset() {
	*x = LayerSetMaxCoresRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[218]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayerSetMaxCoresRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayerSetMaxCoresRequest) ProtoMessage() {}

func (x *LayerSetMaxCoresRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[218]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayerSetMaxCoresRequest.ProtoReflect.Descriptor instead.
func (*LayerSetMaxCoresRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{218}
}

func (x *LayerSetMaxCoresRequest) GetLayer() *Layer {
	if x != nil {
		return x.Layer
	}
	return nil
}

func (x *LayerSetMaxCoresRequest) GetCores() float32 {
	if x != nil {
		return x.Cores
	}
	return 0
}

type LayerSetMaxCoresResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LayerSetMaxCoresResponse) Reset() {
	*x = LayerSetMaxCoresResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[219]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayerSetMaxCoresResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayerSetMaxCoresResponse) ProtoMessage() {}

func (x *LayerSetMaxCoresResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[219]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayerSetMaxCoresResponse.ProtoReflect.Descriptor instead.
func (*LayerSetMaxCoresResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{219}
}

// SetMinCores
type LayerSetMinCoresRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Layer *Layer  `protobuf:"bytes,1,opt,name=layer,proto3" json:"layer,omitempty"`
	Cores float32 `protobuf:"fixed32,2,opt,name=cores,proto3" json:"cores,omitempty"`
}

func (x *LayerSetMinCoresRequest) Reset() {
	*x = LayerSetMinCoresRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[220]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayerSetMinCoresRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayerSetMinCoresRequest) ProtoMessage() {}

func (x *LayerSetMinCoresRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[220]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayerSetMinCoresRequest.ProtoReflect.Descriptor instead.
func (*LayerSetMinCoresRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{220}
}

func (x *LayerSetMinCoresRequest) GetLayer() *Layer {
	if x != nil {
		return x.Layer
	}
	return nil
}

func (x *LayerSetMinCoresRequest) GetCores() float32 {
	if x != nil {
		return x.Cores
	}
	return 0
}

type LayerSetMinCoresResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LayerSetMinCoresResponse) Reset() {
	*x = LayerSetMinCoresResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[221]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayerSetMinCoresResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayerSetMinCoresResponse) ProtoMessage() {}

func (x *LayerSetMinCoresResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[221]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayerSetMinCoresResponse.ProtoReflect.Descriptor instead.
func (*LayerSetMinCoresResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{221}
}

// [Deprecated] SetMinGpu
type LayerSetMinGpuRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Marked as deprecated in OpenCue/proto/job.proto.
	Layer *Layer `protobuf:"bytes,1,opt,name=layer,proto3" json:"layer,omitempty"`
	// Deprecated: Marked as deprecated in OpenCue/proto/job.proto.
	Gpu int64 `protobuf:"varint,2,opt,name=gpu,proto3" json:"gpu,omitempty"`
}

func (x *LayerSetMinGpuRequest) Reset() {
	*x = LayerSetMinGpuRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[222]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayerSetMinGpuRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayerSetMinGpuRequest) ProtoMessage() {}

func (x *LayerSetMinGpuRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[222]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayerSetMinGpuRequest.ProtoReflect.Descriptor instead.
func (*LayerSetMinGpuRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{222}
}

// Deprecated: Marked as deprecated in OpenCue/proto/job.proto.
func (x *LayerSetMinGpuRequest) GetLayer() *Layer {
	if x != nil {
		return x.Layer
	}
	return nil
}

// Deprecated: Marked as deprecated in OpenCue/proto/job.proto.
func (x *LayerSetMinGpuRequest) GetGpu() int64 {
	if x != nil {
		return x.Gpu
	}
	return 0
}

// [Deprecated]
type LayerSetMinGpuResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LayerSetMinGpuResponse) Reset() {
	*x = LayerSetMinGpuResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[223]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayerSetMinGpuResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayerSetMinGpuResponse) ProtoMessage() {}

func (x *LayerSetMinGpuResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[223]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayerSetMinGpuResponse.ProtoReflect.Descriptor instead.
func (*LayerSetMinGpuResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{223}
}

// SetMaxGpus
type LayerSetMaxGpusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Layer   *Layer `protobuf:"bytes,1,opt,name=layer,proto3" json:"layer,omitempty"`
	MaxGpus int32  `protobuf:"varint,2,opt,name=max_gpus,json=maxGpus,proto3" json:"max_gpus,omitempty"`
}

func (x *LayerSetMaxGpusRequest) Reset() {
	*x = LayerSetMaxGpusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[224]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayerSetMaxGpusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayerSetMaxGpusRequest) ProtoMessage() {}

func (x *LayerSetMaxGpusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[224]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayerSetMaxGpusRequest.ProtoReflect.Descriptor instead.
func (*LayerSetMaxGpusRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{224}
}

func (x *LayerSetMaxGpusRequest) GetLayer() *Layer {
	if x != nil {
		return x.Layer
	}
	return nil
}

func (x *LayerSetMaxGpusRequest) GetMaxGpus() int32 {
	if x != nil {
		return x.MaxGpus
	}
	return 0
}

type LayerSetMaxGpusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LayerSetMaxGpusResponse) Reset() {
	*x = LayerSetMaxGpusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[225]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayerSetMaxGpusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayerSetMaxGpusResponse) ProtoMessage() {}

func (x *LayerSetMaxGpusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[225]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayerSetMaxGpusResponse.ProtoReflect.Descriptor instead.
func (*LayerSetMaxGpusResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{225}
}

// SetMinGpus
type LayerSetMinGpusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Layer   *Layer `protobuf:"bytes,1,opt,name=layer,proto3" json:"layer,omitempty"`
	MinGpus int32  `protobuf:"varint,2,opt,name=min_gpus,json=minGpus,proto3" json:"min_gpus,omitempty"`
}

func (x *LayerSetMinGpusRequest) Reset() {
	*x = LayerSetMinGpusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[226]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayerSetMinGpusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayerSetMinGpusRequest) ProtoMessage() {}

func (x *LayerSetMinGpusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[226]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayerSetMinGpusRequest.ProtoReflect.Descriptor instead.
func (*LayerSetMinGpusRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{226}
}

func (x *LayerSetMinGpusRequest) GetLayer() *Layer {
	if x != nil {
		return x.Layer
	}
	return nil
}

func (x *LayerSetMinGpusRequest) GetMinGpus() int32 {
	if x != nil {
		return x.MinGpus
	}
	return 0
}

type LayerSetMinGpusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LayerSetMinGpusResponse) Reset() {
	*x = LayerSetMinGpusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[227]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayerSetMinGpusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayerSetMinGpusResponse) ProtoMessage() {}

func (x *LayerSetMinGpusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[227]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayerSetMinGpusResponse.ProtoReflect.Descriptor instead.
func (*LayerSetMinGpusResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{227}
}

// SetMinGpuMemory
type LayerSetMinGpuMemoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Layer     *Layer `protobuf:"bytes,1,opt,name=layer,proto3" json:"layer,omitempty"`
	GpuMemory int64  `protobuf:"varint,2,opt,name=gpu_memory,json=gpuMemory,proto3" json:"gpu_memory,omitempty"`
}

func (x *LayerSetMinGpuMemoryRequest) Reset() {
	*x = LayerSetMinGpuMemoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[228]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayerSetMinGpuMemoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayerSetMinGpuMemoryRequest) ProtoMessage() {}

func (x *LayerSetMinGpuMemoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[228]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayerSetMinGpuMemoryRequest.ProtoReflect.Descriptor instead.
func (*LayerSetMinGpuMemoryRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{228}
}

func (x *LayerSetMinGpuMemoryRequest) GetLayer() *Layer {
	if x != nil {
		return x.Layer
	}
	return nil
}

func (x *LayerSetMinGpuMemoryRequest) GetGpuMemory() int64 {
	if x != nil {
		return x.GpuMemory
	}
	return 0
}

type LayerSetMinGpuMemoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LayerSetMinGpuMemoryResponse) Reset() {
	*x = LayerSetMinGpuMemoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[229]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayerSetMinGpuMemoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayerSetMinGpuMemoryResponse) ProtoMessage() {}

func (x *LayerSetMinGpuMemoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[229]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayerSetMinGpuMemoryResponse.ProtoReflect.Descriptor instead.
func (*LayerSetMinGpuMemoryResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{229}
}

// SetMinMemory
type LayerSetMinMemoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Layer  *Layer `protobuf:"bytes,1,opt,name=layer,proto3" json:"layer,omitempty"`
	Memory int64  `protobuf:"varint,2,opt,name=memory,proto3" json:"memory,omitempty"`
}

func (x *LayerSetMinMemoryRequest) Reset() {
	*x = LayerSetMinMemoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[230]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayerSetMinMemoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayerSetMinMemoryRequest) ProtoMessage() {}

func (x *LayerSetMinMemoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[230]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayerSetMinMemoryRequest.ProtoReflect.Descriptor instead.
func (*LayerSetMinMemoryRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{230}
}

func (x *LayerSetMinMemoryRequest) GetLayer() *Layer {
	if x != nil {
		return x.Layer
	}
	return nil
}

func (x *LayerSetMinMemoryRequest) GetMemory() int64 {
	if x != nil {
		return x.Memory
	}
	return 0
}

type LayerSetMinMemoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LayerSetMinMemoryResponse) Reset() {
	*x = LayerSetMinMemoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[231]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayerSetMinMemoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayerSetMinMemoryResponse) ProtoMessage() {}

func (x *LayerSetMinMemoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[231]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayerSetMinMemoryResponse.ProtoReflect.Descriptor instead.
func (*LayerSetMinMemoryResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{231}
}

// SetTags
type LayerSetTagsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Layer *Layer   `protobuf:"bytes,1,opt,name=layer,proto3" json:"layer,omitempty"`
	Tags  []string `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *LayerSetTagsRequest) Reset() {
	*x = LayerSetTagsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[232]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayerSetTagsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayerSetTagsRequest) ProtoMessage() {}

func (x *LayerSetTagsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[232]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayerSetTagsRequest.ProtoReflect.Descriptor instead.
func (*LayerSetTagsRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{232}
}

func (x *LayerSetTagsRequest) GetLayer() *Layer {
	if x != nil {
		return x.Layer
	}
	return nil
}

func (x *LayerSetTagsRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type LayerSetTagsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LayerSetTagsResponse) Reset() {
	*x = LayerSetTagsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[233]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayerSetTagsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayerSetTagsResponse) ProtoMessage() {}

func (x *LayerSetTagsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[233]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayerSetTagsResponse.ProtoReflect.Descriptor instead.
func (*LayerSetTagsResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{233}
}

// SetThreadable
type LayerSetThreadableRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Layer      *Layer `protobuf:"bytes,1,opt,name=layer,proto3" json:"layer,omitempty"`
	Threadable bool   `protobuf:"varint,2,opt,name=threadable,proto3" json:"threadable,omitempty"`
}

func (x *LayerSetThreadableRequest) Reset() {
	*x = LayerSetThreadableRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[234]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayerSetThreadableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayerSetThreadableRequest) ProtoMessage() {}

func (x *LayerSetThreadableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[234]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayerSetThreadableRequest.ProtoReflect.Descriptor instead.
func (*LayerSetThreadableRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{234}
}

func (x *LayerSetThreadableRequest) GetLayer() *Layer {
	if x != nil {
		return x.Layer
	}
	return nil
}

func (x *LayerSetThreadableRequest) GetThreadable() bool {
	if x != nil {
		return x.Threadable
	}
	return false
}

type LayerSetThreadableResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LayerSetThreadableResponse) Reset() {
	*x = LayerSetThreadableResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[235]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayerSetThreadableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayerSetThreadableResponse) ProtoMessage() {}

func (x *LayerSetThreadableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[235]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayerSetThreadableResponse.ProtoReflect.Descriptor instead.
func (*LayerSetThreadableResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{235}
}

// SetTimeout
type LayerSetTimeoutRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Layer   *Layer `protobuf:"bytes,1,opt,name=layer,proto3" json:"layer,omitempty"`
	Timeout int32  `protobuf:"varint,2,opt,name=timeout,proto3" json:"timeout,omitempty"`
}

func (x *LayerSetTimeoutRequest) Reset() {
	*x = LayerSetTimeoutRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[236]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayerSetTimeoutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayerSetTimeoutRequest) ProtoMessage() {}

func (x *LayerSetTimeoutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[236]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayerSetTimeoutRequest.ProtoReflect.Descriptor instead.
func (*LayerSetTimeoutRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{236}
}

func (x *LayerSetTimeoutRequest) GetLayer() *Layer {
	if x != nil {
		return x.Layer
	}
	return nil
}

func (x *LayerSetTimeoutRequest) GetTimeout() int32 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

type LayerSetTimeoutResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LayerSetTimeoutResponse) Reset() {
	*x = LayerSetTimeoutResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[237]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayerSetTimeoutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayerSetTimeoutResponse) ProtoMessage() {}

func (x *LayerSetTimeoutResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[237]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayerSetTimeoutResponse.ProtoReflect.Descriptor instead.
func (*LayerSetTimeoutResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{237}
}

// SetTimeoutLLU
type LayerSetTimeoutLLURequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Layer      *Layer `protobuf:"bytes,1,opt,name=layer,proto3" json:"layer,omitempty"`
	TimeoutLlu int32  `protobuf:"varint,2,opt,name=timeout_llu,json=timeoutLlu,proto3" json:"timeout_llu,omitempty"`
}

func (x *LayerSetTimeoutLLURequest) Reset() {
	*x = LayerSetTimeoutLLURequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[238]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayerSetTimeoutLLURequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayerSetTimeoutLLURequest) ProtoMessage() {}

func (x *LayerSetTimeoutLLURequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[238]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayerSetTimeoutLLURequest.ProtoReflect.Descriptor instead.
func (*LayerSetTimeoutLLURequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{238}
}

func (x *LayerSetTimeoutLLURequest) GetLayer() *Layer {
	if x != nil {
		return x.Layer
	}
	return nil
}

func (x *LayerSetTimeoutLLURequest) GetTimeoutLlu() int32 {
	if x != nil {
		return x.TimeoutLlu
	}
	return 0
}

type LayerSetTimeoutLLUResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LayerSetTimeoutLLUResponse) Reset() {
	*x = LayerSetTimeoutLLUResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[239]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayerSetTimeoutLLUResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayerSetTimeoutLLUResponse) ProtoMessage() {}

func (x *LayerSetTimeoutLLUResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[239]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayerSetTimeoutLLUResponse.ProtoReflect.Descriptor instead.
func (*LayerSetTimeoutLLUResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{239}
}

// StaggerFrames
type LayerStaggerFramesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Layer   *Layer `protobuf:"bytes,1,opt,name=layer,proto3" json:"layer,omitempty"`
	Range   string `protobuf:"bytes,2,opt,name=range,proto3" json:"range,omitempty"`
	Stagger int32  `protobuf:"varint,3,opt,name=stagger,proto3" json:"stagger,omitempty"`
}

func (x *LayerStaggerFramesRequest) Reset() {
	*x = LayerStaggerFramesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[240]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayerStaggerFramesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayerStaggerFramesRequest) ProtoMessage() {}

func (x *LayerStaggerFramesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[240]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayerStaggerFramesRequest.ProtoReflect.Descriptor instead.
func (*LayerStaggerFramesRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{240}
}

func (x *LayerStaggerFramesRequest) GetLayer() *Layer {
	if x != nil {
		return x.Layer
	}
	return nil
}

func (x *LayerStaggerFramesRequest) GetRange() string {
	if x != nil {
		return x.Range
	}
	return ""
}

func (x *LayerStaggerFramesRequest) GetStagger() int32 {
	if x != nil {
		return x.Stagger
	}
	return 0
}

type LayerStaggerFramesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LayerStaggerFramesResponse) Reset() {
	*x = LayerStaggerFramesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_job_proto_msgTypes[241]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayerStaggerFramesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayerStaggerFramesResponse) ProtoMessage() {}

func (x *LayerStaggerFramesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_job_proto_msgTypes[241]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayerStaggerFramesResponse.ProtoReflect.Descriptor instead.
func (*LayerStaggerFramesResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_job_proto_rawDescGZIP(), []int{241}
}

var File_OpenCue_proto_job_proto protoreflect.FileDescriptor

var file_OpenCue_proto_job_proto_rawDesc = []byte{
	0x0a, 0x17, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x75, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x6a, 0x6f, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x6a, 0x6f, 0x62, 0x1a, 0x1b,
	0x4f, 0x70, 0x65, 0x6e, 0x43, 0x75, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x4f, 0x70, 0x65,
	0x6e, 0x43, 0x75, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x65, 0x70, 0x65, 0x6e,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x75, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x23, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x75, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x89, 0x06, 0x0a, 0x05, 0x46, 0x72, 0x61, 0x6d,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x6a, 0x6f,
	0x62, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x74, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x65, 0x74, 0x72, 0x79, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x65, 0x78, 0x69, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63,
	0x68, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x64,
	0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73,
	0x74, 0x6f, 0x70, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x73, 0x74, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x61, 0x78, 0x5f,
	0x72, 0x73, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6d, 0x61, 0x78, 0x52, 0x73,
	0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x64, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x64, 0x4d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x5f, 0x6d,
	0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x72, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x64, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x2e, 0x0a, 0x13, 0x72,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x5f, 0x67, 0x70, 0x75, 0x5f, 0x6d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x64, 0x47, 0x70, 0x75, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x6c,
	0x61, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x12, 0x3f, 0x0a, 0x10, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x6a, 0x6f, 0x62,
	0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x0f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0f,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x72, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6c, 0x75, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6c, 0x6c, 0x75, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x24, 0x0a, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x67, 0x70, 0x75, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x47, 0x70,
	0x75, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x61, 0x78, 0x5f, 0x67, 0x70, 0x75,
	0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6d,
	0x61, 0x78, 0x47, 0x70, 0x75, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x26, 0x0a, 0x0f, 0x75,
	0x73, 0x65, 0x64, 0x5f, 0x67, 0x70, 0x75, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x75, 0x73, 0x65, 0x64, 0x47, 0x70, 0x75, 0x4d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x22, 0x9d, 0x03, 0x0a, 0x13, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x69,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x66,
	0x72, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x2a, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x6a, 0x6f, 0x62, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x53, 0x65,
	0x71, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x72, 0x61,
	0x6d, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x66, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65,
	0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x25, 0x0a,
	0x0e, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x61, 0x6e, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x78, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6d, 0x61, 0x78, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x69, 0x6e, 0x63, 0x6c,
	0x75, 0x64, 0x65, 0x5f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0f, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x46, 0x69, 0x6e, 0x69, 0x73,
	0x68, 0x65, 0x64, 0x22, 0x2e, 0x0a, 0x08, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x71, 0x12,
	0x22, 0x0a, 0x06, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x06, 0x66, 0x72, 0x61,
	0x6d, 0x65, 0x73, 0x22, 0x43, 0x0a, 0x0d, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x53, 0x65, 0x71, 0x12, 0x32, 0x0a, 0x0c, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x6a, 0x6f, 0x62,
	0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0b, 0x66, 0x72, 0x61,
	0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x22, 0x8b, 0x03, 0x0a, 0x0c, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x46,
	0x72, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x74, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x65, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x65, 0x78, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x74, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x17,
	0x0a, 0x07, 0x6d, 0x61, 0x78, 0x5f, 0x72, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x6d, 0x61, 0x78, 0x52, 0x73, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x64, 0x5f,
	0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x73,
	0x65, 0x64, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x6c, 0x6c, 0x75, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x6c, 0x6c, 0x75, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x61, 0x78, 0x5f,
	0x67, 0x70, 0x75, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x6d, 0x61, 0x78, 0x47, 0x70, 0x75, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x26,
	0x0a, 0x0f, 0x75, 0x73, 0x65, 0x64, 0x5f, 0x67, 0x70, 0x75, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x75, 0x73, 0x65, 0x64, 0x47, 0x70, 0x75,
	0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x22, 0x4b, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x71, 0x12, 0x38, 0x0a, 0x0e, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x46,
	0x72, 0x61, 0x6d, 0x65, 0x52, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x46, 0x72, 0x61,
	0x6d, 0x65, 0x73, 0x22, 0x9c, 0x01, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x46,
	0x72, 0x61, 0x6d, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x23, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d,
	0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x0e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x6a, 0x6f, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x46, 0x72, 0x61, 0x6d, 0x65,
	0x53, 0x65, 0x71, 0x52, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x46, 0x72, 0x61, 0x6d,
	0x65, 0x73, 0x22, 0x9a, 0x04, 0x0a, 0x05, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x30, 0x0a, 0x14, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x6a, 0x6f, 0x62, 0x5f,
	0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4a, 0x6f, 0x62, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x12, 0x31, 0x0a, 0x15, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x6a, 0x6f,
	0x62, 0x5f, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x12, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4a, 0x6f, 0x62, 0x4d, 0x69, 0x6e,
	0x43, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x15, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x5f, 0x6a, 0x6f, 0x62, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x12, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4a, 0x6f, 0x62,
	0x4d, 0x61, 0x78, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x5f,
	0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x6d, 0x69, 0x6e,
	0x43, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x63, 0x6f, 0x72,
	0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x72,
	0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x0b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6a, 0x6f, 0x62,
	0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x0a, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x2f, 0x0a, 0x14, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x5f, 0x6a, 0x6f, 0x62, 0x5f, 0x6d, 0x69, 0x6e, 0x5f, 0x67, 0x70, 0x75, 0x73, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x02, 0x52, 0x11, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4a, 0x6f,
	0x62, 0x4d, 0x69, 0x6e, 0x47, 0x70, 0x75, 0x73, 0x12, 0x2f, 0x0a, 0x14, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x5f, 0x6a, 0x6f, 0x62, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x67, 0x70, 0x75, 0x73,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x02, 0x52, 0x11, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4a,
	0x6f, 0x62, 0x4d, 0x61, 0x78, 0x47, 0x70, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x69, 0x6e,
	0x5f, 0x67, 0x70, 0x75, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x6d, 0x69, 0x6e,
	0x47, 0x70, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x5f, 0x67, 0x70, 0x75, 0x73,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x47, 0x70, 0x75, 0x73, 0x22,
	0x2e, 0x0a, 0x08, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x71, 0x12, 0x22, 0x0a, 0x06, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6a, 0x6f,
	0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x22,
	0x8f, 0x02, 0x0a, 0x0a, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x25,
	0x0a, 0x0e, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x46,
	0x72, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x61, 0x64, 0x5f, 0x66, 0x72,
	0x61, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x64, 0x65, 0x61, 0x64,
	0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64,
	0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x64,
	0x65, 0x70, 0x65, 0x6e, 0x64, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x77,
	0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0d, 0x77, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x46, 0x72, 0x61, 0x6d,
	0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x6a, 0x6f,
	0x62, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x4a, 0x6f, 0x62, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x64, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x72,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d,
	0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x5f, 0x67, 0x70, 0x75, 0x73, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x47, 0x70, 0x75,
	0x73, 0x22, 0xd6, 0x04, 0x0a, 0x03, 0x4a, 0x6f, 0x62, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a,
	0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x68, 0x6f, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x68, 0x6f, 0x77, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x68, 0x6f, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x14,
	0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6f, 0x73,
	0x12, 0x12, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52,
	0x03, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79,
	0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x1b, 0x0a,
	0x09, 0x6d, 0x61, 0x78, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x08, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x6f,
	0x67, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x6f, 0x67,
	0x44, 0x69, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x70, 0x61, 0x75, 0x73, 0x65, 0x64,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x50, 0x61, 0x75, 0x73, 0x65, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x68, 0x61, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x68, 0x61, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x65, 0x61, 0x74, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x61, 0x75, 0x74, 0x6f, 0x45, 0x61, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73,
	0x74, 0x6f, 0x70, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x73, 0x74, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x09, 0x6a, 0x6f, 0x62, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6a, 0x6f,
	0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x08, 0x6a, 0x6f, 0x62, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x69, 0x6e, 0x5f, 0x67, 0x70, 0x75, 0x73,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x6d, 0x69, 0x6e, 0x47, 0x70, 0x75, 0x73, 0x12,
	0x19, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x5f, 0x67, 0x70, 0x75, 0x73, 0x18, 0x16, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x47, 0x70, 0x75, 0x73, 0x42, 0x0e, 0x0a, 0x0c, 0x75, 0x69,
	0x64, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x22, 0xd4, 0x01, 0x0a, 0x11, 0x4a,
	0x6f, 0x62, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61,
	0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69,
	0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6a, 0x6f, 0x62, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x04, 0x6a, 0x6f, 0x62, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x67, 0x65, 0x78, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x72, 0x65, 0x67, 0x65, 0x78, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x73, 0x75,
	0x62, 0x73, 0x74, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x68,
	0x6f, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x73, 0x68, 0x6f, 0x74, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x68, 0x6f, 0x77, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x05, 0x73, 0x68, 0x6f, 0x77, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x5f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0f, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65,
	0x64, 0x22, 0x26, 0x0a, 0x06, 0x4a, 0x6f, 0x62, 0x53, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x04, 0x6a,
	0x6f, 0x62, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x6a, 0x6f, 0x62, 0x2e,
	0x4a, 0x6f, 0x62, 0x52, 0x04, 0x6a, 0x6f, 0x62, 0x73, 0x22, 0xcc, 0x07, 0x0a, 0x08, 0x4a, 0x6f,
	0x62, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x0e,
	0x77, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x77, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x46, 0x72, 0x61,
	0x6d, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x66,
	0x72, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x72, 0x75, 0x6e,
	0x6e, 0x69, 0x6e, 0x67, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65,
	0x61, 0x64, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x64, 0x65, 0x61, 0x64, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x65,
	0x61, 0x74, 0x65, 0x6e, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x65, 0x61, 0x74, 0x65, 0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x23,
	0x0a, 0x0d, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x46, 0x72, 0x61,
	0x6d, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x73, 0x75, 0x63, 0x63, 0x65, 0x65, 0x64, 0x65, 0x64,
	0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x65, 0x64, 0x65, 0x64, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x25,
	0x0a, 0x0e, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x46,
	0x72, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0d, 0x61, 0x76, 0x67, 0x5f, 0x66, 0x72, 0x61,
	0x6d, 0x65, 0x5f, 0x73, 0x65, 0x63, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x61, 0x76,
	0x67, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x63, 0x12, 0x24, 0x0a, 0x0e, 0x68, 0x69, 0x67,
	0x68, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x63, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x68, 0x69, 0x67, 0x68, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x63, 0x12,
	0x20, 0x0a, 0x0c, 0x61, 0x76, 0x67, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x73, 0x65, 0x63, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x76, 0x67, 0x43, 0x6f, 0x72, 0x65, 0x53, 0x65,
	0x63, 0x12, 0x30, 0x0a, 0x14, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x65, 0x64, 0x5f, 0x66, 0x72,
	0x61, 0x6d, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x12, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x65, 0x64, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x5f, 0x66, 0x72,
	0x61, 0x6d, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x10, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x2c, 0x0a, 0x12, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x63,
	0x6f, 0x72, 0x65, 0x5f, 0x73, 0x65, 0x63, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x72,
	0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x63, 0x12,
	0x24, 0x0a, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x73, 0x65,
	0x63, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f,
	0x72, 0x65, 0x53, 0x65, 0x63, 0x12, 0x2a, 0x0a, 0x11, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x65,
	0x64, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x73, 0x65, 0x63, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0f, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x65, 0x64, 0x43, 0x6f, 0x72, 0x65, 0x53, 0x65,
	0x63, 0x12, 0x26, 0x0a, 0x0f, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x72, 0x65,
	0x5f, 0x73, 0x65, 0x63, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x66, 0x61, 0x69, 0x6c,
	0x65, 0x64, 0x43, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x63, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x61, 0x78,
	0x5f, 0x72, 0x73, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6d, 0x61, 0x78, 0x52,
	0x73, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x5f, 0x63,
	0x6f, 0x72, 0x65, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x64, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0d, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x67, 0x70, 0x75, 0x5f, 0x73, 0x65, 0x63, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x47, 0x70, 0x75, 0x53, 0x65, 0x63, 0x12, 0x28, 0x0a,
	0x10, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x65, 0x64, 0x5f, 0x67, 0x70, 0x75, 0x5f, 0x73, 0x65,
	0x63, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x65,
	0x64, 0x47, 0x70, 0x75, 0x53, 0x65, 0x63, 0x12, 0x24, 0x0a, 0x0e, 0x66, 0x61, 0x69, 0x6c, 0x65,
	0x64, 0x5f, 0x67, 0x70, 0x75, 0x5f, 0x73, 0x65, 0x63, 0x18, 0x17, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0c, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x47, 0x70, 0x75, 0x53, 0x65, 0x63, 0x12, 0x23, 0x0a,
	0x0d, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x5f, 0x67, 0x70, 0x75, 0x73, 0x18, 0x18,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x47, 0x70,
	0x75, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x61, 0x78, 0x5f, 0x67, 0x70, 0x75, 0x5f, 0x6d, 0x65,
	0x6d, 0x6f, 0x72, 0x79, 0x18, 0x19, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6d, 0x61, 0x78, 0x47,
	0x70, 0x75, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x22, 0x91, 0x05, 0x0a, 0x05, 0x4c, 0x61, 0x79,
	0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x61, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x1b, 0x0a,
	0x09, 0x6d, 0x61, 0x78, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x08, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x73,
	0x5f, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0c, 0x69, 0x73, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x61, 0x62, 0x6c, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x6d, 0x69, 0x6e, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x69, 0x6e, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x24,
	0x0a, 0x0e, 0x6d, 0x69, 0x6e, 0x5f, 0x67, 0x70, 0x75, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6d, 0x69, 0x6e, 0x47, 0x70, 0x75, 0x4d, 0x65,
	0x6d, 0x6f, 0x72, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x5f,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x64, 0x69, 0x73,
	0x70, 0x61, 0x74, 0x63, 0x68, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c,
	0x61, 0x79, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x18, 0x6d, 0x65,
	0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x65, 0x72, 0x5f, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x6d, 0x65,
	0x6d, 0x6f, 0x72, 0x79, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x65, 0x72, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x12, 0x30, 0x0a, 0x0b, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6a, 0x6f, 0x62, 0x2e,
	0x4c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x0a, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x18, 0x11, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x74,
	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x74, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x5f, 0x6c, 0x6c, 0x75, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65,
	0x6f, 0x75, 0x74, 0x4c, 0x6c, 0x75, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x69, 0x6e, 0x5f, 0x67, 0x70,
	0x75, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x6d, 0x69, 0x6e, 0x47, 0x70, 0x75,
	0x73, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x5f, 0x67, 0x70, 0x75, 0x73, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x47, 0x70, 0x75, 0x73, 0x22, 0x2e, 0x0a, 0x08,
	0x4c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x71, 0x12, 0x22, 0x0a, 0x06, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c,
	0x61, 0x79, 0x65, 0x72, 0x52, 0x06, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x22, 0xcf, 0x07, 0x0a,
	0x0a, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x25,
	0x0a, 0x0e, 0x77, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x77, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x46,
	0x72, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67,
	0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x72,
	0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b,
	0x64, 0x65, 0x61, 0x64, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x64, 0x65, 0x61, 0x64, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x21, 0x0a,
	0x0c, 0x65, 0x61, 0x74, 0x65, 0x6e, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x65, 0x61, 0x74, 0x65, 0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73,
	0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x46,
	0x72, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x73, 0x75, 0x63, 0x63, 0x65, 0x65, 0x64,
	0x65, 0x64, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x65, 0x64, 0x65, 0x64, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73,
	0x12, 0x25, 0x0a, 0x0e, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x66, 0x72, 0x61, 0x6d,
	0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0d, 0x61, 0x76, 0x67, 0x5f, 0x66,
	0x72, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x63, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x61, 0x76, 0x67, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x63, 0x12, 0x22, 0x0a, 0x0d, 0x6c,
	0x6f, 0x77, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x63, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x6c, 0x6f, 0x77, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x63, 0x12,
	0x24, 0x0a, 0x0e, 0x68, 0x69, 0x67, 0x68, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x65,
	0x63, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x68, 0x69, 0x67, 0x68, 0x46, 0x72, 0x61,
	0x6d, 0x65, 0x53, 0x65, 0x63, 0x12, 0x20, 0x0a, 0x0c, 0x61, 0x76, 0x67, 0x5f, 0x63, 0x6f, 0x72,
	0x65, 0x5f, 0x73, 0x65, 0x63, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x76, 0x67,
	0x43, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x63, 0x12, 0x30, 0x0a, 0x14, 0x72, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x65, 0x64, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x65, 0x64, 0x46,
	0x72, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x66, 0x61, 0x69,
	0x6c, 0x65, 0x64, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x46, 0x72, 0x61,
	0x6d, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x72, 0x65, 0x6d, 0x61, 0x69,
	0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x73, 0x65, 0x63, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x10, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x43, 0x6f,
	0x72, 0x65, 0x53, 0x65, 0x63, 0x12, 0x24, 0x0a, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63,
	0x6f, 0x72, 0x65, 0x5f, 0x73, 0x65, 0x63, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x63, 0x12, 0x2a, 0x0a, 0x11, 0x72,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x73, 0x65, 0x63,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x65, 0x64,
	0x43, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x63, 0x12, 0x26, 0x0a, 0x0f, 0x66, 0x61, 0x69, 0x6c, 0x65,
	0x64, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x73, 0x65, 0x63, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0d, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x43, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x63, 0x12,
	0x17, 0x0a, 0x07, 0x6d, 0x61, 0x78, 0x5f, 0x72, 0x73, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x6d, 0x61, 0x78, 0x52, 0x73, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0d, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x12,
	0x22, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x67, 0x70, 0x75, 0x5f, 0x73, 0x65, 0x63,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x47, 0x70, 0x75,
	0x53, 0x65, 0x63, 0x12, 0x28, 0x0a, 0x10, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x65, 0x64, 0x5f,
	0x67, 0x70, 0x75, 0x5f, 0x73, 0x65, 0x63, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x72,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x65, 0x64, 0x47, 0x70, 0x75, 0x53, 0x65, 0x63, 0x12, 0x24, 0x0a,
	0x0e, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x5f, 0x67, 0x70, 0x75, 0x5f, 0x73, 0x65, 0x63, 0x18,
	0x17, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x47, 0x70, 0x75,
	0x53, 0x65, 0x63, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x5f,
	0x67, 0x70, 0x75, 0x73, 0x18, 0x18, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x64, 0x47, 0x70, 0x75, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x61, 0x78, 0x5f,
	0x67, 0x70, 0x75, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x19, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x6d, 0x61, 0x78, 0x47, 0x70, 0x75, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x22, 0xe3,
	0x04, 0x0a, 0x0b, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x6a, 0x6f,
	0x62, 0x5f, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x12, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4a, 0x6f, 0x62, 0x50, 0x72, 0x69, 0x6f,
	0x72, 0x69, 0x74, 0x79, 0x12, 0x31, 0x0a, 0x15, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f,
	0x6a, 0x6f, 0x62, 0x5f, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x12, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4a, 0x6f, 0x62, 0x4d,
	0x69, 0x6e, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x15, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x5f, 0x6a, 0x6f, 0x62, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x12, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4a,
	0x6f, 0x62, 0x4d, 0x61, 0x78, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x69,
	0x6e, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x6d,
	0x69, 0x6e, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x63,
	0x6f, 0x72, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x43,
	0x6f, 0x72, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x28, 0x0a, 0x06, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6a, 0x6f, 0x62,
	0x2e, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x06, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4e, 0x65, 0x73, 0x74, 0x65,
	0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x71, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x6a, 0x6f, 0x62, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x04, 0x6a, 0x6f, 0x62, 0x73, 0x12, 0x25, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x12, 0x2f, 0x0a, 0x14,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x6a, 0x6f, 0x62, 0x5f, 0x6d, 0x69, 0x6e, 0x5f,
	0x67, 0x70, 0x75, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x02, 0x52, 0x11, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x4a, 0x6f, 0x62, 0x4d, 0x69, 0x6e, 0x47, 0x70, 0x75, 0x73, 0x12, 0x2f, 0x0a,
	0x14, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x6a, 0x6f, 0x62, 0x5f, 0x6d, 0x61, 0x78,
	0x5f, 0x67, 0x70, 0x75, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x02, 0x52, 0x11, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x4a, 0x6f, 0x62, 0x4d, 0x61, 0x78, 0x47, 0x70, 0x75, 0x73, 0x12, 0x19,
	0x0a, 0x08, 0x6d, 0x69, 0x6e, 0x5f, 0x67, 0x70, 0x75, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x07, 0x6d, 0x69, 0x6e, 0x47, 0x70, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x78,
	0x5f, 0x67, 0x70, 0x75, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x6d, 0x61, 0x78,
	0x47, 0x70, 0x75, 0x73, 0x22, 0x47, 0x0a, 0x0e, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x53, 0x65, 0x71, 0x12, 0x35, 0x0a, 0x0d, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64,
	0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x6a, 0x6f, 0x62, 0x2e, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x0c, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x22, 0xff, 0x04,
	0x0a, 0x09, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4a, 0x6f, 0x62, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x6a, 0x6f, 0x62,
	0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x68, 0x6f, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x68, 0x6f, 0x77,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x68, 0x6f, 0x77, 0x12, 0x12, 0x0a, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x6f, 0x73, 0x12, 0x12, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x00, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x12,
	0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x17, 0x0a, 0x07,
	0x6c, 0x6f, 0x67, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c,
	0x6f, 0x67, 0x44, 0x69, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x70, 0x61, 0x75, 0x73,
	0x65, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x50, 0x61, 0x75, 0x73,
	0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x68, 0x61, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x68, 0x61, 0x73, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x65, 0x61, 0x74, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x61, 0x75, 0x74, 0x6f, 0x45, 0x61, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x73, 0x74, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x06, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6a, 0x6f, 0x62,
	0x2e, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x06, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x69, 0x6e,
	0x5f, 0x67, 0x70, 0x75, 0x73, 0x18, 0x16, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x6d, 0x69, 0x6e,
	0x47, 0x70, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x5f, 0x67, 0x70, 0x75, 0x73,
	0x18, 0x17, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x47, 0x70, 0x75, 0x73, 0x42,
	0x0e, 0x0a, 0x0c, 0x75, 0x69, 0x64, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x22,
	0x89, 0x02, 0x0a, 0x1e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x41, 0x64, 0x64, 0x52, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x20, 0x0a, 0x05, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x05, 0x66,
	0x72, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x68, 0x72, 0x65,
	0x61, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x74, 0x68, 0x72, 0x65, 0x61,
	0x64, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x12,
	0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x24,
	0x0a, 0x0e, 0x6d, 0x61, 0x78, 0x5f, 0x67, 0x70, 0x75, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6d, 0x61, 0x78, 0x47, 0x70, 0x75, 0x4d, 0x65,
	0x6d, 0x6f, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x5f, 0x67, 0x70, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x47, 0x70, 0x75, 0x73, 0x22, 0x6e, 0x0a, 0x1f, 0x46,
	0x72, 0x61, 0x6d, 0x65, 0x41, 0x64, 0x64, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x50, 0x61, 0x72,
	0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b,
	0x0a, 0x10, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x72, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x72, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x7b, 0x0a, 0x23, 0x46,
	0x72, 0x61, 0x6d, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64,
	0x65, 0x6e, 0x63, 0x79, 0x4f, 0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x20, 0x0a, 0x05, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x05, 0x66,
	0x72, 0x61, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x0f, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x5f, 0x6f,
	0x6e, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x6a, 0x6f, 0x62, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x0d, 0x64, 0x65, 0x70, 0x65, 0x6e,
	0x64, 0x4f, 0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x22, 0x4e, 0x0a, 0x24, 0x46, 0x72, 0x61, 0x6d,
	0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63,
	0x79, 0x4f, 0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x26, 0x0a, 0x06, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x2e, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64,
	0x52, 0x06, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x22, 0x61, 0x0a, 0x21, 0x46, 0x72, 0x61, 0x6d,
	0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63,
	0x79, 0x4f, 0x6e, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a,
	0x05, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6a,
	0x6f, 0x62, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x05, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x6a,
	0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x22, 0x4c, 0x0a, 0x22, 0x46,
	0x72, 0x61, 0x6d, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64,
	0x65, 0x6e, 0x63, 0x79, 0x4f, 0x6e, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x26, 0x0a, 0x06, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x2e, 0x44, 0x65, 0x70, 0x65, 0x6e,
	0x64, 0x52, 0x06, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x22, 0x69, 0x0a, 0x23, 0x46, 0x72, 0x61,
	0x6d, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e,
	0x63, 0x79, 0x4f, 0x6e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x20, 0x0a, 0x05, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x05, 0x66, 0x72, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x05, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x22, 0x4e, 0x0a, 0x24, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x4f, 0x6e, 0x4c,
	0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x06,
	0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x64,
	0x65, 0x70, 0x65, 0x6e, 0x64, 0x2e, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x52, 0x06, 0x64, 0x65,
	0x70, 0x65, 0x6e, 0x64, 0x22, 0x69, 0x0a, 0x17, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x44, 0x72, 0x6f,
	0x70, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x20, 0x0a, 0x05, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x05, 0x66, 0x72, 0x61, 0x6d,
	0x65, 0x12, 0x2c, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x14, 0x2e, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x2e, 0x44, 0x65, 0x70, 0x65, 0x6e,
	0x64, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x22,
	0x1a, 0x0a, 0x18, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x44, 0x72, 0x6f, 0x70, 0x44, 0x65, 0x70, 0x65,
	0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x33, 0x0a, 0x0f, 0x46,
	0x72, 0x61, 0x6d, 0x65, 0x45, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20,
	0x0a, 0x05, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x6a, 0x6f, 0x62, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x05, 0x66, 0x72, 0x61, 0x6d, 0x65,
	0x22, 0x12, 0x0a, 0x10, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x45, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x55, 0x0a, 0x15, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x46, 0x69, 0x6e,
	0x64, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x6a, 0x6f, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x22, 0x3a, 0x0a, 0x16, 0x46,
	0x72, 0x61, 0x6d, 0x65, 0x46, 0x69, 0x6e, 0x64, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x05, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65,
	0x52, 0x05, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x22, 0x26, 0x0a, 0x14, 0x46, 0x72, 0x61, 0x6d, 0x65,
	0x47, 0x65, 0x74, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x39, 0x0a, 0x15, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x47, 0x65, 0x74, 0x46, 0x72, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x05, 0x66, 0x72, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x46, 0x72,
	0x61, 0x6d, 0x65, 0x52, 0x05, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x22, 0x51, 0x0a, 0x15, 0x46, 0x72,
	0x61, 0x6d, 0x65, 0x47, 0x65, 0x74, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6a, 0x6f, 0x62, 0x12, 0x26, 0x0a, 0x01, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x01, 0x72, 0x22, 0x3f, 0x0a,
	0x16, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x47, 0x65, 0x74, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x06, 0x66, 0x72, 0x61, 0x6d, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x46, 0x72,
	0x61, 0x6d, 0x65, 0x53, 0x65, 0x71, 0x52, 0x06, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x22, 0x44,
	0x0a, 0x20, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x47, 0x65, 0x74, 0x57, 0x68, 0x61, 0x74, 0x44, 0x65,
	0x70, 0x65, 0x6e, 0x64, 0x73, 0x4f, 0x6e, 0x54, 0x68, 0x69, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x20, 0x0a, 0x05, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x05, 0x66,
	0x72, 0x61, 0x6d, 0x65, 0x22, 0x50, 0x0a, 0x21, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x47, 0x65, 0x74,
	0x57, 0x68, 0x61, 0x74, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x4f, 0x6e, 0x54, 0x68, 0x69,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x07, 0x64, 0x65, 0x70,
	0x65, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x64, 0x65, 0x70,
	0x65, 0x6e, 0x64, 0x2e, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x53, 0x65, 0x71, 0x52, 0x07, 0x64,
	0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x22, 0x44, 0x0a, 0x20, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x47,
	0x65, 0x74, 0x57, 0x68, 0x61, 0x74, 0x54, 0x68, 0x69, 0x73, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64,
	0x73, 0x4f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x05, 0x66, 0x72,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e,
	0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x05, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x22, 0x50, 0x0a, 0x21,
	0x46, 0x72, 0x61, 0x6d, 0x65, 0x47, 0x65, 0x74, 0x57, 0x68, 0x61, 0x74, 0x54, 0x68, 0x69, 0x73,
	0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x4f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2b, 0x0a, 0x07, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x2e, 0x44, 0x65, 0x70, 0x65,
	0x6e, 0x64, 0x53, 0x65, 0x71, 0x52, 0x07, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x22, 0x34,
	0x0a, 0x10, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x4b, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x20, 0x0a, 0x05, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x05, 0x66,
	0x72, 0x61, 0x6d, 0x65, 0x22, 0x13, 0x0a, 0x11, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x4b, 0x69, 0x6c,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3c, 0x0a, 0x18, 0x46, 0x72, 0x61,
	0x6d, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x41, 0x73, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x05, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65,
	0x52, 0x05, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x22, 0x1b, 0x0a, 0x19, 0x46, 0x72, 0x61, 0x6d, 0x65,
	0x4d, 0x61, 0x72, 0x6b, 0x41, 0x73, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3d, 0x0a, 0x19, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x4d, 0x61, 0x72,
	0x6b, 0x41, 0x73, 0x57, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x20, 0x0a, 0x05, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x05, 0x66, 0x72,
	0x61, 0x6d, 0x65, 0x22, 0x1c, 0x0a, 0x1a, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x4d, 0x61, 0x72, 0x6b,
	0x41, 0x73, 0x57, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x35, 0x0a, 0x11, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x74, 0x72, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x05, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x46, 0x72, 0x61, 0x6d,
	0x65, 0x52, 0x05, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x22, 0x14, 0x0a, 0x12, 0x46, 0x72, 0x61, 0x6d,
	0x65, 0x52, 0x65, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6e,
	0x0a, 0x1e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x20, 0x0a, 0x05, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x05, 0x66, 0x72, 0x61,
	0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x14, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x21,
	0x0a, 0x1f, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x52, 0x0a, 0x1a, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x75, 0x62, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x20, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3f, 0x0a, 0x1b, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x36, 0x0a, 0x12, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x05,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6a, 0x6f,
	0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x15,
	0x0a, 0x13, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3f, 0x0a, 0x15, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x46, 0x69,
	0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x68, 0x6f, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x68,
	0x6f, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3a, 0x0a, 0x16, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x46,
	0x69, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x20, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x05, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x22, 0x26, 0x0a, 0x14, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x47, 0x65, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x39, 0x0a, 0x15, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x05,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x39, 0x0a, 0x15, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x47, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20,
	0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x6a, 0x6f, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x22, 0x3f, 0x0a, 0x16, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x06, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6a, 0x6f, 0x62,
	0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x71, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x22, 0x37, 0x0a, 0x13, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x37, 0x0a, 0x14, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1f, 0x0a, 0x04, 0x6a, 0x6f, 0x62, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x65, 0x71, 0x52, 0x04, 0x6a,
	0x6f, 0x62, 0x73, 0x22, 0x65, 0x0a, 0x1a, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x20, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x05, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x25, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53,
	0x65, 0x71, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x22, 0x1d, 0x0a, 0x1b, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5d, 0x0a, 0x18, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4a, 0x6f, 0x62, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1f, 0x0a, 0x04, 0x6a, 0x6f, 0x62, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x53,
	0x65, 0x71, 0x52, 0x04, 0x6a, 0x6f, 0x62, 0x73, 0x22, 0x1b, 0x0a, 0x19, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x65, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4a, 0x6f, 0x62, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5e, 0x0a, 0x1d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65,
	0x74, 0x44, 0x65, 0x66, 0x4a, 0x6f, 0x62, 0x4d, 0x61, 0x78, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f,
	0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x6d, 0x61, 0x78,
	0x43, 0x6f, 0x72, 0x65, 0x73, 0x22, 0x20, 0x0a, 0x1e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65,
	0x74, 0x44, 0x65, 0x66, 0x4a, 0x6f, 0x62, 0x4d, 0x61, 0x78, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5e, 0x0a, 0x1d, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x53, 0x65, 0x74, 0x44, 0x65, 0x66, 0x4a, 0x6f, 0x62, 0x4d, 0x69, 0x6e, 0x43, 0x6f, 0x72, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x69,
	0x6e, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x6d,
	0x69, 0x6e, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x22, 0x20, 0x0a, 0x1e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x53, 0x65, 0x74, 0x44, 0x65, 0x66, 0x4a, 0x6f, 0x62, 0x4d, 0x69, 0x6e, 0x43, 0x6f, 0x72, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5b, 0x0a, 0x1c, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x53, 0x65, 0x74, 0x44, 0x65, 0x66, 0x4a, 0x6f, 0x62, 0x4d, 0x61, 0x78, 0x47, 0x70,
	0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x05, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x6d,
	0x61, 0x78, 0x5f, 0x67, 0x70, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d,
	0x61, 0x78, 0x47, 0x70, 0x75, 0x73, 0x22, 0x1f, 0x0a, 0x1d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53,
	0x65, 0x74, 0x44, 0x65, 0x66, 0x4a, 0x6f, 0x62, 0x4d, 0x61, 0x78, 0x47, 0x70, 0x75, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5b, 0x0a, 0x1c, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x53, 0x65, 0x74, 0x44, 0x65, 0x66, 0x4a, 0x6f, 0x62, 0x4d, 0x69, 0x6e, 0x47, 0x70, 0x75, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x69, 0x6e,
	0x5f, 0x67, 0x70, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x69, 0x6e,
	0x47, 0x70, 0x75, 0x73, 0x22, 0x1f, 0x0a, 0x1d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x74,
	0x44, 0x65, 0x66, 0x4a, 0x6f, 0x62, 0x4d, 0x69, 0x6e, 0x47, 0x70, 0x75, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5d, 0x0a, 0x1d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65,
	0x74, 0x44, 0x65, 0x66, 0x4a, 0x6f, 0x62, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f,
	0x72, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f,
	0x72, 0x69, 0x74, 0x79, 0x22, 0x20, 0x0a, 0x1e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x74,
	0x44, 0x65, 0x66, 0x4a, 0x6f, 0x62, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4b, 0x0a, 0x13, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53,
	0x65, 0x74, 0x44, 0x65, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a,
	0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6a,
	0x6f, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x65, 0x70, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64,
	0x65, 0x70, 0x74, 0x22, 0x16, 0x0a, 0x14, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x74, 0x44,
	0x65, 0x70, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x67, 0x0a, 0x14, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x05,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x2d, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6a, 0x6f,
	0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x22, 0x17, 0x0a, 0x15, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x58, 0x0a,
	0x17, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x78, 0x43, 0x6f, 0x72, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61,
	0x78, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x6d,
	0x61, 0x78, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x22, 0x1a, 0x0a, 0x18, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x53, 0x65, 0x74, 0x4d, 0x61, 0x78, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x58, 0x0a, 0x17, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x74, 0x4d,
	0x69, 0x6e, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20,
	0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x6a, 0x6f, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x22, 0x1a, 0x0a,
	0x18, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x43, 0x6f, 0x72, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x55, 0x0a, 0x16, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x78, 0x47, 0x70, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x05,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x5f, 0x67, 0x70, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x47, 0x70, 0x75, 0x73,
	0x22, 0x19, 0x0a, 0x17, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x78, 0x47,
	0x70, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x55, 0x0a, 0x16, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x47, 0x70, 0x75, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x69, 0x6e, 0x5f, 0x67,
	0x70, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x69, 0x6e, 0x47, 0x70,
	0x75, 0x73, 0x22, 0x19, 0x0a, 0x17, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x74, 0x4d, 0x69,
	0x6e, 0x47, 0x70, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4b, 0x0a,
	0x13, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x16, 0x0a, 0x14, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x53, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x65, 0x0a, 0x14, 0x4a, 0x6f, 0x62, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x03, 0x6a, 0x6f,
	0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f,
	0x62, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x12, 0x31, 0x0a, 0x0b, 0x6e, 0x65, 0x77, 0x5f, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x6e,
	0x65, 0x77, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x17, 0x0a, 0x15, 0x4a, 0x6f, 0x62,
	0x41, 0x64, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0xfc, 0x01, 0x0a, 0x17, 0x4a, 0x6f, 0x62, 0x41, 0x64, 0x64, 0x52, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x50, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x6a, 0x6f,
	0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f,
	0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x61, 0x78,
	0x43, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x5f, 0x6d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x4d, 0x65,
	0x6d, 0x6f, 0x72, 0x79, 0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x61, 0x78, 0x5f, 0x67, 0x70, 0x75, 0x5f,
	0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6d, 0x61,
	0x78, 0x47, 0x70, 0x75, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x5f, 0x67, 0x70,
	0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x47, 0x70, 0x75,
	0x73, 0x22, 0x67, 0x0a, 0x18, 0x4a, 0x6f, 0x62, 0x41, 0x64, 0x64, 0x52, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x50, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a,
	0x10, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x72, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x61, 0x0a, 0x21, 0x4a, 0x6f,
	0x62, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63,
	0x79, 0x4f, 0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x6a,
	0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x12, 0x20, 0x0a, 0x05, 0x66,
	0x72, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6a, 0x6f, 0x62,
	0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x05, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x22, 0x4c, 0x0a,
	0x22, 0x4a, 0x6f, 0x62, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64,
	0x65, 0x6e, 0x63, 0x79, 0x4f, 0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x06, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x2e, 0x44, 0x65, 0x70,
	0x65, 0x6e, 0x64, 0x52, 0x06, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x22, 0x5e, 0x0a, 0x1f, 0x4a,
	0x6f, 0x62, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e,
	0x63, 0x79, 0x4f, 0x6e, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x6a, 0x6f,
	0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x12, 0x1f, 0x0a, 0x06, 0x6f, 0x6e,
	0x5f, 0x6a, 0x6f, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x6a, 0x6f, 0x62,
	0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x05, 0x6f, 0x6e, 0x4a, 0x6f, 0x62, 0x22, 0x4a, 0x0a, 0x20, 0x4a,
	0x6f, 0x62, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e,
	0x63, 0x79, 0x4f, 0x6e, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x26, 0x0a, 0x06, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x2e, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x52,
	0x06, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x22, 0x61, 0x0a, 0x21, 0x4a, 0x6f, 0x62, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x4f, 0x6e,
	0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x03,
	0x6a, 0x6f, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x6a, 0x6f, 0x62, 0x2e,
	0x4a, 0x6f, 0x62, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x12, 0x20, 0x0a, 0x05, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c, 0x61,
	0x79, 0x65, 0x72, 0x52, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x22, 0x4c, 0x0a, 0x22, 0x4a, 0x6f,
	0x62, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63,
	0x79, 0x4f, 0x6e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x26, 0x0a, 0x06, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x2e, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64,
	0x52, 0x06, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x22, 0x61, 0x0a, 0x15, 0x4a, 0x6f, 0x62, 0x44,
	0x72, 0x6f, 0x70, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1a, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08,
	0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x12, 0x2c, 0x0a,
	0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e,
	0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x2e, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0x18, 0x0a, 0x16, 0x4a,
	0x6f, 0x62, 0x44, 0x72, 0x6f, 0x70, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5d, 0x0a, 0x13, 0x4a, 0x6f, 0x62, 0x45, 0x61, 0x74, 0x46,
	0x72, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x03,
	0x6a, 0x6f, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x6a, 0x6f, 0x62, 0x2e,
	0x4a, 0x6f, 0x62, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x12, 0x2a, 0x0a, 0x03, 0x72, 0x65, 0x71, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x46, 0x72, 0x61, 0x6d,
	0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52,
	0x03, 0x72, 0x65, 0x71, 0x22, 0x16, 0x0a, 0x14, 0x4a, 0x6f, 0x62, 0x45, 0x61, 0x74, 0x46, 0x72,
	0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27, 0x0a, 0x11,
	0x4a, 0x6f, 0x62, 0x46, 0x69, 0x6e, 0x64, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x30, 0x0a, 0x12, 0x4a, 0x6f, 0x62, 0x46, 0x69, 0x6e, 0x64,
	0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x03, 0x6a,
	0x6f, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a,
	0x6f, 0x62, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x22, 0x33, 0x0a, 0x15, 0x4a, 0x6f, 0x62, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e,
	0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x22, 0x49, 0x0a, 0x16,
	0x4a, 0x6f, 0x62, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x71, 0x52, 0x08, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x32, 0x0a, 0x14, 0x4a, 0x6f, 0x62, 0x47, 0x65,
	0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x6a,
	0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x22, 0x33, 0x0a, 0x15, 0x4a,
	0x6f, 0x62, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x08, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x03, 0x6a, 0x6f, 0x62,
	0x22, 0x32, 0x0a, 0x14, 0x4a, 0x6f, 0x62, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x52,
	0x03, 0x6a, 0x6f, 0x62, 0x22, 0x44, 0x0a, 0x15, 0x4a, 0x6f, 0x62, 0x47, 0x65, 0x74, 0x44, 0x65,
	0x70, 0x65, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a,
	0x07, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x2e, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x53, 0x65,
	0x71, 0x52, 0x07, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x22, 0x5d, 0x0a, 0x13, 0x4a, 0x6f,
	0x62, 0x47, 0x65, 0x74, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1a, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08,
	0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x12, 0x2a, 0x0a,
	0x03, 0x72, 0x65, 0x71, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6a, 0x6f, 0x62,
	0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x72, 0x69, 0x74,
	0x65, 0x72, 0x69, 0x61, 0x52, 0x03, 0x72, 0x65, 0x71, 0x22, 0x3d, 0x0a, 0x14, 0x4a, 0x6f, 0x62,
	0x47, 0x65, 0x74, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x25, 0x0a, 0x06, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x71,
	0x52, 0x06, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x22, 0x22, 0x0a, 0x10, 0x4a, 0x6f, 0x62, 0x47,
	0x65, 0x74, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2f, 0x0a, 0x11,
	0x4a, 0x6f, 0x62, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1a, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08,
	0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x22, 0x39, 0x0a,
	0x11, 0x4a, 0x6f, 0x62, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x24, 0x0a, 0x01, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x72, 0x69,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x01, 0x72, 0x22, 0x35, 0x0a, 0x12, 0x4a, 0x6f, 0x62, 0x47,
	0x65, 0x74, 0x4a, 0x6f, 0x62, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f,
	0x0a, 0x04, 0x6a, 0x6f, 0x62, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6a,
	0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x65, 0x71, 0x52, 0x04, 0x6a, 0x6f, 0x62, 0x73, 0x22,
	0x3d, 0x0a, 0x15, 0x4a, 0x6f, 0x62, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x01, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x01, 0x72, 0x22, 0x2e,
	0x0a, 0x16, 0x4a, 0x6f, 0x62, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x22, 0x31,
	0x0a, 0x13, 0x4a, 0x6f, 0x62, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x08, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x03, 0x6a, 0x6f,
	0x62, 0x22, 0x3d, 0x0a, 0x14, 0x4a, 0x6f, 0x62, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x79, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x06, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6a, 0x6f, 0x62, 0x2e,
	0x4c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x71, 0x52, 0x06, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73,
	0x22, 0x89, 0x01, 0x0a, 0x1a, 0x4a, 0x6f, 0x62, 0x47, 0x65, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x6a,
	0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x12, 0x1d, 0x0a, 0x0a, 0x6c,
	0x61, 0x73, 0x74, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x30, 0x0a, 0x0c, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x71, 0x52,
	0x0b, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0xa0, 0x01, 0x0a,
	0x1b, 0x4a, 0x6f, 0x62, 0x47, 0x65, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x46, 0x72,
	0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x6a, 0x6f,
	0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x0e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x66, 0x72,
	0x61, 0x6d, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6a, 0x6f, 0x62,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x71,
	0x52, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x22,
	0x3c, 0x0a, 0x1e, 0x4a, 0x6f, 0x62, 0x47, 0x65, 0x74, 0x57, 0x68, 0x61, 0x74, 0x44, 0x65, 0x70,
	0x65, 0x6e, 0x64, 0x73, 0x4f, 0x6e, 0x54, 0x68, 0x69, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1a, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08,
	0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x22, 0x4e, 0x0a,
	0x1f, 0x4a, 0x6f, 0x62, 0x47, 0x65, 0x74, 0x57, 0x68, 0x61, 0x74, 0x44, 0x65, 0x70, 0x65, 0x6e,
	0x64, 0x73, 0x4f, 0x6e, 0x54, 0x68, 0x69, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2b, 0x0a, 0x07, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x2e, 0x44, 0x65, 0x70, 0x65, 0x6e,
	0x64, 0x53, 0x65, 0x71, 0x52, 0x07, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x22, 0x3c, 0x0a,
	0x1e, 0x4a, 0x6f, 0x62, 0x47, 0x65, 0x74, 0x57, 0x68, 0x61, 0x74, 0x54, 0x68, 0x69, 0x73, 0x44,
	0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x4f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x6a,
	0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x22, 0x4e, 0x0a, 0x1f, 0x4a,
	0x6f, 0x62, 0x47, 0x65, 0x74, 0x57, 0x68, 0x61, 0x74, 0x54, 0x68, 0x69, 0x73, 0x44, 0x65, 0x70,
	0x65, 0x6e, 0x64, 0x73, 0x4f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b,
	0x0a, 0x07, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x2e, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x53,
	0x65, 0x71, 0x52, 0x07, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x22, 0x2c, 0x0a, 0x16, 0x4a,
	0x6f, 0x62, 0x49, 0x73, 0x4a, 0x6f, 0x62, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x2f, 0x0a, 0x17, 0x4a, 0x6f, 0x62,
	0x49, 0x73, 0x4a, 0x6f, 0x62, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2c, 0x0a, 0x0e, 0x4a, 0x6f,
	0x62, 0x4b, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x03,
	0x6a, 0x6f, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x6a, 0x6f, 0x62, 0x2e,
	0x4a, 0x6f, 0x62, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x22, 0x11, 0x0a, 0x0f, 0x4a, 0x6f, 0x62, 0x4b,
	0x69, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5e, 0x0a, 0x14, 0x4a,
	0x6f, 0x62, 0x4b, 0x69, 0x6c, 0x6c, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x08, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x12,
	0x2a, 0x0a, 0x03, 0x72, 0x65, 0x71, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6a,
	0x6f, 0x62, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x72,
	0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x03, 0x72, 0x65, 0x71, 0x22, 0x17, 0x0a, 0x15, 0x4a,
	0x6f, 0x62, 0x4b, 0x69, 0x6c, 0x6c, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2a, 0x0a, 0x14, 0x4a, 0x6f, 0x62, 0x4c, 0x61, 0x75, 0x6e, 0x63,
	0x68, 0x53, 0x70, 0x65, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x70, 0x65, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63,
	0x22, 0x2d, 0x0a, 0x15, 0x4a, 0x6f, 0x62, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x53, 0x70, 0x65,
	0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x22,
	0x31, 0x0a, 0x1b, 0x4a, 0x6f, 0x62, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x53, 0x70, 0x65, 0x63,
	0x41, 0x6e, 0x64, 0x57, 0x61, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x70,
	0x65, 0x63, 0x22, 0x3f, 0x0a, 0x1c, 0x4a, 0x6f, 0x62, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x53,
	0x70, 0x65, 0x63, 0x41, 0x6e, 0x64, 0x57, 0x61, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1f, 0x0a, 0x04, 0x6a, 0x6f, 0x62, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x65, 0x71, 0x52, 0x04, 0x6a,
	0x6f, 0x62, 0x73, 0x22, 0x61, 0x0a, 0x17, 0x4a, 0x6f, 0x62, 0x4d, 0x61, 0x72, 0x6b, 0x41, 0x73,
	0x57, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x6a, 0x6f,
	0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x12, 0x2a, 0x0a, 0x03, 0x72, 0x65,
	0x71, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x46, 0x72,
	0x61, 0x6d, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x52, 0x03, 0x72, 0x65, 0x71, 0x22, 0x1a, 0x0a, 0x18, 0x4a, 0x6f, 0x62, 0x4d, 0x61, 0x72,
	0x6b, 0x41, 0x73, 0x57, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x62, 0x0a, 0x18, 0x4a, 0x6f, 0x62, 0x4d, 0x61, 0x72, 0x6b, 0x44, 0x6f, 0x6e,
	0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x6a, 0x6f,
	0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x12, 0x2a, 0x0a, 0x03, 0x72, 0x65,
	0x71, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x46, 0x72,
	0x61, 0x6d, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x52, 0x03, 0x72, 0x65, 0x71, 0x22, 0x1b, 0x0a, 0x19, 0x4a, 0x6f, 0x62, 0x4d, 0x61, 0x72,
	0x6b, 0x44, 0x6f, 0x6e, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x2d, 0x0a, 0x0f, 0x4a, 0x6f, 0x62, 0x50, 0x61, 0x75, 0x73, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x03, 0x6a,
	0x6f, 0x62, 0x22, 0x12, 0x0a, 0x10, 0x4a, 0x6f, 0x62, 0x50, 0x61, 0x75, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6d, 0x0a, 0x17, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1a, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08,
	0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x12, 0x14, 0x0a,
	0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x61,
	0x6e, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x05,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x1a, 0x0a, 0x18, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x2e, 0x0a, 0x10, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x08, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x03, 0x6a, 0x6f,
	0x62, 0x22, 0x13, 0x0a, 0x11, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5f, 0x0a, 0x15, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x74,
	0x72, 0x79, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x6a,
	0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x12, 0x2a, 0x0a, 0x03, 0x72,
	0x65, 0x71, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x46,
	0x72, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x52, 0x03, 0x72, 0x65, 0x71, 0x22, 0x18, 0x0a, 0x16, 0x4a, 0x6f, 0x62, 0x52, 0x65,
	0x74, 0x72, 0x79, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x32, 0x0a, 0x14, 0x4a, 0x6f, 0x62, 0x52, 0x75, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x03, 0x6a, 0x6f, 0x62,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62,
	0x52, 0x03, 0x6a, 0x6f, 0x62, 0x22, 0x17, 0x0a, 0x15, 0x4a, 0x6f, 0x62, 0x52, 0x75, 0x6e, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x48,
	0x0a, 0x14, 0x4a, 0x6f, 0x62, 0x53, 0x65, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x45, 0x61, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x03, 0x6a,
	0x6f, 0x62, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x17, 0x0a, 0x15, 0x4a, 0x6f, 0x62, 0x53,
	0x65, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x45, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x4b, 0x0a, 0x12, 0x4a, 0x6f, 0x62, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x03,
	0x6a, 0x6f, 0x62, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x15,
	0x0a, 0x13, 0x4a, 0x6f, 0x62, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x45, 0x0a, 0x15, 0x4a, 0x6f, 0x62, 0x53, 0x65, 0x74, 0x4d,
	0x61, 0x78, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x6a, 0x6f,
	0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x61,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0x18, 0x0a, 0x16,
	0x4a, 0x6f, 0x62, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x78, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x44, 0x0a, 0x14, 0x4a, 0x6f, 0x62, 0x53, 0x65, 0x74,
	0x4d, 0x61, 0x78, 0x47, 0x70, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x6a, 0x6f,
	0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x61,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0x17, 0x0a, 0x15,
	0x4a, 0x6f, 0x62, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x78, 0x47, 0x70, 0x75, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x56, 0x0a, 0x17, 0x4a, 0x6f, 0x62, 0x53, 0x65, 0x74, 0x4d,
	0x61, 0x78, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e,
	0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x12, 0x1f, 0x0a, 0x0b,
	0x6d, 0x61, 0x78, 0x5f, 0x72, 0x65, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x6d, 0x61, 0x78, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x73, 0x22, 0x1a, 0x0a,
	0x18, 0x4a, 0x6f, 0x62, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x78, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x45, 0x0a, 0x15, 0x4a, 0x6f, 0x62,
	0x53, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1a, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x08, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x12, 0x10,
	0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x76, 0x61, 0x6c,
	0x22, 0x18, 0x0a, 0x16, 0x4a, 0x6f, 0x62, 0x53, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x43, 0x6f, 0x72,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x44, 0x0a, 0x14, 0x4a, 0x6f,
	0x62, 0x53, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x47, 0x70, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1a, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x08, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x12, 0x10,
	0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x76, 0x61, 0x6c,
	0x22, 0x17, 0x0a, 0x15, 0x4a, 0x6f, 0x62, 0x53, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x47, 0x70, 0x75,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x45, 0x0a, 0x15, 0x4a, 0x6f, 0x62,
	0x53, 0x65, 0x74, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1a, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x08, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x12, 0x10,
	0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x76, 0x61, 0x6c,
	0x22, 0x18, 0x0a, 0x16, 0x4a, 0x6f, 0x62, 0x53, 0x65, 0x74, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3b, 0x0a, 0x1d, 0x4a, 0x6f,
	0x62, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x49, 0x66, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x03, 0x6a,
	0x6f, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a,
	0x6f, 0x62, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x22, 0x20, 0x0a, 0x1e, 0x4a, 0x6f, 0x62, 0x53, 0x68,
	0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x49, 0x66, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x65, 0x0a, 0x17, 0x4a, 0x6f, 0x62,
	0x53, 0x74, 0x61, 0x67, 0x67, 0x65, 0x72, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x08, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x03, 0x6a, 0x6f, 0x62,
	0x12, 0x14, 0x0a, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x67, 0x67, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x74, 0x61, 0x67, 0x67, 0x65, 0x72,
	0x22, 0x1a, 0x0a, 0x18, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x67, 0x67, 0x65, 0x72, 0x46, 0x72,
	0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x53, 0x0a, 0x14,
	0x4c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x64, 0x64, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52,
	0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x49,
	0x64, 0x22, 0x17, 0x0a, 0x15, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x64, 0x64, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x89, 0x02, 0x0a, 0x1e, 0x4c,
	0x61, 0x79, 0x65, 0x72, 0x41, 0x64, 0x64, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x50, 0x61, 0x72,
	0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a,
	0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6a,
	0x6f, 0x62, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68,
	0x6f, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x12, 0x1b, 0x0a,
	0x09, 0x6d, 0x61, 0x78, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61,
	0x78, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x6d, 0x61, 0x78, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x61, 0x78,
	0x5f, 0x67, 0x70, 0x75, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0c, 0x6d, 0x61, 0x78, 0x47, 0x70, 0x75, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6d,
	0x61, 0x78, 0x5f, 0x67, 0x70, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d,
	0x61, 0x78, 0x47, 0x70, 0x75, 0x73, 0x22, 0x6e, 0x0a, 0x1f, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x41,
	0x64, 0x64, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x10, 0x72, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x50, 0x61, 0x72,
	0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x65, 0x0a, 0x1f, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x4f, 0x6e, 0x46, 0x72, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x05, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c,
	0x61, 0x79, 0x65, 0x72, 0x52, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x05, 0x66,
	0x72, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6a, 0x6f, 0x62,
	0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x05, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x22, 0x4a, 0x0a,
	0x20, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x65,
	0x6e, 0x64, 0x4f, 0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x26, 0x0a, 0x06, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x2e, 0x44, 0x65, 0x70, 0x65, 0x6e,
	0x64, 0x52, 0x06, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x22, 0x5d, 0x0a, 0x1d, 0x4c, 0x61, 0x79,
	0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x4f, 0x6e,
	0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x05, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e,
	0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x03,
	0x6a, 0x6f, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x6a, 0x6f, 0x62, 0x2e,
	0x4a, 0x6f, 0x62, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x22, 0x48, 0x0a, 0x1e, 0x4c, 0x61, 0x79, 0x65,
	0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x4f, 0x6e, 0x4a,
	0x6f, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x06, 0x64, 0x65,
	0x70, 0x65, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x64, 0x65, 0x70,
	0x65, 0x6e, 0x64, 0x2e, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x52, 0x06, 0x64, 0x65, 0x70, 0x65,
	0x6e, 0x64, 0x22, 0x77, 0x0a, 0x1f, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x4f, 0x6e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72,
	0x52, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x0f, 0x64, 0x65, 0x70, 0x65, 0x6e,
	0x64, 0x5f, 0x6f, 0x6e, 0x5f, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x0d, 0x64, 0x65,
	0x70, 0x65, 0x6e, 0x64, 0x4f, 0x6e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x22, 0x4a, 0x0a, 0x20, 0x4c,
	0x61, 0x79, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64,
	0x4f, 0x6e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x26, 0x0a, 0x06, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x2e, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x52,
	0x06, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x22, 0x94, 0x01, 0x0a, 0x24, 0x4c, 0x61, 0x79, 0x65,
	0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x42, 0x79, 0x46, 0x72,
	0x61, 0x6d, 0x65, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x20, 0x0a, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x05, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x12, 0x2d, 0x0a, 0x0c, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x5f, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c,
	0x61, 0x79, 0x65, 0x72, 0x52, 0x0b, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x4c, 0x61, 0x79, 0x65,
	0x72, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x6e, 0x79, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x61, 0x6e, 0x79, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x22, 0x4f,
	0x0a, 0x25, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x72, 0x61,
	0x6d, 0x65, 0x42, 0x79, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x06, 0x64, 0x65, 0x70, 0x65, 0x6e,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64,
	0x2e, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x52, 0x06, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x22,
	0x69, 0x0a, 0x17, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x72, 0x6f, 0x70, 0x44, 0x65, 0x70, 0x65,
	0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x05, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e,
	0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x06,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x64,
	0x65, 0x70, 0x65, 0x6e, 0x64, 0x2e, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0x1a, 0x0a, 0x18, 0x4c, 0x61,
	0x79, 0x65, 0x72, 0x44, 0x72, 0x6f, 0x70, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x54, 0x0a, 0x15, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x44,
	0x72, 0x6f, 0x70, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x20, 0x0a, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x05, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x49, 0x64, 0x22, 0x18, 0x0a, 0x16,
	0x4c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x72, 0x6f, 0x70, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x39, 0x0a, 0x15, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x45,
	0x61, 0x74, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x20, 0x0a, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x05, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x22, 0x18, 0x0a, 0x16, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x45, 0x61, 0x74, 0x46, 0x72, 0x61,
	0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5b, 0x0a, 0x21, 0x4c,
	0x61, 0x79, 0x65, 0x72, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79,
	0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x20, 0x0a, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x05, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x24, 0x0a, 0x22, 0x4c, 0x61, 0x79, 0x65,
	0x72, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x4f, 0x70, 0x74,
	0x69, 0x6d, 0x69, 0x7a, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3f,
	0x0a, 0x15, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x46, 0x69, 0x6e, 0x64, 0x4c, 0x61, 0x79, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x22,
	0x3a, 0x0a, 0x16, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x46, 0x69, 0x6e, 0x64, 0x4c, 0x61, 0x79, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x05, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c,
	0x61, 0x79, 0x65, 0x72, 0x52, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x22, 0x61, 0x0a, 0x15, 0x4c,
	0x61, 0x79, 0x65, 0x72, 0x47, 0x65, 0x74, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52,
	0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x01, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x01, 0x73, 0x22, 0x3f,
	0x0a, 0x16, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x65, 0x74, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x06, 0x66, 0x72, 0x61, 0x6d,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x46,
	0x72, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x71, 0x52, 0x06, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x22,
	0x26, 0x0a, 0x14, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x79, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x39, 0x0a, 0x15, 0x4c, 0x61, 0x79, 0x65, 0x72,
	0x47, 0x65, 0x74, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x20, 0x0a, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x05, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x22, 0x39, 0x0a, 0x15, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x65, 0x74, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x05, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6a, 0x6f, 0x62,
	0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x22, 0x3e, 0x0a,
	0x16, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x06, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x2e,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x06, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x22, 0x3e, 0x0a,
	0x1a, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x50,
	0x61, 0x74, 0x68, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x05, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6a, 0x6f, 0x62,
	0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x22, 0x40, 0x0a,
	0x1b, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x50,
	0x61, 0x74, 0x68, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0b, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x50, 0x61, 0x74, 0x68, 0x73, 0x22,
	0x44, 0x0a, 0x20, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x65, 0x74, 0x57, 0x68, 0x61, 0x74, 0x44,
	0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x4f, 0x6e, 0x54, 0x68, 0x69, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x05,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x22, 0x50, 0x0a, 0x21, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x65,
	0x74, 0x57, 0x68, 0x61, 0x74, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x4f, 0x6e, 0x54, 0x68,
	0x69, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x07, 0x64, 0x65,
	0x70, 0x65, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x64, 0x65,
	0x70, 0x65, 0x6e, 0x64, 0x2e, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x53, 0x65, 0x71, 0x52, 0x07,
	0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x22, 0x44, 0x0a, 0x20, 0x4c, 0x61, 0x79, 0x65, 0x72,
	0x47, 0x65, 0x74, 0x57, 0x68, 0x61, 0x74, 0x54, 0x68, 0x69, 0x73, 0x44, 0x65, 0x70, 0x65, 0x6e,
	0x64, 0x73, 0x4f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x05, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6a, 0x6f, 0x62,
	0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x22, 0x50, 0x0a,
	0x21, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x65, 0x74, 0x57, 0x68, 0x61, 0x74, 0x54, 0x68, 0x69,
	0x73, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x4f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2b, 0x0a, 0x07, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x2e, 0x44, 0x65, 0x70,
	0x65, 0x6e, 0x64, 0x53, 0x65, 0x71, 0x52, 0x07, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x22,
	0x3a, 0x0a, 0x16, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x4b, 0x69, 0x6c, 0x6c, 0x46, 0x72, 0x61, 0x6d,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x05, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c,
	0x61, 0x79, 0x65, 0x72, 0x52, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x22, 0x19, 0x0a, 0x17, 0x4c,
	0x61, 0x79, 0x65, 0x72, 0x4b, 0x69, 0x6c, 0x6c, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3e, 0x0a, 0x1a, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x4d,
	0x61, 0x72, 0x6b, 0x64, 0x6f, 0x6e, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52,
	0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x22, 0x1d, 0x0a, 0x1b, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x4d,
	0x61, 0x72, 0x6b, 0x64, 0x6f, 0x6e, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3b, 0x0a, 0x17, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65,
	0x74, 0x72, 0x79, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x20, 0x0a, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x05, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x22, 0x1a, 0x0a, 0x18, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x74, 0x72, 0x79,
	0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x56,
	0x0a, 0x1e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x20, 0x0a, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x05, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x22, 0x21, 0x0a, 0x1f, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x50, 0x61, 0x74,
	0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x75, 0x0a, 0x19, 0x4c, 0x61, 0x79,
	0x65, 0x72, 0x52, 0x65, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c, 0x61, 0x79, 0x65,
	0x72, 0x52, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x61, 0x6e, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x20,
	0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0a, 0x2e,
	0x6a, 0x6f, 0x62, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x22, 0x1c, 0x0a, 0x1a, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x51,
	0x0a, 0x17, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x78, 0x43, 0x6f, 0x72,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x05, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c,
	0x61, 0x79, 0x65, 0x72, 0x52, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x63, 0x6f, 0x72, 0x65,
	0x73, 0x22, 0x1a, 0x0a, 0x18, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x78,
	0x43, 0x6f, 0x72, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x51, 0x0a,
	0x17, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x43, 0x6f, 0x72, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x05, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c, 0x61,
	0x79, 0x65, 0x72, 0x52, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x63, 0x6f, 0x72, 0x65, 0x73,
	0x22, 0x1a, 0x0a, 0x18, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x43,
	0x6f, 0x72, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x53, 0x0a, 0x15,
	0x4c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x47, 0x70, 0x75, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72,
	0x42, 0x02, 0x18, 0x01, 0x52, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x03, 0x67,
	0x70, 0x75, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x18, 0x01, 0x52, 0x03, 0x67, 0x70,
	0x75, 0x22, 0x18, 0x0a, 0x16, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x74, 0x4d, 0x69, 0x6e,
	0x47, 0x70, 0x75, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x55, 0x0a, 0x16, 0x4c,
	0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x78, 0x47, 0x70, 0x75, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72,
	0x52, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x5f, 0x67,
	0x70, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x47, 0x70,
	0x75, 0x73, 0x22, 0x19, 0x0a, 0x17, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x74, 0x4d, 0x61,
	0x78, 0x47, 0x70, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x55, 0x0a,
	0x16, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x47, 0x70, 0x75, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c, 0x61, 0x79,
	0x65, 0x72, 0x52, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x69, 0x6e,
	0x5f, 0x67, 0x70, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x69, 0x6e,
	0x47, 0x70, 0x75, 0x73, 0x22, 0x19, 0x0a, 0x17, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x74,
	0x4d, 0x69, 0x6e, 0x47, 0x70, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x5e, 0x0a, 0x1b, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x47, 0x70,
	0x75, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20,
	0x0a, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x6a, 0x6f, 0x62, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x70, 0x75, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x67, 0x70, 0x75, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x22,
	0x1e, 0x0a, 0x1c, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x47, 0x70,
	0x75, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x54, 0x0a, 0x18, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x4d, 0x65,
	0x6d, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x05, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6a, 0x6f, 0x62,
	0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x16, 0x0a,
	0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6d,
	0x65, 0x6d, 0x6f, 0x72, 0x79, 0x22, 0x1b, 0x0a, 0x19, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65,
	0x74, 0x4d, 0x69, 0x6e, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x4b, 0x0a, 0x13, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x74, 0x54, 0x61,
	0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x05, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c,
	0x61, 0x79, 0x65, 0x72, 0x52, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x61, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22,
	0x16, 0x0a, 0x14, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x74, 0x54, 0x61, 0x67, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5d, 0x0a, 0x19, 0x4c, 0x61, 0x79, 0x65, 0x72,
	0x53, 0x65, 0x74, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52,
	0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64,
	0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x74, 0x68, 0x72, 0x65,
	0x61, 0x64, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x1c, 0x0a, 0x1a, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x53,
	0x65, 0x74, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x54, 0x0a, 0x16, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20,
	0x0a, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x6a, 0x6f, 0x62, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x22, 0x19, 0x0a, 0x17, 0x4c, 0x61,
	0x79, 0x65, 0x72, 0x53, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5e, 0x0a, 0x19, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x4c, 0x4c, 0x55, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x20, 0x0a, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x05, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f,
	0x6c, 0x6c, 0x75, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x4c, 0x6c, 0x75, 0x22, 0x1c, 0x0a, 0x1a, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x4c, 0x4c, 0x55, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x6d, 0x0a, 0x19, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x67,
	0x67, 0x65, 0x72, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x20, 0x0a, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x05, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x67,
	0x67, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x74, 0x61, 0x67, 0x67,
	0x65, 0x72, 0x22, 0x1c, 0x0a, 0x1a, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x67, 0x67,
	0x65, 0x72, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2a, 0x47, 0x0a, 0x0f, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0b,
	0x0a, 0x07, 0x43, 0x4f, 0x50, 0x59, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x43,
	0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x03, 0x2a, 0x43, 0x0a, 0x0f, 0x46, 0x72, 0x61,
	0x6d, 0x65, 0x45, 0x78, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07,
	0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0d, 0x46, 0x41, 0x49,
	0x4c, 0x45, 0x44, 0x5f, 0x4c, 0x41, 0x55, 0x4e, 0x43, 0x48, 0x10, 0x80, 0x02, 0x12, 0x0f, 0x0a,
	0x0a, 0x53, 0x4b, 0x49, 0x50, 0x5f, 0x52, 0x45, 0x54, 0x52, 0x59, 0x10, 0x9e, 0x02, 0x2a, 0x71,
	0x0a, 0x0a, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0b, 0x0a, 0x07,
	0x57, 0x41, 0x49, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x45, 0x54,
	0x55, 0x50, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10,
	0x02, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x55, 0x43, 0x43, 0x45, 0x45, 0x44, 0x45, 0x44, 0x10, 0x03,
	0x12, 0x0a, 0x0a, 0x06, 0x44, 0x45, 0x50, 0x45, 0x4e, 0x44, 0x10, 0x04, 0x12, 0x08, 0x0a, 0x04,
	0x44, 0x45, 0x41, 0x44, 0x10, 0x05, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x41, 0x54, 0x45, 0x4e, 0x10,
	0x06, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x48, 0x45, 0x43, 0x4b, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x10,
	0x07, 0x2a, 0x4c, 0x0a, 0x08, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0b, 0x0a,
	0x07, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x46, 0x49,
	0x4e, 0x49, 0x53, 0x48, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x54, 0x41, 0x52,
	0x54, 0x55, 0x50, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x48, 0x55, 0x54, 0x44, 0x4f, 0x57,
	0x4e, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x4f, 0x53, 0x54, 0x45, 0x44, 0x10, 0x04, 0x2a,
	0x34, 0x0a, 0x09, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x07, 0x0a, 0x03,
	0x50, 0x52, 0x45, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x50, 0x4f, 0x53, 0x54, 0x10, 0x01, 0x12,
	0x0a, 0x0a, 0x06, 0x52, 0x45, 0x4e, 0x44, 0x45, 0x52, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x55,
	0x54, 0x49, 0x4c, 0x10, 0x03, 0x2a, 0x29, 0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x09,
	0x0a, 0x05, 0x46, 0x49, 0x52, 0x53, 0x54, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x41, 0x53,
	0x54, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x45, 0x56, 0x45, 0x52, 0x53, 0x45, 0x10, 0x02,
	0x32, 0xcb, 0x0a, 0x0a, 0x0e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x12, 0x5f, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x2e, 0x6a, 0x6f, 0x62, 0x2e,
	0x46, 0x72, 0x61, 0x6d, 0x65, 0x41, 0x64, 0x64, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x50, 0x61,
	0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24,
	0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x41, 0x64, 0x64, 0x52, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6e, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65,
	0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x4f, 0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12,
	0x28, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x4f, 0x6e, 0x46, 0x72, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x6a, 0x6f, 0x62, 0x2e,
	0x46, 0x72, 0x61, 0x6d, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x65, 0x6e,
	0x64, 0x65, 0x6e, 0x63, 0x79, 0x4f, 0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x68, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65,
	0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x4f, 0x6e, 0x4a, 0x6f, 0x62, 0x12, 0x26, 0x2e,
	0x6a, 0x6f, 0x62, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44,
	0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x4f, 0x6e, 0x4a, 0x6f, 0x62, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x46, 0x72, 0x61, 0x6d,
	0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63,
	0x79, 0x4f, 0x6e, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6e,
	0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e,
	0x63, 0x79, 0x4f, 0x6e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x28, 0x2e, 0x6a, 0x6f, 0x62, 0x2e,
	0x46, 0x72, 0x61, 0x6d, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x65, 0x6e,
	0x64, 0x65, 0x6e, 0x63, 0x79, 0x4f, 0x6e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x4f,
	0x6e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a,
	0x0a, 0x0b, 0x44, 0x72, 0x6f, 0x70, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x12, 0x1c, 0x2e,
	0x6a, 0x6f, 0x62, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x44, 0x72, 0x6f, 0x70, 0x44, 0x65, 0x70,
	0x65, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6a, 0x6f,
	0x62, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x44, 0x72, 0x6f, 0x70, 0x44, 0x65, 0x70, 0x65, 0x6e,
	0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x03, 0x45, 0x61,
	0x74, 0x12, 0x14, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x45, 0x61, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x46, 0x72,
	0x61, 0x6d, 0x65, 0x45, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44,
	0x0a, 0x09, 0x46, 0x69, 0x6e, 0x64, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x2e, 0x6a, 0x6f,
	0x62, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x46, 0x69, 0x6e, 0x64, 0x46, 0x72, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x46, 0x72,
	0x61, 0x6d, 0x65, 0x46, 0x69, 0x6e, 0x64, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x46, 0x72, 0x61, 0x6d, 0x65,
	0x12, 0x19, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x47, 0x65, 0x74, 0x46,
	0x72, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6a, 0x6f,
	0x62, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x47, 0x65, 0x74, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x46, 0x72,
	0x61, 0x6d, 0x65, 0x73, 0x12, 0x1a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65,
	0x47, 0x65, 0x74, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1b, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x47, 0x65, 0x74, 0x46,
	0x72, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a,
	0x14, 0x47, 0x65, 0x74, 0x57, 0x68, 0x61, 0x74, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x4f,
	0x6e, 0x54, 0x68, 0x69, 0x73, 0x12, 0x25, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x46, 0x72, 0x61, 0x6d,
	0x65, 0x47, 0x65, 0x74, 0x57, 0x68, 0x61, 0x74, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x4f,
	0x6e, 0x54, 0x68, 0x69, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x6a,
	0x6f, 0x62, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x47, 0x65, 0x74, 0x57, 0x68, 0x61, 0x74, 0x44,
	0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x4f, 0x6e, 0x54, 0x68, 0x69, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x57, 0x68, 0x61, 0x74, 0x54,
	0x68, 0x69, 0x73, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x4f, 0x6e, 0x12, 0x25, 0x2e, 0x6a,
	0x6f, 0x62, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x47, 0x65, 0x74, 0x57, 0x68, 0x61, 0x74, 0x54,
	0x68, 0x69, 0x73, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x4f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x47,
	0x65, 0x74, 0x57, 0x68, 0x61, 0x74, 0x54, 0x68, 0x69, 0x73, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64,
	0x73, 0x4f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x04, 0x4b,
	0x69, 0x6c, 0x6c, 0x12, 0x15, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x4b,
	0x69, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x6a, 0x6f, 0x62,
	0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x4b, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4d, 0x0a, 0x0c, 0x4d, 0x61, 0x72, 0x6b, 0x41, 0x73, 0x44, 0x65, 0x70, 0x65,
	0x6e, 0x64, 0x12, 0x1d, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x4d, 0x61,
	0x72, 0x6b, 0x41, 0x73, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1e, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x4d, 0x61, 0x72,
	0x6b, 0x41, 0x73, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x50, 0x0a, 0x0d, 0x4d, 0x61, 0x72, 0x6b, 0x41, 0x73, 0x57, 0x61, 0x69, 0x74, 0x69,
	0x6e, 0x67, 0x12, 0x1e, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x4d, 0x61,
	0x72, 0x6b, 0x41, 0x73, 0x57, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x4d, 0x61,
	0x72, 0x6b, 0x41, 0x73, 0x57, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x05, 0x52, 0x65, 0x74, 0x72, 0x79, 0x12, 0x16, 0x2e, 0x6a,
	0x6f, 0x62, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a,
	0x12, 0x53, 0x65, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x23, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x53,
	0x65, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x46,
	0x72, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xac,
	0x0c, 0x0a, 0x0e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x12, 0x53, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x1f, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x12, 0x17, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x6a, 0x6f, 0x62, 0x2e,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x09, 0x46, 0x69, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x12, 0x1a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x46, 0x69, 0x6e, 0x64,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x6a,
	0x6f, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x46, 0x69, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x08, 0x47, 0x65, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x19, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x47, 0x65, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x09,
	0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x1a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3e, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x73, 0x12, 0x18, 0x2e,
	0x6a, 0x6f, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x53, 0x0a, 0x0e, 0x52, 0x65, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x12, 0x1f, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x65, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x65, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x0c, 0x52, 0x65, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x4a, 0x6f, 0x62, 0x73, 0x12, 0x1d, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4a, 0x6f, 0x62, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4a, 0x6f, 0x62, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a, 0x15, 0x53, 0x65, 0x74, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x4a, 0x6f, 0x62, 0x4d, 0x61, 0x78, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x12,
	0x22, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x74, 0x44, 0x65,
	0x66, 0x4a, 0x6f, 0x62, 0x4d, 0x61, 0x78, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53,
	0x65, 0x74, 0x44, 0x65, 0x66, 0x4a, 0x6f, 0x62, 0x4d, 0x61, 0x78, 0x43, 0x6f, 0x72, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a, 0x15, 0x53, 0x65, 0x74, 0x44,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4a, 0x6f, 0x62, 0x4d, 0x69, 0x6e, 0x43, 0x6f, 0x72, 0x65,
	0x73, 0x12, 0x22, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x74,
	0x44, 0x65, 0x66, 0x4a, 0x6f, 0x62, 0x4d, 0x69, 0x6e, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x53, 0x65, 0x74, 0x44, 0x65, 0x66, 0x4a, 0x6f, 0x62, 0x4d, 0x69, 0x6e, 0x43, 0x6f, 0x72,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x14, 0x53, 0x65,
	0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4a, 0x6f, 0x62, 0x4d, 0x61, 0x78, 0x47, 0x70,
	0x75, 0x73, 0x12, 0x21, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65,
	0x74, 0x44, 0x65, 0x66, 0x4a, 0x6f, 0x62, 0x4d, 0x61, 0x78, 0x47, 0x70, 0x75, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x53, 0x65, 0x74, 0x44, 0x65, 0x66, 0x4a, 0x6f, 0x62, 0x4d, 0x61, 0x78, 0x47, 0x70, 0x75,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x14, 0x53, 0x65, 0x74,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4a, 0x6f, 0x62, 0x4d, 0x69, 0x6e, 0x47, 0x70, 0x75,
	0x73, 0x12, 0x21, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x74,
	0x44, 0x65, 0x66, 0x4a, 0x6f, 0x62, 0x4d, 0x69, 0x6e, 0x47, 0x70, 0x75, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x53, 0x65, 0x74, 0x44, 0x65, 0x66, 0x4a, 0x6f, 0x62, 0x4d, 0x69, 0x6e, 0x47, 0x70, 0x75, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a, 0x15, 0x53, 0x65, 0x74, 0x44,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4a, 0x6f, 0x62, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x12, 0x22, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x74,
	0x44, 0x65, 0x66, 0x4a, 0x6f, 0x62, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x53, 0x65, 0x74, 0x44, 0x65, 0x66, 0x4a, 0x6f, 0x62, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0d, 0x53, 0x65,
	0x74, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x2e, 0x6a, 0x6f,
	0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x74, 0x44, 0x65, 0x70, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x53, 0x65, 0x74, 0x44, 0x65, 0x70, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x41, 0x0a, 0x08, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x19, 0x2e, 0x6a,
	0x6f, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0b, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x78, 0x43, 0x6f, 0x72,
	0x65, 0x73, 0x12, 0x1c, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65,
	0x74, 0x4d, 0x61, 0x78, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1d, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x74, 0x4d,
	0x61, 0x78, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4a, 0x0a, 0x0b, 0x53, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x1c,
	0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x74, 0x4d, 0x69, 0x6e,
	0x43, 0x6f, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6a,
	0x6f, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x43, 0x6f,
	0x72, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0a, 0x53,
	0x65, 0x74, 0x4d, 0x61, 0x78, 0x47, 0x70, 0x75, 0x73, 0x12, 0x1b, 0x2e, 0x6a, 0x6f, 0x62, 0x2e,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x78, 0x47, 0x70, 0x75, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x78, 0x47, 0x70, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0a, 0x53, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x47, 0x70,
	0x75, 0x73, 0x12, 0x1b, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65,
	0x74, 0x4d, 0x69, 0x6e, 0x47, 0x70, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1c, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x74, 0x4d, 0x69,
	0x6e, 0x47, 0x70, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a,
	0x07, 0x53, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x87, 0x18,
	0x0a, 0x0c, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12, 0x43,
	0x0a, 0x0a, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x2e, 0x6a,
	0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f,
	0x62, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x2e, 0x6a, 0x6f, 0x62, 0x2e,
	0x4a, 0x6f, 0x62, 0x41, 0x64, 0x64, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x50, 0x61, 0x72, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f,
	0x62, 0x41, 0x64, 0x64, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x50, 0x61, 0x72, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6a, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x4f, 0x6e, 0x46, 0x72, 0x61, 0x6d,
	0x65, 0x12, 0x26, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x4f, 0x6e, 0x46, 0x72, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6a, 0x6f, 0x62, 0x2e,
	0x4a, 0x6f, 0x62, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65,
	0x6e, 0x63, 0x79, 0x4f, 0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x64, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x65,
	0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x4f, 0x6e, 0x4a, 0x6f, 0x62, 0x12, 0x24, 0x2e, 0x6a, 0x6f,
	0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x65, 0x6e,
	0x64, 0x65, 0x6e, 0x63, 0x79, 0x4f, 0x6e, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x25, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x4f, 0x6e, 0x4a, 0x6f, 0x62,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6a, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x4f, 0x6e, 0x4c, 0x61,
	0x79, 0x65, 0x72, 0x12, 0x26, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x4f, 0x6e, 0x4c,
	0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6a, 0x6f,
	0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x65, 0x6e,
	0x64, 0x65, 0x6e, 0x63, 0x79, 0x4f, 0x6e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x0b, 0x44, 0x72, 0x6f, 0x70, 0x44, 0x65, 0x70, 0x65,
	0x6e, 0x64, 0x73, 0x12, 0x1a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x44, 0x72, 0x6f,
	0x70, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1b, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x44, 0x72, 0x6f, 0x70, 0x44, 0x65, 0x70,
	0x65, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x09,
	0x45, 0x61, 0x74, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x18, 0x2e, 0x6a, 0x6f, 0x62, 0x2e,
	0x4a, 0x6f, 0x62, 0x45, 0x61, 0x74, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x45, 0x61, 0x74,
	0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a,
	0x0a, 0x07, 0x46, 0x69, 0x6e, 0x64, 0x4a, 0x6f, 0x62, 0x12, 0x16, 0x2e, 0x6a, 0x6f, 0x62, 0x2e,
	0x4a, 0x6f, 0x62, 0x46, 0x69, 0x6e, 0x64, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x17, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x46, 0x69, 0x6e, 0x64, 0x4a,
	0x6f, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x0b, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e,
	0x4a, 0x6f, 0x62, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x43, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x12, 0x19, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6a, 0x6f,
	0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x44, 0x65,
	0x70, 0x65, 0x6e, 0x64, 0x73, 0x12, 0x19, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x47,
	0x65, 0x74, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70,
	0x65, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x09,
	0x47, 0x65, 0x74, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x18, 0x2e, 0x6a, 0x6f, 0x62, 0x2e,
	0x4a, 0x6f, 0x62, 0x47, 0x65, 0x74, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x47, 0x65, 0x74,
	0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37,
	0x0a, 0x06, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x12, 0x15, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a,
	0x6f, 0x62, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x4a, 0x6f,
	0x62, 0x73, 0x12, 0x16, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x47, 0x65, 0x74, 0x4a,
	0x6f, 0x62, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x6a, 0x6f, 0x62,
	0x2e, 0x4a, 0x6f, 0x62, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x12, 0x1a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x47, 0x65, 0x74, 0x4a,
	0x6f, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b,
	0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x09, 0x47,
	0x65, 0x74, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x18, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a,
	0x6f, 0x62, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x47, 0x65, 0x74, 0x4c,
	0x61, 0x79, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x46, 0x72, 0x61, 0x6d, 0x65,
	0x73, 0x12, 0x1f, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x47, 0x65, 0x74, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x47, 0x65, 0x74, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x57, 0x68, 0x61, 0x74, 0x44,
	0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x4f, 0x6e, 0x54, 0x68, 0x69, 0x73, 0x12, 0x23, 0x2e, 0x6a,
	0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x47, 0x65, 0x74, 0x57, 0x68, 0x61, 0x74, 0x44, 0x65, 0x70,
	0x65, 0x6e, 0x64, 0x73, 0x4f, 0x6e, 0x54, 0x68, 0x69, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x24, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x47, 0x65, 0x74, 0x57, 0x68,
	0x61, 0x74, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x4f, 0x6e, 0x54, 0x68, 0x69, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x57, 0x68,
	0x61, 0x74, 0x54, 0x68, 0x69, 0x73, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x4f, 0x6e, 0x12,
	0x23, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x47, 0x65, 0x74, 0x57, 0x68, 0x61, 0x74,
	0x54, 0x68, 0x69, 0x73, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x4f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x47, 0x65,
	0x74, 0x57, 0x68, 0x61, 0x74, 0x54, 0x68, 0x69, 0x73, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x73,
	0x4f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0c, 0x49, 0x73,
	0x4a, 0x6f, 0x62, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x1b, 0x2e, 0x6a, 0x6f, 0x62,
	0x2e, 0x4a, 0x6f, 0x62, 0x49, 0x73, 0x4a, 0x6f, 0x62, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f,
	0x62, 0x49, 0x73, 0x4a, 0x6f, 0x62, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x04, 0x4b, 0x69, 0x6c, 0x6c, 0x12, 0x13, 0x2e,
	0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x4b, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x14, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x4b, 0x69, 0x6c, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0a, 0x4b, 0x69, 0x6c, 0x6c,
	0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x19, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62,
	0x4b, 0x69, 0x6c, 0x6c, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x4b, 0x69, 0x6c, 0x6c, 0x46,
	0x72, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a,
	0x11, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x53, 0x70, 0x65, 0x63, 0x41, 0x6e, 0x64, 0x57, 0x61,
	0x69, 0x74, 0x12, 0x20, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x4c, 0x61, 0x75, 0x6e,
	0x63, 0x68, 0x53, 0x70, 0x65, 0x63, 0x41, 0x6e, 0x64, 0x57, 0x61, 0x69, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x4c, 0x61,
	0x75, 0x6e, 0x63, 0x68, 0x53, 0x70, 0x65, 0x63, 0x41, 0x6e, 0x64, 0x57, 0x61, 0x69, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0a, 0x4c, 0x61, 0x75, 0x6e, 0x63,
	0x68, 0x53, 0x70, 0x65, 0x63, 0x12, 0x19, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x4c,
	0x61, 0x75, 0x6e, 0x63, 0x68, 0x53, 0x70, 0x65, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68,
	0x53, 0x70, 0x65, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x0d,
	0x4d, 0x61, 0x72, 0x6b, 0x41, 0x73, 0x57, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1c, 0x2e,
	0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x4d, 0x61, 0x72, 0x6b, 0x41, 0x73, 0x57, 0x61, 0x69,
	0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6a, 0x6f,
	0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x4d, 0x61, 0x72, 0x6b, 0x41, 0x73, 0x57, 0x61, 0x69, 0x74, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x0e, 0x4d, 0x61,
	0x72, 0x6b, 0x44, 0x6f, 0x6e, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x1d, 0x2e, 0x6a,
	0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x4d, 0x61, 0x72, 0x6b, 0x44, 0x6f, 0x6e, 0x65, 0x46, 0x72,
	0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6a, 0x6f,
	0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x4d, 0x61, 0x72, 0x6b, 0x44, 0x6f, 0x6e, 0x65, 0x46, 0x72, 0x61,
	0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x05, 0x50,
	0x61, 0x75, 0x73, 0x65, 0x12, 0x14, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x50, 0x61,
	0x75, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x6a, 0x6f, 0x62,
	0x2e, 0x4a, 0x6f, 0x62, 0x50, 0x61, 0x75, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4c, 0x0a, 0x0d, 0x52, 0x65, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x72, 0x61, 0x6d,
	0x65, 0x73, 0x12, 0x1c, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1d, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x37, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x12, 0x15, 0x2e, 0x6a, 0x6f, 0x62, 0x2e,
	0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x0b, 0x52, 0x65, 0x74, 0x72,
	0x79, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x1a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f,
	0x62, 0x52, 0x65, 0x74, 0x72, 0x79, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x74,
	0x72, 0x79, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x43, 0x0a, 0x0a, 0x52, 0x75, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x19,
	0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x75, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e,
	0x4a, 0x6f, 0x62, 0x52, 0x75, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0a, 0x53, 0x65, 0x74, 0x41, 0x75, 0x74, 0x6f,
	0x45, 0x61, 0x74, 0x12, 0x19, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x65, 0x74,
	0x41, 0x75, 0x74, 0x6f, 0x45, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a,
	0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x65, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x45,
	0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x08, 0x53, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x17, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62,
	0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x18, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x0b, 0x53, 0x65, 0x74,
	0x4d, 0x61, 0x78, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x1a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a,
	0x6f, 0x62, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x78, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x65,
	0x74, 0x4d, 0x61, 0x78, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4c, 0x0a, 0x0d, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x78, 0x52, 0x65, 0x74, 0x72, 0x69,
	0x65, 0x73, 0x12, 0x1c, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x65, 0x74, 0x4d,
	0x61, 0x78, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1d, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x78,
	0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x46, 0x0a, 0x0b, 0x53, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x1a,
	0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x43, 0x6f,
	0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x6a, 0x6f, 0x62,
	0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0a, 0x53, 0x65, 0x74, 0x4d, 0x61,
	0x78, 0x47, 0x70, 0x75, 0x73, 0x12, 0x19, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x53,
	0x65, 0x74, 0x4d, 0x61, 0x78, 0x47, 0x70, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x78,
	0x47, 0x70, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0a,
	0x53, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x47, 0x70, 0x75, 0x73, 0x12, 0x19, 0x2e, 0x6a, 0x6f, 0x62,
	0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x47, 0x70, 0x75, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x53,
	0x65, 0x74, 0x4d, 0x69, 0x6e, 0x47, 0x70, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x46, 0x0a, 0x0b, 0x53, 0x65, 0x74, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79,
	0x12, 0x1a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x65, 0x74, 0x50, 0x72, 0x69,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x6a,
	0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x65, 0x74, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x13, 0x53, 0x68, 0x75,
	0x74, 0x64, 0x6f, 0x77, 0x6e, 0x49, 0x66, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x12, 0x22, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f,
	0x77, 0x6e, 0x49, 0x66, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x68,
	0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x49, 0x66, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x0d, 0x53, 0x74, 0x61,
	0x67, 0x67, 0x65, 0x72, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x1c, 0x2e, 0x6a, 0x6f, 0x62,
	0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x67, 0x67, 0x65, 0x72, 0x46, 0x72, 0x61, 0x6d, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a,
	0x6f, 0x62, 0x53, 0x74, 0x61, 0x67, 0x67, 0x65, 0x72, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x8a, 0x16, 0x0a, 0x0e, 0x4c, 0x61, 0x79, 0x65,
	0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12, 0x41, 0x0a, 0x08, 0x41, 0x64,
	0x64, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x19, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c, 0x61, 0x79,
	0x65, 0x72, 0x41, 0x64, 0x64, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x64, 0x64,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a,
	0x12, 0x41, 0x64, 0x64, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x23, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x41,
	0x64, 0x64, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c,
	0x61, 0x79, 0x65, 0x72, 0x41, 0x64, 0x64, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x50, 0x61, 0x72,
	0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66,
	0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e,
	0x63, 0x79, 0x4f, 0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x2e, 0x6a, 0x6f, 0x62, 0x2e,
	0x4c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x65, 0x6e,
	0x64, 0x4f, 0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x25, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x4f, 0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x4f, 0x6e, 0x4a, 0x6f, 0x62, 0x12,
	0x22, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x4f, 0x6e, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x4f, 0x6e, 0x4a, 0x6f, 0x62,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x4f, 0x6e, 0x4c, 0x61,
	0x79, 0x65, 0x72, 0x12, 0x24, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x4f, 0x6e, 0x4c, 0x61, 0x79,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x6a, 0x6f, 0x62, 0x2e,
	0x4c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x65, 0x6e,
	0x64, 0x4f, 0x6e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x75, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x42,
	0x79, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79,
	0x12, 0x29, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x42, 0x79, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x44, 0x65,
	0x70, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x6a, 0x6f,
	0x62, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x72, 0x61,
	0x6d, 0x65, 0x42, 0x79, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0b, 0x44, 0x72, 0x6f, 0x70, 0x44,
	0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x12, 0x1c, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c, 0x61, 0x79,
	0x65, 0x72, 0x44, 0x72, 0x6f, 0x70, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72,
	0x44, 0x72, 0x6f, 0x70, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x09, 0x44, 0x72, 0x6f, 0x70, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x1a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x72, 0x6f, 0x70,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x6a,
	0x6f, 0x62, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x72, 0x6f, 0x70, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x09, 0x45, 0x61, 0x74,
	0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x1a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c, 0x61, 0x79,
	0x65, 0x72, 0x45, 0x61, 0x74, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x45, 0x61,
	0x74, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x68, 0x0a, 0x15, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x4f,
	0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x65, 0x72, 0x12, 0x26, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c,
	0x61, 0x79, 0x65, 0x72, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79,
	0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x27, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x09, 0x46, 0x69, 0x6e,
	0x64, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x1a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c, 0x61, 0x79,
	0x65, 0x72, 0x46, 0x69, 0x6e, 0x64, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x46, 0x69,
	0x6e, 0x64, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x44, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x1a, 0x2e, 0x6a,
	0x6f, 0x62, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x65, 0x74, 0x46, 0x72, 0x61, 0x6d, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c,
	0x61, 0x79, 0x65, 0x72, 0x47, 0x65, 0x74, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x79, 0x65,
	0x72, 0x12, 0x19, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x65, 0x74,
	0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6a,
	0x6f, 0x62, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x79, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x73, 0x12, 0x1a, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c, 0x61, 0x79, 0x65,
	0x72, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1b, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x65, 0x74,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x50, 0x61, 0x74, 0x68, 0x73,
	0x12, 0x1f, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x65, 0x74, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x50, 0x61, 0x74, 0x68, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x20, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x65, 0x74,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x50, 0x61, 0x74, 0x68, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x57, 0x68, 0x61, 0x74, 0x54, 0x68,
	0x69, 0x73, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x4f, 0x6e, 0x12, 0x25, 0x2e, 0x6a, 0x6f,
	0x62, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x65, 0x74, 0x57, 0x68, 0x61, 0x74, 0x54, 0x68,
	0x69, 0x73, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x4f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x26, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x65,
	0x74, 0x57, 0x68, 0x61, 0x74, 0x54, 0x68, 0x69, 0x73, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x73,
	0x4f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x57, 0x68, 0x61, 0x74, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x4f, 0x6e, 0x54, 0x68,
	0x69, 0x73, 0x12, 0x25, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x65,
	0x74, 0x57, 0x68, 0x61, 0x74, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x4f, 0x6e, 0x54, 0x68,
	0x69, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x6a, 0x6f, 0x62, 0x2e,
	0x4c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x65, 0x74, 0x57, 0x68, 0x61, 0x74, 0x44, 0x65, 0x70, 0x65,
	0x6e, 0x64, 0x73, 0x4f, 0x6e, 0x54, 0x68, 0x69, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x47, 0x0a, 0x0a, 0x4b, 0x69, 0x6c, 0x6c, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x12,
	0x1b, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x4b, 0x69, 0x6c, 0x6c, 0x46,
	0x72, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6a,
	0x6f, 0x62, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x4b, 0x69, 0x6c, 0x6c, 0x46, 0x72, 0x61, 0x6d,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x0e, 0x4d, 0x61,
	0x72, 0x6b, 0x64, 0x6f, 0x6e, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x1f, 0x2e, 0x6a,
	0x6f, 0x62, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x4d, 0x61, 0x72, 0x6b, 0x64, 0x6f, 0x6e, 0x65,
	0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e,
	0x6a, 0x6f, 0x62, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x4d, 0x61, 0x72, 0x6b, 0x64, 0x6f, 0x6e,
	0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x5f, 0x0a, 0x12, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x23, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c, 0x61, 0x79, 0x65,
	0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x50,
	0x61, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6a, 0x6f, 0x62,
	0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x50, 0x0a, 0x0d, 0x52, 0x65, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x72, 0x61, 0x6d, 0x65,
	0x73, 0x12, 0x1e, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1f, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0b, 0x52, 0x65, 0x74, 0x72, 0x79, 0x46, 0x72, 0x61, 0x6d, 0x65,
	0x73, 0x12, 0x1c, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x74,
	0x72, 0x79, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1d, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x74, 0x72, 0x79,
	0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a,
	0x0a, 0x0b, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x78, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x1c, 0x2e,
	0x6a, 0x6f, 0x62, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x78, 0x43,
	0x6f, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6a, 0x6f,
	0x62, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x78, 0x43, 0x6f, 0x72,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0b, 0x53, 0x65,
	0x74, 0x4d, 0x69, 0x6e, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x1c, 0x2e, 0x6a, 0x6f, 0x62, 0x2e,
	0x4c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x43, 0x6f, 0x72, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c, 0x61,
	0x79, 0x65, 0x72, 0x53, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0a, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x78,
	0x47, 0x70, 0x75, 0x73, 0x12, 0x1b, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72,
	0x53, 0x65, 0x74, 0x4d, 0x61, 0x78, 0x47, 0x70, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1c, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x74,
	0x4d, 0x61, 0x78, 0x47, 0x70, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x47, 0x0a, 0x0a, 0x53, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x47, 0x70, 0x75, 0x73, 0x12, 0x1b, 0x2e,
	0x6a, 0x6f, 0x62, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x47,
	0x70, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6a, 0x6f, 0x62,
	0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x47, 0x70, 0x75, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x4d,
	0x69, 0x6e, 0x47, 0x70, 0x75, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x20, 0x2e, 0x6a, 0x6f,
	0x62, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x47, 0x70, 0x75,
	0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e,
	0x6a, 0x6f, 0x62, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x47,
	0x70, 0x75, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x44, 0x0a, 0x09, 0x53, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x47, 0x70, 0x75, 0x12, 0x1a, 0x2e,
	0x6a, 0x6f, 0x62, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x47,
	0x70, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x6a, 0x6f, 0x62, 0x2e,
	0x4c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x47, 0x70, 0x75, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x0c, 0x53, 0x65, 0x74, 0x4d, 0x69, 0x6e,
	0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x1d, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c, 0x61, 0x79,
	0x65, 0x72, 0x53, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c, 0x61, 0x79, 0x65,
	0x72, 0x53, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x07, 0x53, 0x65, 0x74, 0x54, 0x61, 0x67, 0x73,
	0x12, 0x18, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x74, 0x54,
	0x61, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6a, 0x6f, 0x62,
	0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x74, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x0d, 0x53, 0x65, 0x74, 0x54, 0x68, 0x72, 0x65,
	0x61, 0x64, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1e, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c, 0x61, 0x79,
	0x65, 0x72, 0x53, 0x65, 0x74, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x61, 0x62, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c, 0x61, 0x79,
	0x65, 0x72, 0x53, 0x65, 0x74, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x61, 0x62, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0a, 0x53, 0x65, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x1b, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c, 0x61, 0x79, 0x65,
	0x72, 0x53, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x50, 0x0a, 0x0d, 0x53, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x4c, 0x4c,
	0x55, 0x12, 0x1e, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x4c, 0x4c, 0x55, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1f, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x4c, 0x4c, 0x55, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x50, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x67, 0x67, 0x65, 0x72, 0x46, 0x72, 0x61,
	0x6d, 0x65, 0x73, 0x12, 0x1e, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x67, 0x67, 0x65, 0x72, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x67, 0x67, 0x65, 0x72, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x32, 0x0a, 0x1d, 0x63, 0x6f, 0x6d, 0x2e, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x2e, 0x73, 0x70, 0x63, 0x75, 0x65, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x6a, 0x6f, 0x62, 0x50, 0x01, 0x5a, 0x0f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6a,
	0x6f, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_OpenCue_proto_job_proto_rawDescOnce sync.Once
	file_OpenCue_proto_job_proto_rawDescData = file_OpenCue_proto_job_proto_rawDesc
)

func file_OpenCue_proto_job_proto_rawDescGZIP() []byte {
	file_OpenCue_proto_job_proto_rawDescOnce.Do(func() {
		file_OpenCue_proto_job_proto_rawDescData = protoimpl.X.CompressGZIP(file_OpenCue_proto_job_proto_rawDescData)
	})
	return file_OpenCue_proto_job_proto_rawDescData
}

var file_OpenCue_proto_job_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_OpenCue_proto_job_proto_msgTypes = make([]protoimpl.MessageInfo, 242)
var file_OpenCue_proto_job_proto_goTypes = []interface{}{
	(CheckpointState)(0),                          // 0: job.CheckpointState
	(FrameExitStatus)(0),                          // 1: job.FrameExitStatus
	(FrameState)(0),                               // 2: job.FrameState
	(JobState)(0),                                 // 3: job.JobState
	(LayerType)(0),                                // 4: job.LayerType
	(Order)(0),                                    // 5: job.Order
	(*Frame)(nil),                                 // 6: job.Frame
	(*FrameSearchCriteria)(nil),                   // 7: job.FrameSearchCriteria
	(*FrameSeq)(nil),                              // 8: job.FrameSeq
	(*FrameStateSeq)(nil),                         // 9: job.FrameStateSeq
	(*UpdatedFrame)(nil),                          // 10: job.UpdatedFrame
	(*UpdatedFrameSeq)(nil),                       // 11: job.UpdatedFrameSeq
	(*UpdatedFrameCheckResult)(nil),               // 12: job.UpdatedFrameCheckResult
	(*Group)(nil),                                 // 13: job.Group
	(*GroupSeq)(nil),                              // 14: job.GroupSeq
	(*GroupStats)(nil),                            // 15: job.GroupStats
	(*Job)(nil),                                   // 16: job.Job
	(*JobSearchCriteria)(nil),                     // 17: job.JobSearchCriteria
	(*JobSeq)(nil),                                // 18: job.JobSeq
	(*JobStats)(nil),                              // 19: job.JobStats
	(*Layer)(nil),                                 // 20: job.Layer
	(*LayerSeq)(nil),                              // 21: job.LayerSeq
	(*LayerStats)(nil),                            // 22: job.LayerStats
	(*NestedGroup)(nil),                           // 23: job.NestedGroup
	(*NestedGroupSeq)(nil),                        // 24: job.NestedGroupSeq
	(*NestedJob)(nil),                             // 25: job.NestedJob
	(*FrameAddRenderPartitionRequest)(nil),        // 26: job.FrameAddRenderPartitionRequest
	(*FrameAddRenderPartitionResponse)(nil),       // 27: job.FrameAddRenderPartitionResponse
	(*FrameCreateDependencyOnFrameRequest)(nil),   // 28: job.FrameCreateDependencyOnFrameRequest
	(*FrameCreateDependencyOnFrameResponse)(nil),  // 29: job.FrameCreateDependencyOnFrameResponse
	(*FrameCreateDependencyOnJobRequest)(nil),     // 30: job.FrameCreateDependencyOnJobRequest
	(*FrameCreateDependencyOnJobResponse)(nil),    // 31: job.FrameCreateDependencyOnJobResponse
	(*FrameCreateDependencyOnLayerRequest)(nil),   // 32: job.FrameCreateDependencyOnLayerRequest
	(*FrameCreateDependencyOnLayerResponse)(nil),  // 33: job.FrameCreateDependencyOnLayerResponse
	(*FrameDropDependsRequest)(nil),               // 34: job.FrameDropDependsRequest
	(*FrameDropDependsResponse)(nil),              // 35: job.FrameDropDependsResponse
	(*FrameEatRequest)(nil),                       // 36: job.FrameEatRequest
	(*FrameEatResponse)(nil),                      // 37: job.FrameEatResponse
	(*FrameFindFrameRequest)(nil),                 // 38: job.FrameFindFrameRequest
	(*FrameFindFrameResponse)(nil),                // 39: job.FrameFindFrameResponse
	(*FrameGetFrameRequest)(nil),                  // 40: job.FrameGetFrameRequest
	(*FrameGetFrameResponse)(nil),                 // 41: job.FrameGetFrameResponse
	(*FrameGetFramesRequest)(nil),                 // 42: job.FrameGetFramesRequest
	(*FrameGetFramesResponse)(nil),                // 43: job.FrameGetFramesResponse
	(*FrameGetWhatDependsOnThisRequest)(nil),      // 44: job.FrameGetWhatDependsOnThisRequest
	(*FrameGetWhatDependsOnThisResponse)(nil),     // 45: job.FrameGetWhatDependsOnThisResponse
	(*FrameGetWhatThisDependsOnRequest)(nil),      // 46: job.FrameGetWhatThisDependsOnRequest
	(*FrameGetWhatThisDependsOnResponse)(nil),     // 47: job.FrameGetWhatThisDependsOnResponse
	(*FrameKillRequest)(nil),                      // 48: job.FrameKillRequest
	(*FrameKillResponse)(nil),                     // 49: job.FrameKillResponse
	(*FrameMarkAsDependRequest)(nil),              // 50: job.FrameMarkAsDependRequest
	(*FrameMarkAsDependResponse)(nil),             // 51: job.FrameMarkAsDependResponse
	(*FrameMarkAsWaitingRequest)(nil),             // 52: job.FrameMarkAsWaitingRequest
	(*FrameMarkAsWaitingResponse)(nil),            // 53: job.FrameMarkAsWaitingResponse
	(*FrameRetryRequest)(nil),                     // 54: job.FrameRetryRequest
	(*FrameRetryResponse)(nil),                    // 55: job.FrameRetryResponse
	(*FrameSetCheckpointStateRequest)(nil),        // 56: job.FrameSetCheckpointStateRequest
	(*FrameSetCheckpointStateResponse)(nil),       // 57: job.FrameSetCheckpointStateResponse
	(*GroupCreateSubGroupRequest)(nil),            // 58: job.GroupCreateSubGroupRequest
	(*GroupCreateSubGroupResponse)(nil),           // 59: job.GroupCreateSubGroupResponse
	(*GroupDeleteRequest)(nil),                    // 60: job.GroupDeleteRequest
	(*GroupDeleteResponse)(nil),                   // 61: job.GroupDeleteResponse
	(*GroupFindGroupRequest)(nil),                 // 62: job.GroupFindGroupRequest
	(*GroupFindGroupResponse)(nil),                // 63: job.GroupFindGroupResponse
	(*GroupGetGroupRequest)(nil),                  // 64: job.GroupGetGroupRequest
	(*GroupGetGroupResponse)(nil),                 // 65: job.GroupGetGroupResponse
	(*GroupGetGroupsRequest)(nil),                 // 66: job.GroupGetGroupsRequest
	(*GroupGetGroupsResponse)(nil),                // 67: job.GroupGetGroupsResponse
	(*GroupGetJobsRequest)(nil),                   // 68: job.GroupGetJobsRequest
	(*GroupGetJobsResponse)(nil),                  // 69: job.GroupGetJobsResponse
	(*GroupReparentGroupsRequest)(nil),            // 70: job.GroupReparentGroupsRequest
	(*GroupReparentGroupsResponse)(nil),           // 71: job.GroupReparentGroupsResponse
	(*GroupReparentJobsRequest)(nil),              // 72: job.GroupReparentJobsRequest
	(*GroupReparentJobsResponse)(nil),             // 73: job.GroupReparentJobsResponse
	(*GroupSetDefJobMaxCoresRequest)(nil),         // 74: job.GroupSetDefJobMaxCoresRequest
	(*GroupSetDefJobMaxCoresResponse)(nil),        // 75: job.GroupSetDefJobMaxCoresResponse
	(*GroupSetDefJobMinCoresRequest)(nil),         // 76: job.GroupSetDefJobMinCoresRequest
	(*GroupSetDefJobMinCoresResponse)(nil),        // 77: job.GroupSetDefJobMinCoresResponse
	(*GroupSetDefJobMaxGpusRequest)(nil),          // 78: job.GroupSetDefJobMaxGpusRequest
	(*GroupSetDefJobMaxGpusResponse)(nil),         // 79: job.GroupSetDefJobMaxGpusResponse
	(*GroupSetDefJobMinGpusRequest)(nil),          // 80: job.GroupSetDefJobMinGpusRequest
	(*GroupSetDefJobMinGpusResponse)(nil),         // 81: job.GroupSetDefJobMinGpusResponse
	(*GroupSetDefJobPriorityRequest)(nil),         // 82: job.GroupSetDefJobPriorityRequest
	(*GroupSetDefJobPriorityResponse)(nil),        // 83: job.GroupSetDefJobPriorityResponse
	(*GroupSetDeptRequest)(nil),                   // 84: job.GroupSetDeptRequest
	(*GroupSetDeptResponse)(nil),                  // 85: job.GroupSetDeptResponse
	(*GroupSetGroupRequest)(nil),                  // 86: job.GroupSetGroupRequest
	(*GroupSetGroupResponse)(nil),                 // 87: job.GroupSetGroupResponse
	(*GroupSetMaxCoresRequest)(nil),               // 88: job.GroupSetMaxCoresRequest
	(*GroupSetMaxCoresResponse)(nil),              // 89: job.GroupSetMaxCoresResponse
	(*GroupSetMinCoresRequest)(nil),               // 90: job.GroupSetMinCoresRequest
	(*GroupSetMinCoresResponse)(nil),              // 91: job.GroupSetMinCoresResponse
	(*GroupSetMaxGpusRequest)(nil),                // 92: job.GroupSetMaxGpusRequest
	(*GroupSetMaxGpusResponse)(nil),               // 93: job.GroupSetMaxGpusResponse
	(*GroupSetMinGpusRequest)(nil),                // 94: job.GroupSetMinGpusRequest
	(*GroupSetMinGpusResponse)(nil),               // 95: job.GroupSetMinGpusResponse
	(*GroupSetNameRequest)(nil),                   // 96: job.GroupSetNameRequest
	(*GroupSetNameResponse)(nil),                  // 97: job.GroupSetNameResponse
	(*JobAddCommentRequest)(nil),                  // 98: job.JobAddCommentRequest
	(*JobAddCommentResponse)(nil),                 // 99: job.JobAddCommentResponse
	(*JobAddRenderPartRequest)(nil),               // 100: job.JobAddRenderPartRequest
	(*JobAddRenderPartResponse)(nil),              // 101: job.JobAddRenderPartResponse
	(*JobCreateDependencyOnFrameRequest)(nil),     // 102: job.JobCreateDependencyOnFrameRequest
	(*JobCreateDependencyOnFrameResponse)(nil),    // 103: job.JobCreateDependencyOnFrameResponse
	(*JobCreateDependencyOnJobRequest)(nil),       // 104: job.JobCreateDependencyOnJobRequest
	(*JobCreateDependencyOnJobResponse)(nil),      // 105: job.JobCreateDependencyOnJobResponse
	(*JobCreateDependencyOnLayerRequest)(nil),     // 106: job.JobCreateDependencyOnLayerRequest
	(*JobCreateDependencyOnLayerResponse)(nil),    // 107: job.JobCreateDependencyOnLayerResponse
	(*JobDropDependsRequest)(nil),                 // 108: job.JobDropDependsRequest
	(*JobDropDependsResponse)(nil),                // 109: job.JobDropDependsResponse
	(*JobEatFramesRequest)(nil),                   // 110: job.JobEatFramesRequest
	(*JobEatFramesResponse)(nil),                  // 111: job.JobEatFramesResponse
	(*JobFindJobRequest)(nil),                     // 112: job.JobFindJobRequest
	(*JobFindJobResponse)(nil),                    // 113: job.JobFindJobResponse
	(*JobGetCommentsRequest)(nil),                 // 114: job.JobGetCommentsRequest
	(*JobGetCommentsResponse)(nil),                // 115: job.JobGetCommentsResponse
	(*JobGetCurrentRequest)(nil),                  // 116: job.JobGetCurrentRequest
	(*JobGetCurrentResponse)(nil),                 // 117: job.JobGetCurrentResponse
	(*JobGetDependsRequest)(nil),                  // 118: job.JobGetDependsRequest
	(*JobGetDependsResponse)(nil),                 // 119: job.JobGetDependsResponse
	(*JobGetFramesRequest)(nil),                   // 120: job.JobGetFramesRequest
	(*JobGetFramesResponse)(nil),                  // 121: job.JobGetFramesResponse
	(*JobGetJobRequest)(nil),                      // 122: job.JobGetJobRequest
	(*JobGetJobResponse)(nil),                     // 123: job.JobGetJobResponse
	(*JobGetJobsRequest)(nil),                     // 124: job.JobGetJobsRequest
	(*JobGetJobsResponse)(nil),                    // 125: job.JobGetJobsResponse
	(*JobGetJobNamesRequest)(nil),                 // 126: job.JobGetJobNamesRequest
	(*JobGetJobNamesResponse)(nil),                // 127: job.JobGetJobNamesResponse
	(*JobGetLayersRequest)(nil),                   // 128: job.JobGetLayersRequest
	(*JobGetLayersResponse)(nil),                  // 129: job.JobGetLayersResponse
	(*JobGetUpdatedFramesRequest)(nil),            // 130: job.JobGetUpdatedFramesRequest
	(*JobGetUpdatedFramesResponse)(nil),           // 131: job.JobGetUpdatedFramesResponse
	(*JobGetWhatDependsOnThisRequest)(nil),        // 132: job.JobGetWhatDependsOnThisRequest
	(*JobGetWhatDependsOnThisResponse)(nil),       // 133: job.JobGetWhatDependsOnThisResponse
	(*JobGetWhatThisDependsOnRequest)(nil),        // 134: job.JobGetWhatThisDependsOnRequest
	(*JobGetWhatThisDependsOnResponse)(nil),       // 135: job.JobGetWhatThisDependsOnResponse
	(*JobIsJobPendingRequest)(nil),                // 136: job.JobIsJobPendingRequest
	(*JobIsJobPendingResponse)(nil),               // 137: job.JobIsJobPendingResponse
	(*JobKillRequest)(nil),                        // 138: job.JobKillRequest
	(*JobKillResponse)(nil),                       // 139: job.JobKillResponse
	(*JobKillFramesRequest)(nil),                  // 140: job.JobKillFramesRequest
	(*JobKillFramesResponse)(nil),                 // 141: job.JobKillFramesResponse
	(*JobLaunchSpecRequest)(nil),                  // 142: job.JobLaunchSpecRequest
	(*JobLaunchSpecResponse)(nil),                 // 143: job.JobLaunchSpecResponse
	(*JobLaunchSpecAndWaitRequest)(nil),           // 144: job.JobLaunchSpecAndWaitRequest
	(*JobLaunchSpecAndWaitResponse)(nil),          // 145: job.JobLaunchSpecAndWaitResponse
	(*JobMarkAsWaitingRequest)(nil),               // 146: job.JobMarkAsWaitingRequest
	(*JobMarkAsWaitingResponse)(nil),              // 147: job.JobMarkAsWaitingResponse
	(*JobMarkDoneFramesRequest)(nil),              // 148: job.JobMarkDoneFramesRequest
	(*JobMarkDoneFramesResponse)(nil),             // 149: job.JobMarkDoneFramesResponse
	(*JobPauseRequest)(nil),                       // 150: job.JobPauseRequest
	(*JobPauseResponse)(nil),                      // 151: job.JobPauseResponse
	(*JobReorderFramesRequest)(nil),               // 152: job.JobReorderFramesRequest
	(*JobReorderFramesResponse)(nil),              // 153: job.JobReorderFramesResponse
	(*JobResumeRequest)(nil),                      // 154: job.JobResumeRequest
	(*JobResumeResponse)(nil),                     // 155: job.JobResumeResponse
	(*JobRetryFramesRequest)(nil),                 // 156: job.JobRetryFramesRequest
	(*JobRetryFramesResponse)(nil),                // 157: job.JobRetryFramesResponse
	(*JobRunFiltersRequest)(nil),                  // 158: job.JobRunFiltersRequest
	(*JobRunFiltersResponse)(nil),                 // 159: job.JobRunFiltersResponse
	(*JobSetAutoEatRequest)(nil),                  // 160: job.JobSetAutoEatRequest
	(*JobSetAutoEatResponse)(nil),                 // 161: job.JobSetAutoEatResponse
	(*JobSetGroupRequest)(nil),                    // 162: job.JobSetGroupRequest
	(*JobSetGroupResponse)(nil),                   // 163: job.JobSetGroupResponse
	(*JobSetMaxCoresRequest)(nil),                 // 164: job.JobSetMaxCoresRequest
	(*JobSetMaxCoresResponse)(nil),                // 165: job.JobSetMaxCoresResponse
	(*JobSetMaxGpusRequest)(nil),                  // 166: job.JobSetMaxGpusRequest
	(*JobSetMaxGpusResponse)(nil),                 // 167: job.JobSetMaxGpusResponse
	(*JobSetMaxRetriesRequest)(nil),               // 168: job.JobSetMaxRetriesRequest
	(*JobSetMaxRetriesResponse)(nil),              // 169: job.JobSetMaxRetriesResponse
	(*JobSetMinCoresRequest)(nil),                 // 170: job.JobSetMinCoresRequest
	(*JobSetMinCoresResponse)(nil),                // 171: job.JobSetMinCoresResponse
	(*JobSetMinGpusRequest)(nil),                  // 172: job.JobSetMinGpusRequest
	(*JobSetMinGpusResponse)(nil),                 // 173: job.JobSetMinGpusResponse
	(*JobSetPriorityRequest)(nil),                 // 174: job.JobSetPriorityRequest
	(*JobSetPriorityResponse)(nil),                // 175: job.JobSetPriorityResponse
	(*JobShutdownIfCompletedRequest)(nil),         // 176: job.JobShutdownIfCompletedRequest
	(*JobShutdownIfCompletedResponse)(nil),        // 177: job.JobShutdownIfCompletedResponse
	(*JobStaggerFramesRequest)(nil),               // 178: job.JobStaggerFramesRequest
	(*JobStaggerFramesResponse)(nil),              // 179: job.JobStaggerFramesResponse
	(*LayerAddLimitRequest)(nil),                  // 180: job.LayerAddLimitRequest
	(*LayerAddLimitResponse)(nil),                 // 181: job.LayerAddLimitResponse
	(*LayerAddRenderPartitionRequest)(nil),        // 182: job.LayerAddRenderPartitionRequest
	(*LayerAddRenderPartitionResponse)(nil),       // 183: job.LayerAddRenderPartitionResponse
	(*LayerCreateDependOnFrameRequest)(nil),       // 184: job.LayerCreateDependOnFrameRequest
	(*LayerCreateDependOnFrameResponse)(nil),      // 185: job.LayerCreateDependOnFrameResponse
	(*LayerCreateDependOnJobRequest)(nil),         // 186: job.LayerCreateDependOnJobRequest
	(*LayerCreateDependOnJobResponse)(nil),        // 187: job.LayerCreateDependOnJobResponse
	(*LayerCreateDependOnLayerRequest)(nil),       // 188: job.LayerCreateDependOnLayerRequest
	(*LayerCreateDependOnLayerResponse)(nil),      // 189: job.LayerCreateDependOnLayerResponse
	(*LayerCreateFrameByFrameDependRequest)(nil),  // 190: job.LayerCreateFrameByFrameDependRequest
	(*LayerCreateFrameByFrameDependResponse)(nil), // 191: job.LayerCreateFrameByFrameDependResponse
	(*LayerDropDependsRequest)(nil),               // 192: job.LayerDropDependsRequest
	(*LayerDropDependsResponse)(nil),              // 193: job.LayerDropDependsResponse
	(*LayerDropLimitRequest)(nil),                 // 194: job.LayerDropLimitRequest
	(*LayerDropLimitResponse)(nil),                // 195: job.LayerDropLimitResponse
	(*LayerEatFramesRequest)(nil),                 // 196: job.LayerEatFramesRequest
	(*LayerEatFramesResponse)(nil),                // 197: job.LayerEatFramesResponse
	(*LayerEnableMemoryOptimizerRequest)(nil),     // 198: job.LayerEnableMemoryOptimizerRequest
	(*LayerEnableMemoryOptimizerResponse)(nil),    // 199: job.LayerEnableMemoryOptimizerResponse
	(*LayerFindLayerRequest)(nil),                 // 200: job.LayerFindLayerRequest
	(*LayerFindLayerResponse)(nil),                // 201: job.LayerFindLayerResponse
	(*LayerGetFramesRequest)(nil),                 // 202: job.LayerGetFramesRequest
	(*LayerGetFramesResponse)(nil),                // 203: job.LayerGetFramesResponse
	(*LayerGetLayerRequest)(nil),                  // 204: job.LayerGetLayerRequest
	(*LayerGetLayerResponse)(nil),                 // 205: job.LayerGetLayerResponse
	(*LayerGetLimitsRequest)(nil),                 // 206: job.LayerGetLimitsRequest
	(*LayerGetLimitsResponse)(nil),                // 207: job.LayerGetLimitsResponse
	(*LayerGetOutputPathsRequest)(nil),            // 208: job.LayerGetOutputPathsRequest
	(*LayerGetOutputPathsResponse)(nil),           // 209: job.LayerGetOutputPathsResponse
	(*LayerGetWhatDependsOnThisRequest)(nil),      // 210: job.LayerGetWhatDependsOnThisRequest
	(*LayerGetWhatDependsOnThisResponse)(nil),     // 211: job.LayerGetWhatDependsOnThisResponse
	(*LayerGetWhatThisDependsOnRequest)(nil),      // 212: job.LayerGetWhatThisDependsOnRequest
	(*LayerGetWhatThisDependsOnResponse)(nil),     // 213: job.LayerGetWhatThisDependsOnResponse
	(*LayerKillFramesRequest)(nil),                // 214: job.LayerKillFramesRequest
	(*LayerKillFramesResponse)(nil),               // 215: job.LayerKillFramesResponse
	(*LayerMarkdoneFramesRequest)(nil),            // 216: job.LayerMarkdoneFramesRequest
	(*LayerMarkdoneFramesResponse)(nil),           // 217: job.LayerMarkdoneFramesResponse
	(*LayerRetryFramesRequest)(nil),               // 218: job.LayerRetryFramesRequest
	(*LayerRetryFramesResponse)(nil),              // 219: job.LayerRetryFramesResponse
	(*LayerRegisterOutputPathRequest)(nil),        // 220: job.LayerRegisterOutputPathRequest
	(*LayerRegisterOutputPathResponse)(nil),       // 221: job.LayerRegisterOutputPathResponse
	(*LayerReorderFramesRequest)(nil),             // 222: job.LayerReorderFramesRequest
	(*LayerReorderFramesResponse)(nil),            // 223: job.LayerReorderFramesResponse
	(*LayerSetMaxCoresRequest)(nil),               // 224: job.LayerSetMaxCoresRequest
	(*LayerSetMaxCoresResponse)(nil),              // 225: job.LayerSetMaxCoresResponse
	(*LayerSetMinCoresRequest)(nil),               // 226: job.LayerSetMinCoresRequest
	(*LayerSetMinCoresResponse)(nil),              // 227: job.LayerSetMinCoresResponse
	(*LayerSetMinGpuRequest)(nil),                 // 228: job.LayerSetMinGpuRequest
	(*LayerSetMinGpuResponse)(nil),                // 229: job.LayerSetMinGpuResponse
	(*LayerSetMaxGpusRequest)(nil),                // 230: job.LayerSetMaxGpusRequest
	(*LayerSetMaxGpusResponse)(nil),               // 231: job.LayerSetMaxGpusResponse
	(*LayerSetMinGpusRequest)(nil),                // 232: job.LayerSetMinGpusRequest
	(*LayerSetMinGpusResponse)(nil),               // 233: job.LayerSetMinGpusResponse
	(*LayerSetMinGpuMemoryRequest)(nil),           // 234: job.LayerSetMinGpuMemoryRequest
	(*LayerSetMinGpuMemoryResponse)(nil),          // 235: job.LayerSetMinGpuMemoryResponse
	(*LayerSetMinMemoryRequest)(nil),              // 236: job.LayerSetMinMemoryRequest
	(*LayerSetMinMemoryResponse)(nil),             // 237: job.LayerSetMinMemoryResponse
	(*LayerSetTagsRequest)(nil),                   // 238: job.LayerSetTagsRequest
	(*LayerSetTagsResponse)(nil),                  // 239: job.LayerSetTagsResponse
	(*LayerSetThreadableRequest)(nil),             // 240: job.LayerSetThreadableRequest
	(*LayerSetThreadableResponse)(nil),            // 241: job.LayerSetThreadableResponse
	(*LayerSetTimeoutRequest)(nil),                // 242: job.LayerSetTimeoutRequest
	(*LayerSetTimeoutResponse)(nil),               // 243: job.LayerSetTimeoutResponse
	(*LayerSetTimeoutLLURequest)(nil),             // 244: job.LayerSetTimeoutLLURequest
	(*LayerSetTimeoutLLUResponse)(nil),            // 245: job.LayerSetTimeoutLLUResponse
	(*LayerStaggerFramesRequest)(nil),             // 246: job.LayerStaggerFramesRequest
	(*LayerStaggerFramesResponse)(nil),            // 247: job.LayerStaggerFramesResponse
	(*renderPartition.RenderPartition)(nil),       // 248: renderPartition.RenderPartition
	(*depend.Depend)(nil),                         // 249: depend.Depend
	(depend.DependTarget)(0),                      // 250: depend.DependTarget
	(*depend.DependSeq)(nil),                      // 251: depend.DependSeq
	(*comment.Comment)(nil),                       // 252: comment.Comment
	(*comment.CommentSeq)(nil),                    // 253: comment.CommentSeq
	(*limit.Limit)(nil),                           // 254: limit.Limit
}
var file_OpenCue_proto_job_proto_depIdxs = []int32{
	2,   // 0: job.Frame.state:type_name -> job.FrameState
	0,   // 1: job.Frame.checkpoint_state:type_name -> job.CheckpointState
	9,   // 2: job.FrameSearchCriteria.states:type_name -> job.FrameStateSeq
	6,   // 3: job.FrameSeq.frames:type_name -> job.Frame
	2,   // 4: job.FrameStateSeq.frame_states:type_name -> job.FrameState
	2,   // 5: job.UpdatedFrame.state:type_name -> job.FrameState
	10,  // 6: job.UpdatedFrameSeq.updated_frames:type_name -> job.UpdatedFrame
	3,   // 7: job.UpdatedFrameCheckResult.state:type_name -> job.JobState
	11,  // 8: job.UpdatedFrameCheckResult.updated_frames:type_name -> job.UpdatedFrameSeq
	15,  // 9: job.Group.group_stats:type_name -> job.GroupStats
	13,  // 10: job.GroupSeq.groups:type_name -> job.Group
	3,   // 11: job.Job.state:type_name -> job.JobState
	19,  // 12: job.Job.job_stats:type_name -> job.JobStats
	16,  // 13: job.JobSeq.jobs:type_name -> job.Job
	4,   // 14: job.Layer.type:type_name -> job.LayerType
	22,  // 15: job.Layer.layer_stats:type_name -> job.LayerStats
	20,  // 16: job.LayerSeq.layers:type_name -> job.Layer
	23,  // 17: job.NestedGroup.parent:type_name -> job.NestedGroup
	24,  // 18: job.NestedGroup.groups:type_name -> job.NestedGroupSeq
	15,  // 19: job.NestedGroup.stats:type_name -> job.GroupStats
	23,  // 20: job.NestedGroupSeq.nested_groups:type_name -> job.NestedGroup
	3,   // 21: job.NestedJob.state:type_name -> job.JobState
	23,  // 22: job.NestedJob.parent:type_name -> job.NestedGroup
	19,  // 23: job.NestedJob.stats:type_name -> job.JobStats
	6,   // 24: job.FrameAddRenderPartitionRequest.frame:type_name -> job.Frame
	248, // 25: job.FrameAddRenderPartitionResponse.render_partition:type_name -> renderPartition.RenderPartition
	6,   // 26: job.FrameCreateDependencyOnFrameRequest.frame:type_name -> job.Frame
	6,   // 27: job.FrameCreateDependencyOnFrameRequest.depend_on_frame:type_name -> job.Frame
	249, // 28: job.FrameCreateDependencyOnFrameResponse.depend:type_name -> depend.Depend
	6,   // 29: job.FrameCreateDependencyOnJobRequest.frame:type_name -> job.Frame
	16,  // 30: job.FrameCreateDependencyOnJobRequest.job:type_name -> job.Job
	249, // 31: job.FrameCreateDependencyOnJobResponse.depend:type_name -> depend.Depend
	6,   // 32: job.FrameCreateDependencyOnLayerRequest.frame:type_name -> job.Frame
	20,  // 33: job.FrameCreateDependencyOnLayerRequest.layer:type_name -> job.Layer
	249, // 34: job.FrameCreateDependencyOnLayerResponse.depend:type_name -> depend.Depend
	6,   // 35: job.FrameDropDependsRequest.frame:type_name -> job.Frame
	250, // 36: job.FrameDropDependsRequest.target:type_name -> depend.DependTarget
	6,   // 37: job.FrameEatRequest.frame:type_name -> job.Frame
	6,   // 38: job.FrameFindFrameResponse.frame:type_name -> job.Frame
	6,   // 39: job.FrameGetFrameResponse.frame:type_name -> job.Frame
	7,   // 40: job.FrameGetFramesRequest.r:type_name -> job.FrameSearchCriteria
	8,   // 41: job.FrameGetFramesResponse.frames:type_name -> job.FrameSeq
	6,   // 42: job.FrameGetWhatDependsOnThisRequest.frame:type_name -> job.Frame
	251, // 43: job.FrameGetWhatDependsOnThisResponse.depends:type_name -> depend.DependSeq
	6,   // 44: job.FrameGetWhatThisDependsOnRequest.frame:type_name -> job.Frame
	251, // 45: job.FrameGetWhatThisDependsOnResponse.depends:type_name -> depend.DependSeq
	6,   // 46: job.FrameKillRequest.frame:type_name -> job.Frame
	6,   // 47: job.FrameMarkAsDependRequest.frame:type_name -> job.Frame
	6,   // 48: job.FrameMarkAsWaitingRequest.frame:type_name -> job.Frame
	6,   // 49: job.FrameRetryRequest.frame:type_name -> job.Frame
	6,   // 50: job.FrameSetCheckpointStateRequest.frame:type_name -> job.Frame
	0,   // 51: job.FrameSetCheckpointStateRequest.state:type_name -> job.CheckpointState
	13,  // 52: job.GroupCreateSubGroupRequest.group:type_name -> job.Group
	13,  // 53: job.GroupCreateSubGroupResponse.group:type_name -> job.Group
	13,  // 54: job.GroupDeleteRequest.group:type_name -> job.Group
	13,  // 55: job.GroupFindGroupResponse.group:type_name -> job.Group
	13,  // 56: job.GroupGetGroupResponse.group:type_name -> job.Group
	13,  // 57: job.GroupGetGroupsRequest.group:type_name -> job.Group
	14,  // 58: job.GroupGetGroupsResponse.groups:type_name -> job.GroupSeq
	13,  // 59: job.GroupGetJobsRequest.group:type_name -> job.Group
	18,  // 60: job.GroupGetJobsResponse.jobs:type_name -> job.JobSeq
	13,  // 61: job.GroupReparentGroupsRequest.group:type_name -> job.Group
	14,  // 62: job.GroupReparentGroupsRequest.groups:type_name -> job.GroupSeq
	13,  // 63: job.GroupReparentJobsRequest.group:type_name -> job.Group
	18,  // 64: job.GroupReparentJobsRequest.jobs:type_name -> job.JobSeq
	13,  // 65: job.GroupSetDefJobMaxCoresRequest.group:type_name -> job.Group
	13,  // 66: job.GroupSetDefJobMinCoresRequest.group:type_name -> job.Group
	13,  // 67: job.GroupSetDefJobMaxGpusRequest.group:type_name -> job.Group
	13,  // 68: job.GroupSetDefJobMinGpusRequest.group:type_name -> job.Group
	13,  // 69: job.GroupSetDefJobPriorityRequest.group:type_name -> job.Group
	13,  // 70: job.GroupSetDeptRequest.group:type_name -> job.Group
	13,  // 71: job.GroupSetGroupRequest.group:type_name -> job.Group
	13,  // 72: job.GroupSetGroupRequest.parent_group:type_name -> job.Group
	13,  // 73: job.GroupSetMaxCoresRequest.group:type_name -> job.Group
	13,  // 74: job.GroupSetMinCoresRequest.group:type_name -> job.Group
	13,  // 75: job.GroupSetMaxGpusRequest.group:type_name -> job.Group
	13,  // 76: job.GroupSetMinGpusRequest.group:type_name -> job.Group
	13,  // 77: job.GroupSetNameRequest.group:type_name -> job.Group
	16,  // 78: job.JobAddCommentRequest.job:type_name -> job.Job
	252, // 79: job.JobAddCommentRequest.new_comment:type_name -> comment.Comment
	16,  // 80: job.JobAddRenderPartRequest.job:type_name -> job.Job
	248, // 81: job.JobAddRenderPartResponse.render_partition:type_name -> renderPartition.RenderPartition
	16,  // 82: job.JobCreateDependencyOnFrameRequest.job:type_name -> job.Job
	6,   // 83: job.JobCreateDependencyOnFrameRequest.frame:type_name -> job.Frame
	249, // 84: job.JobCreateDependencyOnFrameResponse.depend:type_name -> depend.Depend
	16,  // 85: job.JobCreateDependencyOnJobRequest.job:type_name -> job.Job
	16,  // 86: job.JobCreateDependencyOnJobRequest.on_job:type_name -> job.Job
	249, // 87: job.JobCreateDependencyOnJobResponse.depend:type_name -> depend.Depend
	16,  // 88: job.JobCreateDependencyOnLayerRequest.job:type_name -> job.Job
	20,  // 89: job.JobCreateDependencyOnLayerRequest.layer:type_name -> job.Layer
	249, // 90: job.JobCreateDependencyOnLayerResponse.depend:type_name -> depend.Depend
	16,  // 91: job.JobDropDependsRequest.job:type_name -> job.Job
	250, // 92: job.JobDropDependsRequest.target:type_name -> depend.DependTarget
	16,  // 93: job.JobEatFramesRequest.job:type_name -> job.Job
	7,   // 94: job.JobEatFramesRequest.req:type_name -> job.FrameSearchCriteria
	16,  // 95: job.JobFindJobResponse.job:type_name -> job.Job
	16,  // 96: job.JobGetCommentsRequest.job:type_name -> job.Job
	253, // 97: job.JobGetCommentsResponse.comments:type_name -> comment.CommentSeq
	16,  // 98: job.JobGetCurrentRequest.job:type_name -> job.Job
	16,  // 99: job.JobGetCurrentResponse.job:type_name -> job.Job
	16,  // 100: job.JobGetDependsRequest.job:type_name -> job.Job
	251, // 101: job.JobGetDependsResponse.depends:type_name -> depend.DependSeq
	16,  // 102: job.JobGetFramesRequest.job:type_name -> job.Job
	7,   // 103: job.JobGetFramesRequest.req:type_name -> job.FrameSearchCriteria
	8,   // 104: job.JobGetFramesResponse.frames:type_name -> job.FrameSeq
	16,  // 105: job.JobGetJobResponse.job:type_name -> job.Job
	17,  // 106: job.JobGetJobsRequest.r:type_name -> job.JobSearchCriteria
	18,  // 107: job.JobGetJobsResponse.jobs:type_name -> job.JobSeq
	17,  // 108: job.JobGetJobNamesRequest.r:type_name -> job.JobSearchCriteria
	16,  // 109: job.JobGetLayersRequest.job:type_name -> job.Job
	21,  // 110: job.JobGetLayersResponse.layers:type_name -> job.LayerSeq
	16,  // 111: job.JobGetUpdatedFramesRequest.job:type_name -> job.Job
	21,  // 112: job.JobGetUpdatedFramesRequest.layer_filter:type_name -> job.LayerSeq
	3,   // 113: job.JobGetUpdatedFramesResponse.state:type_name -> job.JobState
	11,  // 114: job.JobGetUpdatedFramesResponse.updated_frames:type_name -> job.UpdatedFrameSeq
	16,  // 115: job.JobGetWhatDependsOnThisRequest.job:type_name -> job.Job
	251, // 116: job.JobGetWhatDependsOnThisResponse.depends:type_name -> depend.DependSeq
	16,  // 117: job.JobGetWhatThisDependsOnRequest.job:type_name -> job.Job
	251, // 118: job.JobGetWhatThisDependsOnResponse.depends:type_name -> depend.DependSeq
	16,  // 119: job.JobKillRequest.job:type_name -> job.Job
	16,  // 120: job.JobKillFramesRequest.job:type_name -> job.Job
	7,   // 121: job.JobKillFramesRequest.req:type_name -> job.FrameSearchCriteria
	18,  // 122: job.JobLaunchSpecAndWaitResponse.jobs:type_name -> job.JobSeq
	16,  // 123: job.JobMarkAsWaitingRequest.job:type_name -> job.Job
	7,   // 124: job.JobMarkAsWaitingRequest.req:type_name -> job.FrameSearchCriteria
	16,  // 125: job.JobMarkDoneFramesRequest.job:type_name -> job.Job
	7,   // 126: job.JobMarkDoneFramesRequest.req:type_name -> job.FrameSearchCriteria
	16,  // 127: job.JobPauseRequest.job:type_name -> job.Job
	16,  // 128: job.JobReorderFramesRequest.job:type_name -> job.Job
	5,   // 129: job.JobReorderFramesRequest.order:type_name -> job.Order
	16,  // 130: job.JobResumeRequest.job:type_name -> job.Job
	16,  // 131: job.JobRetryFramesRequest.job:type_name -> job.Job
	7,   // 132: job.JobRetryFramesRequest.req:type_name -> job.FrameSearchCriteria
	16,  // 133: job.JobRunFiltersRequest.job:type_name -> job.Job
	16,  // 134: job.JobSetAutoEatRequest.job:type_name -> job.Job
	16,  // 135: job.JobSetGroupRequest.job:type_name -> job.Job
	16,  // 136: job.JobSetMaxCoresRequest.job:type_name -> job.Job
	16,  // 137: job.JobSetMaxGpusRequest.job:type_name -> job.Job
	16,  // 138: job.JobSetMaxRetriesRequest.job:type_name -> job.Job
	16,  // 139: job.JobSetMinCoresRequest.job:type_name -> job.Job
	16,  // 140: job.JobSetMinGpusRequest.job:type_name -> job.Job
	16,  // 141: job.JobSetPriorityRequest.job:type_name -> job.Job
	16,  // 142: job.JobShutdownIfCompletedRequest.job:type_name -> job.Job
	16,  // 143: job.JobStaggerFramesRequest.job:type_name -> job.Job
	20,  // 144: job.LayerAddLimitRequest.layer:type_name -> job.Layer
	20,  // 145: job.LayerAddRenderPartitionRequest.layer:type_name -> job.Layer
	248, // 146: job.LayerAddRenderPartitionResponse.render_partition:type_name -> renderPartition.RenderPartition
	20,  // 147: job.LayerCreateDependOnFrameRequest.layer:type_name -> job.Layer
	6,   // 148: job.LayerCreateDependOnFrameRequest.frame:type_name -> job.Frame
	249, // 149: job.LayerCreateDependOnFrameResponse.depend:type_name -> depend.Depend
	20,  // 150: job.LayerCreateDependOnJobRequest.layer:type_name -> job.Layer
	16,  // 151: job.LayerCreateDependOnJobRequest.job:type_name -> job.Job
	249, // 152: job.LayerCreateDependOnJobResponse.depend:type_name -> depend.Depend
	20,  // 153: job.LayerCreateDependOnLayerRequest.layer:type_name -> job.Layer
	20,  // 154: job.LayerCreateDependOnLayerRequest.depend_on_layer:type_name -> job.Layer
	249, // 155: job.LayerCreateDependOnLayerResponse.depend:type_name -> depend.Depend
	20,  // 156: job.LayerCreateFrameByFrameDependRequest.layer:type_name -> job.Layer
	20,  // 157: job.LayerCreateFrameByFrameDependRequest.depend_layer:type_name -> job.Layer
	249, // 158: job.LayerCreateFrameByFrameDependResponse.depend:type_name -> depend.Depend
	20,  // 159: job.LayerDropDependsRequest.layer:type_name -> job.Layer
	250, // 160: job.LayerDropDependsRequest.target:type_name -> depend.DependTarget
	20,  // 161: job.LayerDropLimitRequest.layer:type_name -> job.Layer
	20,  // 162: job.LayerEatFramesRequest.layer:type_name -> job.Layer
	20,  // 163: job.LayerEnableMemoryOptimizerRequest.layer:type_name -> job.Layer
	20,  // 164: job.LayerFindLayerResponse.layer:type_name -> job.Layer
	20,  // 165: job.LayerGetFramesRequest.layer:type_name -> job.Layer
	7,   // 166: job.LayerGetFramesRequest.s:type_name -> job.FrameSearchCriteria
	8,   // 167: job.LayerGetFramesResponse.frames:type_name -> job.FrameSeq
	20,  // 168: job.LayerGetLayerResponse.layer:type_name -> job.Layer
	20,  // 169: job.LayerGetLimitsRequest.layer:type_name -> job.Layer
	254, // 170: job.LayerGetLimitsResponse.limits:type_name -> limit.Limit
	20,  // 171: job.LayerGetOutputPathsRequest.layer:type_name -> job.Layer
	20,  // 172: job.LayerGetWhatDependsOnThisRequest.layer:type_name -> job.Layer
	251, // 173: job.LayerGetWhatDependsOnThisResponse.depends:type_name -> depend.DependSeq
	20,  // 174: job.LayerGetWhatThisDependsOnRequest.layer:type_name -> job.Layer
	251, // 175: job.LayerGetWhatThisDependsOnResponse.depends:type_name -> depend.DependSeq
	20,  // 176: job.LayerKillFramesRequest.layer:type_name -> job.Layer
	20,  // 177: job.LayerMarkdoneFramesRequest.layer:type_name -> job.Layer
	20,  // 178: job.LayerRetryFramesRequest.layer:type_name -> job.Layer
	20,  // 179: job.LayerRegisterOutputPathRequest.layer:type_name -> job.Layer
	20,  // 180: job.LayerReorderFramesRequest.layer:type_name -> job.Layer
	5,   // 181: job.LayerReorderFramesRequest.order:type_name -> job.Order
	20,  // 182: job.LayerSetMaxCoresRequest.layer:type_name -> job.Layer
	20,  // 183: job.LayerSetMinCoresRequest.layer:type_name -> job.Layer
	20,  // 184: job.LayerSetMinGpuRequest.layer:type_name -> job.Layer
	20,  // 185: job.LayerSetMaxGpusRequest.layer:type_name -> job.Layer
	20,  // 186: job.LayerSetMinGpusRequest.layer:type_name -> job.Layer
	20,  // 187: job.LayerSetMinGpuMemoryRequest.layer:type_name -> job.Layer
	20,  // 188: job.LayerSetMinMemoryRequest.layer:type_name -> job.Layer
	20,  // 189: job.LayerSetTagsRequest.layer:type_name -> job.Layer
	20,  // 190: job.LayerSetThreadableRequest.layer:type_name -> job.Layer
	20,  // 191: job.LayerSetTimeoutRequest.layer:type_name -> job.Layer
	20,  // 192: job.LayerSetTimeoutLLURequest.layer:type_name -> job.Layer
	20,  // 193: job.LayerStaggerFramesRequest.layer:type_name -> job.Layer
	26,  // 194: job.FrameInterface.AddRenderPartition:input_type -> job.FrameAddRenderPartitionRequest
	28,  // 195: job.FrameInterface.CreateDependencyOnFrame:input_type -> job.FrameCreateDependencyOnFrameRequest
	30,  // 196: job.FrameInterface.CreateDependencyOnJob:input_type -> job.FrameCreateDependencyOnJobRequest
	32,  // 197: job.FrameInterface.CreateDependencyOnLayer:input_type -> job.FrameCreateDependencyOnLayerRequest
	34,  // 198: job.FrameInterface.DropDepends:input_type -> job.FrameDropDependsRequest
	36,  // 199: job.FrameInterface.Eat:input_type -> job.FrameEatRequest
	38,  // 200: job.FrameInterface.FindFrame:input_type -> job.FrameFindFrameRequest
	40,  // 201: job.FrameInterface.GetFrame:input_type -> job.FrameGetFrameRequest
	42,  // 202: job.FrameInterface.GetFrames:input_type -> job.FrameGetFramesRequest
	44,  // 203: job.FrameInterface.GetWhatDependsOnThis:input_type -> job.FrameGetWhatDependsOnThisRequest
	46,  // 204: job.FrameInterface.GetWhatThisDependsOn:input_type -> job.FrameGetWhatThisDependsOnRequest
	48,  // 205: job.FrameInterface.Kill:input_type -> job.FrameKillRequest
	50,  // 206: job.FrameInterface.MarkAsDepend:input_type -> job.FrameMarkAsDependRequest
	52,  // 207: job.FrameInterface.MarkAsWaiting:input_type -> job.FrameMarkAsWaitingRequest
	54,  // 208: job.FrameInterface.Retry:input_type -> job.FrameRetryRequest
	56,  // 209: job.FrameInterface.SetCheckpointState:input_type -> job.FrameSetCheckpointStateRequest
	58,  // 210: job.GroupInterface.CreateSubGroup:input_type -> job.GroupCreateSubGroupRequest
	60,  // 211: job.GroupInterface.Delete:input_type -> job.GroupDeleteRequest
	62,  // 212: job.GroupInterface.FindGroup:input_type -> job.GroupFindGroupRequest
	64,  // 213: job.GroupInterface.GetGroup:input_type -> job.GroupGetGroupRequest
	66,  // 214: job.GroupInterface.GetGroups:input_type -> job.GroupGetGroupsRequest
	68,  // 215: job.GroupInterface.GetJobs:input_type -> job.GroupGetJobsRequest
	70,  // 216: job.GroupInterface.ReparentGroups:input_type -> job.GroupReparentGroupsRequest
	72,  // 217: job.GroupInterface.ReparentJobs:input_type -> job.GroupReparentJobsRequest
	74,  // 218: job.GroupInterface.SetDefaultJobMaxCores:input_type -> job.GroupSetDefJobMaxCoresRequest
	76,  // 219: job.GroupInterface.SetDefaultJobMinCores:input_type -> job.GroupSetDefJobMinCoresRequest
	78,  // 220: job.GroupInterface.SetDefaultJobMaxGpus:input_type -> job.GroupSetDefJobMaxGpusRequest
	80,  // 221: job.GroupInterface.SetDefaultJobMinGpus:input_type -> job.GroupSetDefJobMinGpusRequest
	82,  // 222: job.GroupInterface.SetDefaultJobPriority:input_type -> job.GroupSetDefJobPriorityRequest
	84,  // 223: job.GroupInterface.SetDepartment:input_type -> job.GroupSetDeptRequest
	86,  // 224: job.GroupInterface.SetGroup:input_type -> job.GroupSetGroupRequest
	88,  // 225: job.GroupInterface.SetMaxCores:input_type -> job.GroupSetMaxCoresRequest
	90,  // 226: job.GroupInterface.SetMinCores:input_type -> job.GroupSetMinCoresRequest
	92,  // 227: job.GroupInterface.SetMaxGpus:input_type -> job.GroupSetMaxGpusRequest
	94,  // 228: job.GroupInterface.SetMinGpus:input_type -> job.GroupSetMinGpusRequest
	96,  // 229: job.GroupInterface.SetName:input_type -> job.GroupSetNameRequest
	98,  // 230: job.JobInterface.AddComment:input_type -> job.JobAddCommentRequest
	100, // 231: job.JobInterface.AddRenderPartition:input_type -> job.JobAddRenderPartRequest
	102, // 232: job.JobInterface.CreateDependencyOnFrame:input_type -> job.JobCreateDependencyOnFrameRequest
	104, // 233: job.JobInterface.CreateDependencyOnJob:input_type -> job.JobCreateDependencyOnJobRequest
	106, // 234: job.JobInterface.CreateDependencyOnLayer:input_type -> job.JobCreateDependencyOnLayerRequest
	108, // 235: job.JobInterface.DropDepends:input_type -> job.JobDropDependsRequest
	110, // 236: job.JobInterface.EatFrames:input_type -> job.JobEatFramesRequest
	112, // 237: job.JobInterface.FindJob:input_type -> job.JobFindJobRequest
	114, // 238: job.JobInterface.GetComments:input_type -> job.JobGetCommentsRequest
	116, // 239: job.JobInterface.GetCurrent:input_type -> job.JobGetCurrentRequest
	118, // 240: job.JobInterface.GetDepends:input_type -> job.JobGetDependsRequest
	120, // 241: job.JobInterface.GetFrames:input_type -> job.JobGetFramesRequest
	122, // 242: job.JobInterface.GetJob:input_type -> job.JobGetJobRequest
	124, // 243: job.JobInterface.GetJobs:input_type -> job.JobGetJobsRequest
	126, // 244: job.JobInterface.GetJobNames:input_type -> job.JobGetJobNamesRequest
	128, // 245: job.JobInterface.GetLayers:input_type -> job.JobGetLayersRequest
	130, // 246: job.JobInterface.GetUpdatedFrames:input_type -> job.JobGetUpdatedFramesRequest
	132, // 247: job.JobInterface.GetWhatDependsOnThis:input_type -> job.JobGetWhatDependsOnThisRequest
	134, // 248: job.JobInterface.GetWhatThisDependsOn:input_type -> job.JobGetWhatThisDependsOnRequest
	136, // 249: job.JobInterface.IsJobPending:input_type -> job.JobIsJobPendingRequest
	138, // 250: job.JobInterface.Kill:input_type -> job.JobKillRequest
	140, // 251: job.JobInterface.KillFrames:input_type -> job.JobKillFramesRequest
	144, // 252: job.JobInterface.LaunchSpecAndWait:input_type -> job.JobLaunchSpecAndWaitRequest
	142, // 253: job.JobInterface.LaunchSpec:input_type -> job.JobLaunchSpecRequest
	146, // 254: job.JobInterface.MarkAsWaiting:input_type -> job.JobMarkAsWaitingRequest
	148, // 255: job.JobInterface.MarkDoneFrames:input_type -> job.JobMarkDoneFramesRequest
	150, // 256: job.JobInterface.Pause:input_type -> job.JobPauseRequest
	152, // 257: job.JobInterface.ReorderFrames:input_type -> job.JobReorderFramesRequest
	154, // 258: job.JobInterface.Resume:input_type -> job.JobResumeRequest
	156, // 259: job.JobInterface.RetryFrames:input_type -> job.JobRetryFramesRequest
	158, // 260: job.JobInterface.RunFilters:input_type -> job.JobRunFiltersRequest
	160, // 261: job.JobInterface.SetAutoEat:input_type -> job.JobSetAutoEatRequest
	162, // 262: job.JobInterface.SetGroup:input_type -> job.JobSetGroupRequest
	164, // 263: job.JobInterface.SetMaxCores:input_type -> job.JobSetMaxCoresRequest
	168, // 264: job.JobInterface.SetMaxRetries:input_type -> job.JobSetMaxRetriesRequest
	170, // 265: job.JobInterface.SetMinCores:input_type -> job.JobSetMinCoresRequest
	166, // 266: job.JobInterface.SetMaxGpus:input_type -> job.JobSetMaxGpusRequest
	172, // 267: job.JobInterface.SetMinGpus:input_type -> job.JobSetMinGpusRequest
	174, // 268: job.JobInterface.SetPriority:input_type -> job.JobSetPriorityRequest
	176, // 269: job.JobInterface.ShutdownIfCompleted:input_type -> job.JobShutdownIfCompletedRequest
	178, // 270: job.JobInterface.StaggerFrames:input_type -> job.JobStaggerFramesRequest
	180, // 271: job.LayerInterface.AddLimit:input_type -> job.LayerAddLimitRequest
	182, // 272: job.LayerInterface.AddRenderPartition:input_type -> job.LayerAddRenderPartitionRequest
	184, // 273: job.LayerInterface.CreateDependencyOnFrame:input_type -> job.LayerCreateDependOnFrameRequest
	186, // 274: job.LayerInterface.CreateDependencyOnJob:input_type -> job.LayerCreateDependOnJobRequest
	188, // 275: job.LayerInterface.CreateDependencyOnLayer:input_type -> job.LayerCreateDependOnLayerRequest
	190, // 276: job.LayerInterface.CreateFrameByFrameDependency:input_type -> job.LayerCreateFrameByFrameDependRequest
	192, // 277: job.LayerInterface.DropDepends:input_type -> job.LayerDropDependsRequest
	194, // 278: job.LayerInterface.DropLimit:input_type -> job.LayerDropLimitRequest
	196, // 279: job.LayerInterface.EatFrames:input_type -> job.LayerEatFramesRequest
	198, // 280: job.LayerInterface.EnableMemoryOptimizer:input_type -> job.LayerEnableMemoryOptimizerRequest
	200, // 281: job.LayerInterface.FindLayer:input_type -> job.LayerFindLayerRequest
	202, // 282: job.LayerInterface.GetFrames:input_type -> job.LayerGetFramesRequest
	204, // 283: job.LayerInterface.GetLayer:input_type -> job.LayerGetLayerRequest
	206, // 284: job.LayerInterface.GetLimits:input_type -> job.LayerGetLimitsRequest
	208, // 285: job.LayerInterface.GetOutputPaths:input_type -> job.LayerGetOutputPathsRequest
	212, // 286: job.LayerInterface.GetWhatThisDependsOn:input_type -> job.LayerGetWhatThisDependsOnRequest
	210, // 287: job.LayerInterface.GetWhatDependsOnThis:input_type -> job.LayerGetWhatDependsOnThisRequest
	214, // 288: job.LayerInterface.KillFrames:input_type -> job.LayerKillFramesRequest
	216, // 289: job.LayerInterface.MarkdoneFrames:input_type -> job.LayerMarkdoneFramesRequest
	220, // 290: job.LayerInterface.RegisterOutputPath:input_type -> job.LayerRegisterOutputPathRequest
	222, // 291: job.LayerInterface.ReorderFrames:input_type -> job.LayerReorderFramesRequest
	218, // 292: job.LayerInterface.RetryFrames:input_type -> job.LayerRetryFramesRequest
	224, // 293: job.LayerInterface.SetMaxCores:input_type -> job.LayerSetMaxCoresRequest
	226, // 294: job.LayerInterface.SetMinCores:input_type -> job.LayerSetMinCoresRequest
	230, // 295: job.LayerInterface.SetMaxGpus:input_type -> job.LayerSetMaxGpusRequest
	232, // 296: job.LayerInterface.SetMinGpus:input_type -> job.LayerSetMinGpusRequest
	234, // 297: job.LayerInterface.SetMinGpuMemory:input_type -> job.LayerSetMinGpuMemoryRequest
	228, // 298: job.LayerInterface.SetMinGpu:input_type -> job.LayerSetMinGpuRequest
	236, // 299: job.LayerInterface.SetMinMemory:input_type -> job.LayerSetMinMemoryRequest
	238, // 300: job.LayerInterface.SetTags:input_type -> job.LayerSetTagsRequest
	240, // 301: job.LayerInterface.SetThreadable:input_type -> job.LayerSetThreadableRequest
	242, // 302: job.LayerInterface.SetTimeout:input_type -> job.LayerSetTimeoutRequest
	244, // 303: job.LayerInterface.SetTimeoutLLU:input_type -> job.LayerSetTimeoutLLURequest
	246, // 304: job.LayerInterface.StaggerFrames:input_type -> job.LayerStaggerFramesRequest
	27,  // 305: job.FrameInterface.AddRenderPartition:output_type -> job.FrameAddRenderPartitionResponse
	29,  // 306: job.FrameInterface.CreateDependencyOnFrame:output_type -> job.FrameCreateDependencyOnFrameResponse
	31,  // 307: job.FrameInterface.CreateDependencyOnJob:output_type -> job.FrameCreateDependencyOnJobResponse
	33,  // 308: job.FrameInterface.CreateDependencyOnLayer:output_type -> job.FrameCreateDependencyOnLayerResponse
	35,  // 309: job.FrameInterface.DropDepends:output_type -> job.FrameDropDependsResponse
	37,  // 310: job.FrameInterface.Eat:output_type -> job.FrameEatResponse
	39,  // 311: job.FrameInterface.FindFrame:output_type -> job.FrameFindFrameResponse
	41,  // 312: job.FrameInterface.GetFrame:output_type -> job.FrameGetFrameResponse
	43,  // 313: job.FrameInterface.GetFrames:output_type -> job.FrameGetFramesResponse
	45,  // 314: job.FrameInterface.GetWhatDependsOnThis:output_type -> job.FrameGetWhatDependsOnThisResponse
	47,  // 315: job.FrameInterface.GetWhatThisDependsOn:output_type -> job.FrameGetWhatThisDependsOnResponse
	49,  // 316: job.FrameInterface.Kill:output_type -> job.FrameKillResponse
	51,  // 317: job.FrameInterface.MarkAsDepend:output_type -> job.FrameMarkAsDependResponse
	53,  // 318: job.FrameInterface.MarkAsWaiting:output_type -> job.FrameMarkAsWaitingResponse
	55,  // 319: job.FrameInterface.Retry:output_type -> job.FrameRetryResponse
	57,  // 320: job.FrameInterface.SetCheckpointState:output_type -> job.FrameSetCheckpointStateResponse
	59,  // 321: job.GroupInterface.CreateSubGroup:output_type -> job.GroupCreateSubGroupResponse
	61,  // 322: job.GroupInterface.Delete:output_type -> job.GroupDeleteResponse
	63,  // 323: job.GroupInterface.FindGroup:output_type -> job.GroupFindGroupResponse
	65,  // 324: job.GroupInterface.GetGroup:output_type -> job.GroupGetGroupResponse
	67,  // 325: job.GroupInterface.GetGroups:output_type -> job.GroupGetGroupsResponse
	69,  // 326: job.GroupInterface.GetJobs:output_type -> job.GroupGetJobsResponse
	71,  // 327: job.GroupInterface.ReparentGroups:output_type -> job.GroupReparentGroupsResponse
	73,  // 328: job.GroupInterface.ReparentJobs:output_type -> job.GroupReparentJobsResponse
	75,  // 329: job.GroupInterface.SetDefaultJobMaxCores:output_type -> job.GroupSetDefJobMaxCoresResponse
	77,  // 330: job.GroupInterface.SetDefaultJobMinCores:output_type -> job.GroupSetDefJobMinCoresResponse
	79,  // 331: job.GroupInterface.SetDefaultJobMaxGpus:output_type -> job.GroupSetDefJobMaxGpusResponse
	81,  // 332: job.GroupInterface.SetDefaultJobMinGpus:output_type -> job.GroupSetDefJobMinGpusResponse
	83,  // 333: job.GroupInterface.SetDefaultJobPriority:output_type -> job.GroupSetDefJobPriorityResponse
	85,  // 334: job.GroupInterface.SetDepartment:output_type -> job.GroupSetDeptResponse
	87,  // 335: job.GroupInterface.SetGroup:output_type -> job.GroupSetGroupResponse
	89,  // 336: job.GroupInterface.SetMaxCores:output_type -> job.GroupSetMaxCoresResponse
	91,  // 337: job.GroupInterface.SetMinCores:output_type -> job.GroupSetMinCoresResponse
	93,  // 338: job.GroupInterface.SetMaxGpus:output_type -> job.GroupSetMaxGpusResponse
	95,  // 339: job.GroupInterface.SetMinGpus:output_type -> job.GroupSetMinGpusResponse
	97,  // 340: job.GroupInterface.SetName:output_type -> job.GroupSetNameResponse
	99,  // 341: job.JobInterface.AddComment:output_type -> job.JobAddCommentResponse
	101, // 342: job.JobInterface.AddRenderPartition:output_type -> job.JobAddRenderPartResponse
	103, // 343: job.JobInterface.CreateDependencyOnFrame:output_type -> job.JobCreateDependencyOnFrameResponse
	105, // 344: job.JobInterface.CreateDependencyOnJob:output_type -> job.JobCreateDependencyOnJobResponse
	107, // 345: job.JobInterface.CreateDependencyOnLayer:output_type -> job.JobCreateDependencyOnLayerResponse
	109, // 346: job.JobInterface.DropDepends:output_type -> job.JobDropDependsResponse
	111, // 347: job.JobInterface.EatFrames:output_type -> job.JobEatFramesResponse
	113, // 348: job.JobInterface.FindJob:output_type -> job.JobFindJobResponse
	115, // 349: job.JobInterface.GetComments:output_type -> job.JobGetCommentsResponse
	117, // 350: job.JobInterface.GetCurrent:output_type -> job.JobGetCurrentResponse
	119, // 351: job.JobInterface.GetDepends:output_type -> job.JobGetDependsResponse
	121, // 352: job.JobInterface.GetFrames:output_type -> job.JobGetFramesResponse
	123, // 353: job.JobInterface.GetJob:output_type -> job.JobGetJobResponse
	125, // 354: job.JobInterface.GetJobs:output_type -> job.JobGetJobsResponse
	127, // 355: job.JobInterface.GetJobNames:output_type -> job.JobGetJobNamesResponse
	129, // 356: job.JobInterface.GetLayers:output_type -> job.JobGetLayersResponse
	131, // 357: job.JobInterface.GetUpdatedFrames:output_type -> job.JobGetUpdatedFramesResponse
	133, // 358: job.JobInterface.GetWhatDependsOnThis:output_type -> job.JobGetWhatDependsOnThisResponse
	135, // 359: job.JobInterface.GetWhatThisDependsOn:output_type -> job.JobGetWhatThisDependsOnResponse
	137, // 360: job.JobInterface.IsJobPending:output_type -> job.JobIsJobPendingResponse
	139, // 361: job.JobInterface.Kill:output_type -> job.JobKillResponse
	141, // 362: job.JobInterface.KillFrames:output_type -> job.JobKillFramesResponse
	145, // 363: job.JobInterface.LaunchSpecAndWait:output_type -> job.JobLaunchSpecAndWaitResponse
	143, // 364: job.JobInterface.LaunchSpec:output_type -> job.JobLaunchSpecResponse
	147, // 365: job.JobInterface.MarkAsWaiting:output_type -> job.JobMarkAsWaitingResponse
	149, // 366: job.JobInterface.MarkDoneFrames:output_type -> job.JobMarkDoneFramesResponse
	151, // 367: job.JobInterface.Pause:output_type -> job.JobPauseResponse
	153, // 368: job.JobInterface.ReorderFrames:output_type -> job.JobReorderFramesResponse
	155, // 369: job.JobInterface.Resume:output_type -> job.JobResumeResponse
	157, // 370: job.JobInterface.RetryFrames:output_type -> job.JobRetryFramesResponse
	159, // 371: job.JobInterface.RunFilters:output_type -> job.JobRunFiltersResponse
	161, // 372: job.JobInterface.SetAutoEat:output_type -> job.JobSetAutoEatResponse
	163, // 373: job.JobInterface.SetGroup:output_type -> job.JobSetGroupResponse
	165, // 374: job.JobInterface.SetMaxCores:output_type -> job.JobSetMaxCoresResponse
	169, // 375: job.JobInterface.SetMaxRetries:output_type -> job.JobSetMaxRetriesResponse
	171, // 376: job.JobInterface.SetMinCores:output_type -> job.JobSetMinCoresResponse
	167, // 377: job.JobInterface.SetMaxGpus:output_type -> job.JobSetMaxGpusResponse
	173, // 378: job.JobInterface.SetMinGpus:output_type -> job.JobSetMinGpusResponse
	175, // 379: job.JobInterface.SetPriority:output_type -> job.JobSetPriorityResponse
	177, // 380: job.JobInterface.ShutdownIfCompleted:output_type -> job.JobShutdownIfCompletedResponse
	179, // 381: job.JobInterface.StaggerFrames:output_type -> job.JobStaggerFramesResponse
	181, // 382: job.LayerInterface.AddLimit:output_type -> job.LayerAddLimitResponse
	183, // 383: job.LayerInterface.AddRenderPartition:output_type -> job.LayerAddRenderPartitionResponse
	185, // 384: job.LayerInterface.CreateDependencyOnFrame:output_type -> job.LayerCreateDependOnFrameResponse
	187, // 385: job.LayerInterface.CreateDependencyOnJob:output_type -> job.LayerCreateDependOnJobResponse
	189, // 386: job.LayerInterface.CreateDependencyOnLayer:output_type -> job.LayerCreateDependOnLayerResponse
	191, // 387: job.LayerInterface.CreateFrameByFrameDependency:output_type -> job.LayerCreateFrameByFrameDependResponse
	193, // 388: job.LayerInterface.DropDepends:output_type -> job.LayerDropDependsResponse
	195, // 389: job.LayerInterface.DropLimit:output_type -> job.LayerDropLimitResponse
	197, // 390: job.LayerInterface.EatFrames:output_type -> job.LayerEatFramesResponse
	199, // 391: job.LayerInterface.EnableMemoryOptimizer:output_type -> job.LayerEnableMemoryOptimizerResponse
	201, // 392: job.LayerInterface.FindLayer:output_type -> job.LayerFindLayerResponse
	203, // 393: job.LayerInterface.GetFrames:output_type -> job.LayerGetFramesResponse
	205, // 394: job.LayerInterface.GetLayer:output_type -> job.LayerGetLayerResponse
	207, // 395: job.LayerInterface.GetLimits:output_type -> job.LayerGetLimitsResponse
	209, // 396: job.LayerInterface.GetOutputPaths:output_type -> job.LayerGetOutputPathsResponse
	213, // 397: job.LayerInterface.GetWhatThisDependsOn:output_type -> job.LayerGetWhatThisDependsOnResponse
	211, // 398: job.LayerInterface.GetWhatDependsOnThis:output_type -> job.LayerGetWhatDependsOnThisResponse
	215, // 399: job.LayerInterface.KillFrames:output_type -> job.LayerKillFramesResponse
	217, // 400: job.LayerInterface.MarkdoneFrames:output_type -> job.LayerMarkdoneFramesResponse
	221, // 401: job.LayerInterface.RegisterOutputPath:output_type -> job.LayerRegisterOutputPathResponse
	223, // 402: job.LayerInterface.ReorderFrames:output_type -> job.LayerReorderFramesResponse
	219, // 403: job.LayerInterface.RetryFrames:output_type -> job.LayerRetryFramesResponse
	225, // 404: job.LayerInterface.SetMaxCores:output_type -> job.LayerSetMaxCoresResponse
	227, // 405: job.LayerInterface.SetMinCores:output_type -> job.LayerSetMinCoresResponse
	231, // 406: job.LayerInterface.SetMaxGpus:output_type -> job.LayerSetMaxGpusResponse
	233, // 407: job.LayerInterface.SetMinGpus:output_type -> job.LayerSetMinGpusResponse
	235, // 408: job.LayerInterface.SetMinGpuMemory:output_type -> job.LayerSetMinGpuMemoryResponse
	229, // 409: job.LayerInterface.SetMinGpu:output_type -> job.LayerSetMinGpuResponse
	237, // 410: job.LayerInterface.SetMinMemory:output_type -> job.LayerSetMinMemoryResponse
	239, // 411: job.LayerInterface.SetTags:output_type -> job.LayerSetTagsResponse
	241, // 412: job.LayerInterface.SetThreadable:output_type -> job.LayerSetThreadableResponse
	243, // 413: job.LayerInterface.SetTimeout:output_type -> job.LayerSetTimeoutResponse
	245, // 414: job.LayerInterface.SetTimeoutLLU:output_type -> job.LayerSetTimeoutLLUResponse
	247, // 415: job.LayerInterface.StaggerFrames:output_type -> job.LayerStaggerFramesResponse
	305, // [305:416] is the sub-list for method output_type
	194, // [194:305] is the sub-list for method input_type
	194, // [194:194] is the sub-list for extension type_name
	194, // [194:194] is the sub-list for extension extendee
	0,   // [0:194] is the sub-list for field type_name
}

func init() { file_OpenCue_proto_job_proto_init() }
func file_OpenCue_proto_job_proto_init() {
	if File_OpenCue_proto_job_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_OpenCue_proto_job_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Frame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrameSearchCriteria); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrameSeq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrameStateSeq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatedFrame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatedFrameSeq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatedFrameCheckResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Group); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupSeq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Job); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobSearchCriteria); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobSeq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Layer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayerSeq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayerStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NestedGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NestedGroupSeq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NestedJob); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrameAddRenderPartitionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrameAddRenderPartitionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrameCreateDependencyOnFrameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrameCreateDependencyOnFrameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrameCreateDependencyOnJobRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrameCreateDependencyOnJobResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrameCreateDependencyOnLayerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrameCreateDependencyOnLayerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrameDropDependsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrameDropDependsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrameEatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrameEatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrameFindFrameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrameFindFrameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrameGetFrameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrameGetFrameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrameGetFramesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrameGetFramesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrameGetWhatDependsOnThisRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrameGetWhatDependsOnThisResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrameGetWhatThisDependsOnRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrameGetWhatThisDependsOnResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrameKillRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrameKillResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrameMarkAsDependRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrameMarkAsDependResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrameMarkAsWaitingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrameMarkAsWaitingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrameRetryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrameRetryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrameSetCheckpointStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrameSetCheckpointStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupCreateSubGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupCreateSubGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupFindGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupFindGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupGetGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupGetGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupGetGroupsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupGetGroupsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupGetJobsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupGetJobsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupReparentGroupsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupReparentGroupsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupReparentJobsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupReparentJobsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupSetDefJobMaxCoresRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupSetDefJobMaxCoresResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupSetDefJobMinCoresRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupSetDefJobMinCoresResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupSetDefJobMaxGpusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupSetDefJobMaxGpusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupSetDefJobMinGpusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupSetDefJobMinGpusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupSetDefJobPriorityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupSetDefJobPriorityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupSetDeptRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupSetDeptResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupSetGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupSetGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupSetMaxCoresRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupSetMaxCoresResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupSetMinCoresRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupSetMinCoresResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupSetMaxGpusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupSetMaxGpusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupSetMinGpusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupSetMinGpusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupSetNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupSetNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobAddCommentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobAddCommentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobAddRenderPartRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobAddRenderPartResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobCreateDependencyOnFrameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobCreateDependencyOnFrameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobCreateDependencyOnJobRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobCreateDependencyOnJobResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobCreateDependencyOnLayerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobCreateDependencyOnLayerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobDropDependsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobDropDependsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobEatFramesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobEatFramesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobFindJobRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobFindJobResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobGetCommentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobGetCommentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobGetCurrentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobGetCurrentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobGetDependsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobGetDependsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobGetFramesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobGetFramesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobGetJobRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobGetJobResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[118].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobGetJobsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[119].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobGetJobsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[120].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobGetJobNamesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[121].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobGetJobNamesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[122].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobGetLayersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[123].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobGetLayersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[124].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobGetUpdatedFramesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[125].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobGetUpdatedFramesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[126].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobGetWhatDependsOnThisRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[127].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobGetWhatDependsOnThisResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[128].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobGetWhatThisDependsOnRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[129].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobGetWhatThisDependsOnResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[130].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobIsJobPendingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[131].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobIsJobPendingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[132].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobKillRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[133].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobKillResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[134].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobKillFramesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[135].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobKillFramesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[136].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobLaunchSpecRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[137].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobLaunchSpecResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[138].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobLaunchSpecAndWaitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[139].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobLaunchSpecAndWaitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[140].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobMarkAsWaitingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[141].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobMarkAsWaitingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[142].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobMarkDoneFramesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[143].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobMarkDoneFramesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[144].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobPauseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[145].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobPauseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[146].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobReorderFramesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[147].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobReorderFramesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[148].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobResumeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[149].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobResumeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[150].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobRetryFramesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[151].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobRetryFramesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[152].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobRunFiltersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[153].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobRunFiltersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[154].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobSetAutoEatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[155].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobSetAutoEatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[156].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobSetGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[157].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobSetGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[158].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobSetMaxCoresRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[159].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobSetMaxCoresResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[160].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobSetMaxGpusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[161].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobSetMaxGpusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[162].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobSetMaxRetriesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[163].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobSetMaxRetriesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[164].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobSetMinCoresRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[165].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobSetMinCoresResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[166].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobSetMinGpusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[167].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobSetMinGpusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[168].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobSetPriorityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[169].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobSetPriorityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[170].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobShutdownIfCompletedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[171].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobShutdownIfCompletedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[172].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobStaggerFramesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[173].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobStaggerFramesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[174].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayerAddLimitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[175].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayerAddLimitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[176].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayerAddRenderPartitionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[177].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayerAddRenderPartitionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[178].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayerCreateDependOnFrameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[179].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayerCreateDependOnFrameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[180].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayerCreateDependOnJobRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[181].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayerCreateDependOnJobResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[182].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayerCreateDependOnLayerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[183].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayerCreateDependOnLayerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[184].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayerCreateFrameByFrameDependRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[185].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayerCreateFrameByFrameDependResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[186].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayerDropDependsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[187].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayerDropDependsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[188].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayerDropLimitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[189].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayerDropLimitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[190].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayerEatFramesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[191].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayerEatFramesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[192].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayerEnableMemoryOptimizerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[193].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayerEnableMemoryOptimizerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[194].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayerFindLayerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[195].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayerFindLayerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[196].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayerGetFramesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[197].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayerGetFramesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[198].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayerGetLayerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[199].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayerGetLayerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[200].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayerGetLimitsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[201].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayerGetLimitsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[202].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayerGetOutputPathsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[203].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayerGetOutputPathsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[204].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayerGetWhatDependsOnThisRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[205].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayerGetWhatDependsOnThisResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[206].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayerGetWhatThisDependsOnRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[207].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayerGetWhatThisDependsOnResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[208].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayerKillFramesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[209].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayerKillFramesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[210].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayerMarkdoneFramesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[211].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayerMarkdoneFramesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[212].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayerRetryFramesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[213].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayerRetryFramesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[214].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayerRegisterOutputPathRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[215].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayerRegisterOutputPathResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[216].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayerReorderFramesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[217].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayerReorderFramesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[218].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayerSetMaxCoresRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[219].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayerSetMaxCoresResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[220].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayerSetMinCoresRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[221].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayerSetMinCoresResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[222].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayerSetMinGpuRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[223].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayerSetMinGpuResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[224].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayerSetMaxGpusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[225].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayerSetMaxGpusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[226].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayerSetMinGpusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[227].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayerSetMinGpusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[228].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayerSetMinGpuMemoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[229].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayerSetMinGpuMemoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[230].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayerSetMinMemoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[231].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayerSetMinMemoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[232].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayerSetTagsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[233].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayerSetTagsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[234].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayerSetThreadableRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[235].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayerSetThreadableResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[236].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayerSetTimeoutRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[237].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayerSetTimeoutResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[238].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayerSetTimeoutLLURequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[239].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayerSetTimeoutLLUResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[240].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayerStaggerFramesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_job_proto_msgTypes[241].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayerStaggerFramesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_OpenCue_proto_job_proto_msgTypes[10].OneofWrappers = []interface{}{
		(*Job_Uid)(nil),
	}
	file_OpenCue_proto_job_proto_msgTypes[19].OneofWrappers = []interface{}{
		(*NestedJob_Uid)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_OpenCue_proto_job_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   242,
			NumExtensions: 0,
			NumServices:   4,
		},
		GoTypes:           file_OpenCue_proto_job_proto_goTypes,
		DependencyIndexes: file_OpenCue_proto_job_proto_depIdxs,
		EnumInfos:         file_OpenCue_proto_job_proto_enumTypes,
		MessageInfos:      file_OpenCue_proto_job_proto_msgTypes,
	}.Build()
	File_OpenCue_proto_job_proto = out.File
	file_OpenCue_proto_job_proto_rawDesc = nil
	file_OpenCue_proto_job_proto_goTypes = nil
	file_OpenCue_proto_job_proto_depIdxs = nil
}
