// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.25.3
// source: OpenCue/proto/renderPartition.proto

package renderPartition

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RenderPartitionType int32

const (
	RenderPartitionType_JOB_PARTITION   RenderPartitionType = 0
	RenderPartitionType_LAYER_PARTITION RenderPartitionType = 1
	RenderPartitionType_FRAME_PARTITION RenderPartitionType = 2
)

// Enum value maps for RenderPartitionType.
var (
	RenderPartitionType_name = map[int32]string{
		0: "JOB_PARTITION",
		1: "LAYER_PARTITION",
		2: "FRAME_PARTITION",
	}
	RenderPartitionType_value = map[string]int32{
		"JOB_PARTITION":   0,
		"LAYER_PARTITION": 1,
		"FRAME_PARTITION": 2,
	}
)

func (x RenderPartitionType) Enum() *RenderPartitionType {
	p := new(RenderPartitionType)
	*p = x
	return p
}

func (x RenderPartitionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RenderPartitionType) Descriptor() protoreflect.EnumDescriptor {
	return file_OpenCue_proto_renderPartition_proto_enumTypes[0].Descriptor()
}

func (RenderPartitionType) Type() protoreflect.EnumType {
	return &file_OpenCue_proto_renderPartition_proto_enumTypes[0]
}

func (x RenderPartitionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RenderPartitionType.Descriptor instead.
func (RenderPartitionType) EnumDescriptor() ([]byte, []int) {
	return file_OpenCue_proto_renderPartition_proto_rawDescGZIP(), []int{0}
}

type RenderPartition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Job            string              `protobuf:"bytes,2,opt,name=job,proto3" json:"job,omitempty"`
	Layer          string              `protobuf:"bytes,3,opt,name=layer,proto3" json:"layer,omitempty"`
	Frame          string              `protobuf:"bytes,4,opt,name=frame,proto3" json:"frame,omitempty"`
	RenderPartType RenderPartitionType `protobuf:"varint,5,opt,name=render_part_type,json=renderPartType,proto3,enum=renderPartition.RenderPartitionType" json:"render_part_type,omitempty"`
	Host           string              `protobuf:"bytes,6,opt,name=host,proto3" json:"host,omitempty"`
	Cores          int32               `protobuf:"varint,7,opt,name=cores,proto3" json:"cores,omitempty"`
	Memory         int64               `protobuf:"varint,8,opt,name=memory,proto3" json:"memory,omitempty"`
	MaxCores       int32               `protobuf:"varint,9,opt,name=max_cores,json=maxCores,proto3" json:"max_cores,omitempty"`
	MaxMemory      int64               `protobuf:"varint,10,opt,name=max_memory,json=maxMemory,proto3" json:"max_memory,omitempty"`
	MaxGpuMemory   int64               `protobuf:"varint,11,opt,name=max_gpu_memory,json=maxGpuMemory,proto3" json:"max_gpu_memory,omitempty"`
	Threads        int32               `protobuf:"varint,12,opt,name=threads,proto3" json:"threads,omitempty"`
	Gpus           int32               `protobuf:"varint,13,opt,name=gpus,proto3" json:"gpus,omitempty"`
	MaxGpus        int32               `protobuf:"varint,14,opt,name=max_gpus,json=maxGpus,proto3" json:"max_gpus,omitempty"`
	GpuMemory      int64               `protobuf:"varint,15,opt,name=gpu_memory,json=gpuMemory,proto3" json:"gpu_memory,omitempty"`
}

func (x *RenderPartition) Reset() {
	*x = RenderPartition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_renderPartition_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenderPartition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenderPartition) ProtoMessage() {}

func (x *RenderPartition) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_renderPartition_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenderPartition.ProtoReflect.Descriptor instead.
func (*RenderPartition) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_renderPartition_proto_rawDescGZIP(), []int{0}
}

func (x *RenderPartition) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RenderPartition) GetJob() string {
	if x != nil {
		return x.Job
	}
	return ""
}

func (x *RenderPartition) GetLayer() string {
	if x != nil {
		return x.Layer
	}
	return ""
}

func (x *RenderPartition) GetFrame() string {
	if x != nil {
		return x.Frame
	}
	return ""
}

func (x *RenderPartition) GetRenderPartType() RenderPartitionType {
	if x != nil {
		return x.RenderPartType
	}
	return RenderPartitionType_JOB_PARTITION
}

func (x *RenderPartition) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *RenderPartition) GetCores() int32 {
	if x != nil {
		return x.Cores
	}
	return 0
}

func (x *RenderPartition) GetMemory() int64 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *RenderPartition) GetMaxCores() int32 {
	if x != nil {
		return x.MaxCores
	}
	return 0
}

func (x *RenderPartition) GetMaxMemory() int64 {
	if x != nil {
		return x.MaxMemory
	}
	return 0
}

func (x *RenderPartition) GetMaxGpuMemory() int64 {
	if x != nil {
		return x.MaxGpuMemory
	}
	return 0
}

func (x *RenderPartition) GetThreads() int32 {
	if x != nil {
		return x.Threads
	}
	return 0
}

func (x *RenderPartition) GetGpus() int32 {
	if x != nil {
		return x.Gpus
	}
	return 0
}

func (x *RenderPartition) GetMaxGpus() int32 {
	if x != nil {
		return x.MaxGpus
	}
	return 0
}

func (x *RenderPartition) GetGpuMemory() int64 {
	if x != nil {
		return x.GpuMemory
	}
	return 0
}

type RenderPartitionSeq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RenderPartitions []*RenderPartition `protobuf:"bytes,1,rep,name=render_partitions,json=renderPartitions,proto3" json:"render_partitions,omitempty"`
}

func (x *RenderPartitionSeq) Reset() {
	*x = RenderPartitionSeq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_renderPartition_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenderPartitionSeq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenderPartitionSeq) ProtoMessage() {}

func (x *RenderPartitionSeq) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_renderPartition_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenderPartitionSeq.ProtoReflect.Descriptor instead.
func (*RenderPartitionSeq) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_renderPartition_proto_rawDescGZIP(), []int{1}
}

func (x *RenderPartitionSeq) GetRenderPartitions() []*RenderPartition {
	if x != nil {
		return x.RenderPartitions
	}
	return nil
}

type RenderPartDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RenderPartition *RenderPartition `protobuf:"bytes,1,opt,name=render_partition,json=renderPartition,proto3" json:"render_partition,omitempty"`
}

func (x *RenderPartDeleteRequest) Reset() {
	*x = RenderPartDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_renderPartition_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenderPartDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenderPartDeleteRequest) ProtoMessage() {}

func (x *RenderPartDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_renderPartition_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenderPartDeleteRequest.ProtoReflect.Descriptor instead.
func (*RenderPartDeleteRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_renderPartition_proto_rawDescGZIP(), []int{2}
}

func (x *RenderPartDeleteRequest) GetRenderPartition() *RenderPartition {
	if x != nil {
		return x.RenderPartition
	}
	return nil
}

type RenderPartDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RenderPartDeleteResponse) Reset() {
	*x = RenderPartDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_renderPartition_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenderPartDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenderPartDeleteResponse) ProtoMessage() {}

func (x *RenderPartDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_renderPartition_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenderPartDeleteResponse.ProtoReflect.Descriptor instead.
func (*RenderPartDeleteResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_renderPartition_proto_rawDescGZIP(), []int{3}
}

type RenderPartSetMaxResourcesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RenderPartition *RenderPartition `protobuf:"bytes,1,opt,name=render_partition,json=renderPartition,proto3" json:"render_partition,omitempty"`
	Cores           int32            `protobuf:"varint,2,opt,name=cores,proto3" json:"cores,omitempty"`
	Memory          int64            `protobuf:"varint,3,opt,name=memory,proto3" json:"memory,omitempty"`
	GpuMemory       int64            `protobuf:"varint,4,opt,name=gpu_memory,json=gpuMemory,proto3" json:"gpu_memory,omitempty"`
	Gpus            int32            `protobuf:"varint,5,opt,name=gpus,proto3" json:"gpus,omitempty"`
}

func (x *RenderPartSetMaxResourcesRequest) Reset() {
	*x = RenderPartSetMaxResourcesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_renderPartition_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenderPartSetMaxResourcesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenderPartSetMaxResourcesRequest) ProtoMessage() {}

func (x *RenderPartSetMaxResourcesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_renderPartition_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenderPartSetMaxResourcesRequest.ProtoReflect.Descriptor instead.
func (*RenderPartSetMaxResourcesRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_renderPartition_proto_rawDescGZIP(), []int{4}
}

func (x *RenderPartSetMaxResourcesRequest) GetRenderPartition() *RenderPartition {
	if x != nil {
		return x.RenderPartition
	}
	return nil
}

func (x *RenderPartSetMaxResourcesRequest) GetCores() int32 {
	if x != nil {
		return x.Cores
	}
	return 0
}

func (x *RenderPartSetMaxResourcesRequest) GetMemory() int64 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *RenderPartSetMaxResourcesRequest) GetGpuMemory() int64 {
	if x != nil {
		return x.GpuMemory
	}
	return 0
}

func (x *RenderPartSetMaxResourcesRequest) GetGpus() int32 {
	if x != nil {
		return x.Gpus
	}
	return 0
}

type RenderPartSetMaxResourcesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RenderPartSetMaxResourcesResponse) Reset() {
	*x = RenderPartSetMaxResourcesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_renderPartition_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenderPartSetMaxResourcesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenderPartSetMaxResourcesResponse) ProtoMessage() {}

func (x *RenderPartSetMaxResourcesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_renderPartition_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenderPartSetMaxResourcesResponse.ProtoReflect.Descriptor instead.
func (*RenderPartSetMaxResourcesResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_renderPartition_proto_rawDescGZIP(), []int{5}
}

var File_OpenCue_proto_renderPartition_proto protoreflect.FileDescriptor

var file_OpenCue_proto_renderPartition_proto_rawDesc = []byte{
	0x0a, 0x23, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x75, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x50, 0x61, 0x72,
	0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xbb, 0x03, 0x0a, 0x0f, 0x52, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6a, 0x6f,
	0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x4e, 0x0a, 0x10, 0x72, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x24, 0x2e, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x50, 0x61, 0x72, 0x74, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x50, 0x61, 0x72, 0x74, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0e, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x50, 0x61, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x72,
	0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61,
	0x78, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d,
	0x61, 0x78, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x5f, 0x6d,
	0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x61, 0x78,
	0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x61, 0x78, 0x5f, 0x67, 0x70,
	0x75, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c,
	0x6d, 0x61, 0x78, 0x47, 0x70, 0x75, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07,
	0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x74,
	0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x70, 0x75, 0x73, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x67, 0x70, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61,
	0x78, 0x5f, 0x67, 0x70, 0x75, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x61,
	0x78, 0x47, 0x70, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x70, 0x75, 0x5f, 0x6d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x67, 0x70, 0x75, 0x4d, 0x65,
	0x6d, 0x6f, 0x72, 0x79, 0x22, 0x63, 0x0a, 0x12, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x50, 0x61,
	0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x71, 0x12, 0x4d, 0x0a, 0x11, 0x72, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x50, 0x61,
	0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x50, 0x61,
	0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x10, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x50,
	0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x66, 0x0a, 0x17, 0x52, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x50, 0x61, 0x72, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x4b, 0x0a, 0x10, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0f, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x1a, 0x0a, 0x18, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x50, 0x61, 0x72, 0x74, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xd0, 0x01,
	0x0a, 0x20, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x50, 0x61, 0x72, 0x74, 0x53, 0x65, 0x74, 0x4d,
	0x61, 0x78, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x4b, 0x0a, 0x10, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x72,
	0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x72,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f,
	0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x63, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x1d, 0x0a,
	0x0a, 0x67, 0x70, 0x75, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x67, 0x70, 0x75, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04,
	0x67, 0x70, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x67, 0x70, 0x75, 0x73,
	0x22, 0x23, 0x0a, 0x21, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x50, 0x61, 0x72, 0x74, 0x53, 0x65,
	0x74, 0x4d, 0x61, 0x78, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0x52, 0x0a, 0x13, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x50,
	0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x11, 0x0a, 0x0d,
	0x4a, 0x4f, 0x42, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x00, 0x12,
	0x13, 0x0a, 0x0f, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x49, 0x54, 0x49,
	0x4f, 0x4e, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x5f, 0x50, 0x41,
	0x52, 0x54, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x02, 0x32, 0xf3, 0x01, 0x0a, 0x18, 0x52, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12, 0x5d, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x12, 0x28, 0x2e, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x50, 0x61, 0x72, 0x74, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x72, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x50, 0x61, 0x72, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x78, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x78, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x31, 0x2e, 0x72, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x50, 0x61, 0x72, 0x74, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x78, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x72, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x50, 0x61, 0x72, 0x74, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x78, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0x44, 0x0a, 0x29, 0x63, 0x6f, 0x6d, 0x2e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x77, 0x6f, 0x72, 0x6b,
	0x73, 0x2e, 0x73, 0x70, 0x63, 0x75, 0x65, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x72, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x01, 0x5a, 0x15,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_OpenCue_proto_renderPartition_proto_rawDescOnce sync.Once
	file_OpenCue_proto_renderPartition_proto_rawDescData = file_OpenCue_proto_renderPartition_proto_rawDesc
)

func file_OpenCue_proto_renderPartition_proto_rawDescGZIP() []byte {
	file_OpenCue_proto_renderPartition_proto_rawDescOnce.Do(func() {
		file_OpenCue_proto_renderPartition_proto_rawDescData = protoimpl.X.CompressGZIP(file_OpenCue_proto_renderPartition_proto_rawDescData)
	})
	return file_OpenCue_proto_renderPartition_proto_rawDescData
}

var file_OpenCue_proto_renderPartition_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_OpenCue_proto_renderPartition_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_OpenCue_proto_renderPartition_proto_goTypes = []interface{}{
	(RenderPartitionType)(0),                  // 0: renderPartition.RenderPartitionType
	(*RenderPartition)(nil),                   // 1: renderPartition.RenderPartition
	(*RenderPartitionSeq)(nil),                // 2: renderPartition.RenderPartitionSeq
	(*RenderPartDeleteRequest)(nil),           // 3: renderPartition.RenderPartDeleteRequest
	(*RenderPartDeleteResponse)(nil),          // 4: renderPartition.RenderPartDeleteResponse
	(*RenderPartSetMaxResourcesRequest)(nil),  // 5: renderPartition.RenderPartSetMaxResourcesRequest
	(*RenderPartSetMaxResourcesResponse)(nil), // 6: renderPartition.RenderPartSetMaxResourcesResponse
}
var file_OpenCue_proto_renderPartition_proto_depIdxs = []int32{
	0, // 0: renderPartition.RenderPartition.render_part_type:type_name -> renderPartition.RenderPartitionType
	1, // 1: renderPartition.RenderPartitionSeq.render_partitions:type_name -> renderPartition.RenderPartition
	1, // 2: renderPartition.RenderPartDeleteRequest.render_partition:type_name -> renderPartition.RenderPartition
	1, // 3: renderPartition.RenderPartSetMaxResourcesRequest.render_partition:type_name -> renderPartition.RenderPartition
	3, // 4: renderPartition.RenderPartitionInterface.Delete:input_type -> renderPartition.RenderPartDeleteRequest
	5, // 5: renderPartition.RenderPartitionInterface.SetMaxResources:input_type -> renderPartition.RenderPartSetMaxResourcesRequest
	4, // 6: renderPartition.RenderPartitionInterface.Delete:output_type -> renderPartition.RenderPartDeleteResponse
	6, // 7: renderPartition.RenderPartitionInterface.SetMaxResources:output_type -> renderPartition.RenderPartSetMaxResourcesResponse
	6, // [6:8] is the sub-list for method output_type
	4, // [4:6] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_OpenCue_proto_renderPartition_proto_init() }
func file_OpenCue_proto_renderPartition_proto_init() {
	if File_OpenCue_proto_renderPartition_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_OpenCue_proto_renderPartition_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RenderPartition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_renderPartition_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RenderPartitionSeq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_renderPartition_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RenderPartDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_renderPartition_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RenderPartDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_renderPartition_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RenderPartSetMaxResourcesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_renderPartition_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RenderPartSetMaxResourcesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_OpenCue_proto_renderPartition_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_OpenCue_proto_renderPartition_proto_goTypes,
		DependencyIndexes: file_OpenCue_proto_renderPartition_proto_depIdxs,
		EnumInfos:         file_OpenCue_proto_renderPartition_proto_enumTypes,
		MessageInfos:      file_OpenCue_proto_renderPartition_proto_msgTypes,
	}.Build()
	File_OpenCue_proto_renderPartition_proto = out.File
	file_OpenCue_proto_renderPartition_proto_rawDesc = nil
	file_OpenCue_proto_renderPartition_proto_goTypes = nil
	file_OpenCue_proto_renderPartition_proto_depIdxs = nil
}
