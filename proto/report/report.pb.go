// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.25.3
// source: OpenCue/proto/report.proto

package report

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	host "github.com/reski-rukmantiyo/go-pycue/proto/host"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BootReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host     *RenderHost `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	CoreInfo *CoreDetail `protobuf:"bytes,2,opt,name=core_info,json=coreInfo,proto3" json:"core_info,omitempty"`
}

func (x *BootReport) Reset() {
	*x = BootReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_report_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BootReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootReport) ProtoMessage() {}

func (x *BootReport) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_report_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootReport.ProtoReflect.Descriptor instead.
func (*BootReport) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_report_proto_rawDescGZIP(), []int{0}
}

func (x *BootReport) GetHost() *RenderHost {
	if x != nil {
		return x.Host
	}
	return nil
}

func (x *BootReport) GetCoreInfo() *CoreDetail {
	if x != nil {
		return x.CoreInfo
	}
	return nil
}

type CoreDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalCores  int32 `protobuf:"varint,1,opt,name=total_cores,json=totalCores,proto3" json:"total_cores,omitempty"`
	IdleCores   int32 `protobuf:"varint,2,opt,name=idle_cores,json=idleCores,proto3" json:"idle_cores,omitempty"`
	LockedCores int32 `protobuf:"varint,3,opt,name=locked_cores,json=lockedCores,proto3" json:"locked_cores,omitempty"`
	BookedCores int32 `protobuf:"varint,4,opt,name=booked_cores,json=bookedCores,proto3" json:"booked_cores,omitempty"`
	// map <key: physid, value: coreid>
	ReservedCores map[int64]*CoreId `protobuf:"bytes,5,rep,name=reserved_cores,json=reservedCores,proto3" json:"reserved_cores,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CoreDetail) Reset() {
	*x = CoreDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_report_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoreDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoreDetail) ProtoMessage() {}

func (x *CoreDetail) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_report_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoreDetail.ProtoReflect.Descriptor instead.
func (*CoreDetail) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_report_proto_rawDescGZIP(), []int{1}
}

func (x *CoreDetail) GetTotalCores() int32 {
	if x != nil {
		return x.TotalCores
	}
	return 0
}

func (x *CoreDetail) GetIdleCores() int32 {
	if x != nil {
		return x.IdleCores
	}
	return 0
}

func (x *CoreDetail) GetLockedCores() int32 {
	if x != nil {
		return x.LockedCores
	}
	return 0
}

func (x *CoreDetail) GetBookedCores() int32 {
	if x != nil {
		return x.BookedCores
	}
	return 0
}

func (x *CoreDetail) GetReservedCores() map[int64]*CoreId {
	if x != nil {
		return x.ReservedCores
	}
	return nil
}

type CoreId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Coreid []int64 `protobuf:"varint,1,rep,packed,name=coreid,proto3" json:"coreid,omitempty"`
}

func (x *CoreId) Reset() {
	*x = CoreId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_report_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoreId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoreId) ProtoMessage() {}

func (x *CoreId) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_report_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoreId.ProtoReflect.Descriptor instead.
func (*CoreId) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_report_proto_rawDescGZIP(), []int{2}
}

func (x *CoreId) GetCoreid() []int64 {
	if x != nil {
		return x.Coreid
	}
	return nil
}

type FrameCompleteReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host       *RenderHost       `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Frame      *RunningFrameInfo `protobuf:"bytes,2,opt,name=frame,proto3" json:"frame,omitempty"`
	ExitStatus int32             `protobuf:"varint,3,opt,name=exit_status,json=exitStatus,proto3" json:"exit_status,omitempty"`
	ExitSignal int32             `protobuf:"varint,4,opt,name=exit_signal,json=exitSignal,proto3" json:"exit_signal,omitempty"`
	RunTime    int32             `protobuf:"varint,5,opt,name=run_time,json=runTime,proto3" json:"run_time,omitempty"`
}

func (x *FrameCompleteReport) Reset() {
	*x = FrameCompleteReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_report_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrameCompleteReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrameCompleteReport) ProtoMessage() {}

func (x *FrameCompleteReport) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_report_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrameCompleteReport.ProtoReflect.Descriptor instead.
func (*FrameCompleteReport) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_report_proto_rawDescGZIP(), []int{3}
}

func (x *FrameCompleteReport) GetHost() *RenderHost {
	if x != nil {
		return x.Host
	}
	return nil
}

func (x *FrameCompleteReport) GetFrame() *RunningFrameInfo {
	if x != nil {
		return x.Frame
	}
	return nil
}

func (x *FrameCompleteReport) GetExitStatus() int32 {
	if x != nil {
		return x.ExitStatus
	}
	return 0
}

func (x *FrameCompleteReport) GetExitSignal() int32 {
	if x != nil {
		return x.ExitSignal
	}
	return 0
}

func (x *FrameCompleteReport) GetRunTime() int32 {
	if x != nil {
		return x.RunTime
	}
	return 0
}

type HostReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host     *RenderHost         `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Frames   []*RunningFrameInfo `protobuf:"bytes,2,rep,name=frames,proto3" json:"frames,omitempty"`
	CoreInfo *CoreDetail         `protobuf:"bytes,3,opt,name=core_info,json=coreInfo,proto3" json:"core_info,omitempty"`
}

func (x *HostReport) Reset() {
	*x = HostReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_report_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostReport) ProtoMessage() {}

func (x *HostReport) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_report_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostReport.ProtoReflect.Descriptor instead.
func (*HostReport) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_report_proto_rawDescGZIP(), []int{4}
}

func (x *HostReport) GetHost() *RenderHost {
	if x != nil {
		return x.Host
	}
	return nil
}

func (x *HostReport) GetFrames() []*RunningFrameInfo {
	if x != nil {
		return x.Frames
	}
	return nil
}

func (x *HostReport) GetCoreInfo() *CoreDetail {
	if x != nil {
		return x.CoreInfo
	}
	return nil
}

type RenderHost struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string             `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	NimbyEnabled bool               `protobuf:"varint,2,opt,name=nimby_enabled,json=nimbyEnabled,proto3" json:"nimby_enabled,omitempty"`                                                                 // NIMBY is enabled when the machine is in run level 5.
	NimbyLocked  bool               `protobuf:"varint,3,opt,name=nimby_locked,json=nimbyLocked,proto3" json:"nimby_locked,omitempty"`                                                                    // if nimby has locked the host due to user activity
	Facility     string             `protobuf:"bytes,4,opt,name=facility,proto3" json:"facility,omitempty"`                                                                                              // The name of the facility that the host is in
	NumProcs     int32              `protobuf:"varint,5,opt,name=num_procs,json=numProcs,proto3" json:"num_procs,omitempty"`                                                                             // the number of physical procs on this machine
	CoresPerProc int32              `protobuf:"varint,6,opt,name=cores_per_proc,json=coresPerProc,proto3" json:"cores_per_proc,omitempty"`                                                               // the number of cores per proc
	TotalSwap    int64              `protobuf:"varint,7,opt,name=total_swap,json=totalSwap,proto3" json:"total_swap,omitempty"`                                                                          // the total size of the swap in kB
	TotalMem     int64              `protobuf:"varint,8,opt,name=total_mem,json=totalMem,proto3" json:"total_mem,omitempty"`                                                                             // the total size of the main memory pool in kB
	TotalMcp     int64              `protobuf:"varint,9,opt,name=total_mcp,json=totalMcp,proto3" json:"total_mcp,omitempty"`                                                                             // the total size of MCP in kB
	FreeSwap     int64              `protobuf:"varint,10,opt,name=free_swap,json=freeSwap,proto3" json:"free_swap,omitempty"`                                                                            // the current amount of free swap in kB
	FreeMem      int64              `protobuf:"varint,11,opt,name=free_mem,json=freeMem,proto3" json:"free_mem,omitempty"`                                                                               // the current amount of free memory in kB
	FreeMcp      int64              `protobuf:"varint,12,opt,name=free_mcp,json=freeMcp,proto3" json:"free_mcp,omitempty"`                                                                               // the current amount of free MCP in kB
	Load         int32              `protobuf:"varint,13,opt,name=load,proto3" json:"load,omitempty"`                                                                                                    // the current load on the proc
	BootTime     int32              `protobuf:"varint,14,opt,name=boot_time,json=bootTime,proto3" json:"boot_time,omitempty"`                                                                            // the time the proc was booted
	Tags         []string           `protobuf:"bytes,15,rep,name=tags,proto3" json:"tags,omitempty"`                                                                                                     // an array of default tags that are added to the host record
	State        host.HardwareState `protobuf:"varint,16,opt,name=state,proto3,enum=host.HardwareState" json:"state,omitempty"`                                                                          // hardware state for the host
	Attributes   map[string]string  `protobuf:"bytes,17,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // additional data can be provided about the host
	NumGpus      int32              `protobuf:"varint,18,opt,name=num_gpus,json=numGpus,proto3" json:"num_gpus,omitempty"`                                                                               // the number of physical GPU's
	FreeGpuMem   int64              `protobuf:"varint,19,opt,name=free_gpu_mem,json=freeGpuMem,proto3" json:"free_gpu_mem,omitempty"`                                                                    // the current amount of free gpu memory in kB
	TotalGpuMem  int64              `protobuf:"varint,20,opt,name=total_gpu_mem,json=totalGpuMem,proto3" json:"total_gpu_mem,omitempty"`                                                                 // the total size of gpu memory in kB
}

func (x *RenderHost) Reset() {
	*x = RenderHost{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_report_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenderHost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenderHost) ProtoMessage() {}

func (x *RenderHost) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_report_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenderHost.ProtoReflect.Descriptor instead.
func (*RenderHost) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_report_proto_rawDescGZIP(), []int{5}
}

func (x *RenderHost) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RenderHost) GetNimbyEnabled() bool {
	if x != nil {
		return x.NimbyEnabled
	}
	return false
}

func (x *RenderHost) GetNimbyLocked() bool {
	if x != nil {
		return x.NimbyLocked
	}
	return false
}

func (x *RenderHost) GetFacility() string {
	if x != nil {
		return x.Facility
	}
	return ""
}

func (x *RenderHost) GetNumProcs() int32 {
	if x != nil {
		return x.NumProcs
	}
	return 0
}

func (x *RenderHost) GetCoresPerProc() int32 {
	if x != nil {
		return x.CoresPerProc
	}
	return 0
}

func (x *RenderHost) GetTotalSwap() int64 {
	if x != nil {
		return x.TotalSwap
	}
	return 0
}

func (x *RenderHost) GetTotalMem() int64 {
	if x != nil {
		return x.TotalMem
	}
	return 0
}

func (x *RenderHost) GetTotalMcp() int64 {
	if x != nil {
		return x.TotalMcp
	}
	return 0
}

func (x *RenderHost) GetFreeSwap() int64 {
	if x != nil {
		return x.FreeSwap
	}
	return 0
}

func (x *RenderHost) GetFreeMem() int64 {
	if x != nil {
		return x.FreeMem
	}
	return 0
}

func (x *RenderHost) GetFreeMcp() int64 {
	if x != nil {
		return x.FreeMcp
	}
	return 0
}

func (x *RenderHost) GetLoad() int32 {
	if x != nil {
		return x.Load
	}
	return 0
}

func (x *RenderHost) GetBootTime() int32 {
	if x != nil {
		return x.BootTime
	}
	return 0
}

func (x *RenderHost) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *RenderHost) GetState() host.HardwareState {
	if x != nil {
		return x.State
	}
	return host.HardwareState(0)
}

func (x *RenderHost) GetAttributes() map[string]string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *RenderHost) GetNumGpus() int32 {
	if x != nil {
		return x.NumGpus
	}
	return 0
}

func (x *RenderHost) GetFreeGpuMem() int64 {
	if x != nil {
		return x.FreeGpuMem
	}
	return 0
}

func (x *RenderHost) GetTotalGpuMem() int64 {
	if x != nil {
		return x.TotalGpuMem
	}
	return 0
}

type RunningFrameInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceId       string             `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	JobId            string             `protobuf:"bytes,2,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	JobName          string             `protobuf:"bytes,3,opt,name=job_name,json=jobName,proto3" json:"job_name,omitempty"`
	FrameId          string             `protobuf:"bytes,4,opt,name=frame_id,json=frameId,proto3" json:"frame_id,omitempty"`
	FrameName        string             `protobuf:"bytes,5,opt,name=frame_name,json=frameName,proto3" json:"frame_name,omitempty"`
	LayerId          string             `protobuf:"bytes,6,opt,name=layer_id,json=layerId,proto3" json:"layer_id,omitempty"`
	NumCores         int32              `protobuf:"varint,7,opt,name=num_cores,json=numCores,proto3" json:"num_cores,omitempty"`
	StartTime        int64              `protobuf:"varint,8,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	MaxRss           int64              `protobuf:"varint,9,opt,name=max_rss,json=maxRss,proto3" json:"max_rss,omitempty"`                                                                                   // kB
	Rss              int64              `protobuf:"varint,10,opt,name=rss,proto3" json:"rss,omitempty"`                                                                                                      // kB
	MaxVsize         int64              `protobuf:"varint,11,opt,name=max_vsize,json=maxVsize,proto3" json:"max_vsize,omitempty"`                                                                            // kB
	Vsize            int64              `protobuf:"varint,12,opt,name=vsize,proto3" json:"vsize,omitempty"`                                                                                                  // kB
	Attributes       map[string]string  `protobuf:"bytes,13,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` //additional data can be provided about the running frame
	LluTime          int64              `protobuf:"varint,14,opt,name=llu_time,json=lluTime,proto3" json:"llu_time,omitempty"`
	NumGpus          int32              `protobuf:"varint,15,opt,name=num_gpus,json=numGpus,proto3" json:"num_gpus,omitempty"`
	MaxUsedGpuMemory int64              `protobuf:"varint,16,opt,name=max_used_gpu_memory,json=maxUsedGpuMemory,proto3" json:"max_used_gpu_memory,omitempty"` // kB
	UsedGpuMemory    int64              `protobuf:"varint,17,opt,name=used_gpu_memory,json=usedGpuMemory,proto3" json:"used_gpu_memory,omitempty"`            // kB
	Children         *ChildrenProcStats `protobuf:"bytes,18,opt,name=children,proto3" json:"children,omitempty"`                                              //additional data about the running frame's child processes
}

func (x *RunningFrameInfo) Reset() {
	*x = RunningFrameInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_report_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunningFrameInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunningFrameInfo) ProtoMessage() {}

func (x *RunningFrameInfo) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_report_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunningFrameInfo.ProtoReflect.Descriptor instead.
func (*RunningFrameInfo) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_report_proto_rawDescGZIP(), []int{6}
}

func (x *RunningFrameInfo) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *RunningFrameInfo) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *RunningFrameInfo) GetJobName() string {
	if x != nil {
		return x.JobName
	}
	return ""
}

func (x *RunningFrameInfo) GetFrameId() string {
	if x != nil {
		return x.FrameId
	}
	return ""
}

func (x *RunningFrameInfo) GetFrameName() string {
	if x != nil {
		return x.FrameName
	}
	return ""
}

func (x *RunningFrameInfo) GetLayerId() string {
	if x != nil {
		return x.LayerId
	}
	return ""
}

func (x *RunningFrameInfo) GetNumCores() int32 {
	if x != nil {
		return x.NumCores
	}
	return 0
}

func (x *RunningFrameInfo) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *RunningFrameInfo) GetMaxRss() int64 {
	if x != nil {
		return x.MaxRss
	}
	return 0
}

func (x *RunningFrameInfo) GetRss() int64 {
	if x != nil {
		return x.Rss
	}
	return 0
}

func (x *RunningFrameInfo) GetMaxVsize() int64 {
	if x != nil {
		return x.MaxVsize
	}
	return 0
}

func (x *RunningFrameInfo) GetVsize() int64 {
	if x != nil {
		return x.Vsize
	}
	return 0
}

func (x *RunningFrameInfo) GetAttributes() map[string]string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *RunningFrameInfo) GetLluTime() int64 {
	if x != nil {
		return x.LluTime
	}
	return 0
}

func (x *RunningFrameInfo) GetNumGpus() int32 {
	if x != nil {
		return x.NumGpus
	}
	return 0
}

func (x *RunningFrameInfo) GetMaxUsedGpuMemory() int64 {
	if x != nil {
		return x.MaxUsedGpuMemory
	}
	return 0
}

func (x *RunningFrameInfo) GetUsedGpuMemory() int64 {
	if x != nil {
		return x.UsedGpuMemory
	}
	return 0
}

func (x *RunningFrameInfo) GetChildren() *ChildrenProcStats {
	if x != nil {
		return x.Children
	}
	return nil
}

type ChildrenProcStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Children []*ProcStats `protobuf:"bytes,2,rep,name=children,proto3" json:"children,omitempty"`
}

func (x *ChildrenProcStats) Reset() {
	*x = ChildrenProcStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_report_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChildrenProcStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChildrenProcStats) ProtoMessage() {}

func (x *ChildrenProcStats) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_report_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChildrenProcStats.ProtoReflect.Descriptor instead.
func (*ChildrenProcStats) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_report_proto_rawDescGZIP(), []int{7}
}

func (x *ChildrenProcStats) GetChildren() []*ProcStats {
	if x != nil {
		return x.Children
	}
	return nil
}

type ProcStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stat      *Stat   `protobuf:"bytes,1,opt,name=stat,proto3" json:"stat,omitempty"`
	Statm     *Statm  `protobuf:"bytes,2,opt,name=statm,proto3" json:"statm,omitempty"`
	Status    *Status `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Cmdline   string  `protobuf:"bytes,4,opt,name=cmdline,proto3" json:"cmdline,omitempty"`
	StartTime string  `protobuf:"bytes,5,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
}

func (x *ProcStats) Reset() {
	*x = ProcStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_report_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcStats) ProtoMessage() {}

func (x *ProcStats) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_report_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcStats.ProtoReflect.Descriptor instead.
func (*ProcStats) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_report_proto_rawDescGZIP(), []int{8}
}

func (x *ProcStats) GetStat() *Stat {
	if x != nil {
		return x.Stat
	}
	return nil
}

func (x *ProcStats) GetStatm() *Statm {
	if x != nil {
		return x.Statm
	}
	return nil
}

func (x *ProcStats) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ProcStats) GetCmdline() string {
	if x != nil {
		return x.Cmdline
	}
	return ""
}

func (x *ProcStats) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

type Stat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rss   int64  `protobuf:"varint,1,opt,name=rss,proto3" json:"rss,omitempty"`
	Vsize int64  `protobuf:"varint,2,opt,name=vsize,proto3" json:"vsize,omitempty"`
	State string `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
	Name  string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Pid   string `protobuf:"bytes,5,opt,name=pid,proto3" json:"pid,omitempty"`
}

func (x *Stat) Reset() {
	*x = Stat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_report_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stat) ProtoMessage() {}

func (x *Stat) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_report_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stat.ProtoReflect.Descriptor instead.
func (*Stat) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_report_proto_rawDescGZIP(), []int{9}
}

func (x *Stat) GetRss() int64 {
	if x != nil {
		return x.Rss
	}
	return 0
}

func (x *Stat) GetVsize() int64 {
	if x != nil {
		return x.Vsize
	}
	return 0
}

func (x *Stat) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *Stat) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Stat) GetPid() string {
	if x != nil {
		return x.Pid
	}
	return ""
}

type Statm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rss  int64 `protobuf:"varint,1,opt,name=rss,proto3" json:"rss,omitempty"`
	Size int64 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *Statm) Reset() {
	*x = Statm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_report_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Statm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Statm) ProtoMessage() {}

func (x *Statm) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_report_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Statm.ProtoReflect.Descriptor instead.
func (*Statm) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_report_proto_rawDescGZIP(), []int{10}
}

func (x *Statm) GetRss() int64 {
	if x != nil {
		return x.Rss
	}
	return 0
}

func (x *Statm) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vrss  int64 `protobuf:"varint,1,opt,name=vrss,proto3" json:"vrss,omitempty"`
	Vsize int64 `protobuf:"varint,2,opt,name=vsize,proto3" json:"vsize,omitempty"`
}

func (x *Status) Reset() {
	*x = Status{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_report_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Status) ProtoMessage() {}

func (x *Status) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_report_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Status.ProtoReflect.Descriptor instead.
func (*Status) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_report_proto_rawDescGZIP(), []int{11}
}

func (x *Status) GetVrss() int64 {
	if x != nil {
		return x.Vrss
	}
	return 0
}

func (x *Status) GetVsize() int64 {
	if x != nil {
		return x.Vsize
	}
	return 0
}

type ChildrenProcStatsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FrameId  string       `protobuf:"bytes,1,opt,name=frame_id,json=frameId,proto3" json:"frame_id,omitempty"`
	Children []*ProcStats `protobuf:"bytes,2,rep,name=children,proto3" json:"children,omitempty"`
}

func (x *ChildrenProcStatsRequest) Reset() {
	*x = ChildrenProcStatsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_report_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChildrenProcStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChildrenProcStatsRequest) ProtoMessage() {}

func (x *ChildrenProcStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_report_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChildrenProcStatsRequest.ProtoReflect.Descriptor instead.
func (*ChildrenProcStatsRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_report_proto_rawDescGZIP(), []int{12}
}

func (x *ChildrenProcStatsRequest) GetFrameId() string {
	if x != nil {
		return x.FrameId
	}
	return ""
}

func (x *ChildrenProcStatsRequest) GetChildren() []*ProcStats {
	if x != nil {
		return x.Children
	}
	return nil
}

type ChildrenProcStatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChildrenProcsStats *ChildrenProcStats `protobuf:"bytes,1,opt,name=children_procs_stats,json=childrenProcsStats,proto3" json:"children_procs_stats,omitempty"`
}

func (x *ChildrenProcStatsResponse) Reset() {
	*x = ChildrenProcStatsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_report_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChildrenProcStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChildrenProcStatsResponse) ProtoMessage() {}

func (x *ChildrenProcStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_report_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChildrenProcStatsResponse.ProtoReflect.Descriptor instead.
func (*ChildrenProcStatsResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_report_proto_rawDescGZIP(), []int{13}
}

func (x *ChildrenProcStatsResponse) GetChildrenProcsStats() *ChildrenProcStats {
	if x != nil {
		return x.ChildrenProcsStats
	}
	return nil
}

type ProcStatsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Stat    string `protobuf:"bytes,2,opt,name=stat,proto3" json:"stat,omitempty"`
	Statm   string `protobuf:"bytes,3,opt,name=statm,proto3" json:"statm,omitempty"`
	Cmdline string `protobuf:"bytes,4,opt,name=cmdline,proto3" json:"cmdline,omitempty"`
	State   string `protobuf:"bytes,5,opt,name=state,proto3" json:"state,omitempty"`
	FrameId string `protobuf:"bytes,6,opt,name=frame_id,json=frameId,proto3" json:"frame_id,omitempty"`
}

func (x *ProcStatsRequest) Reset() {
	*x = ProcStatsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_report_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcStatsRequest) ProtoMessage() {}

func (x *ProcStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_report_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcStatsRequest.ProtoReflect.Descriptor instead.
func (*ProcStatsRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_report_proto_rawDescGZIP(), []int{14}
}

func (x *ProcStatsRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProcStatsRequest) GetStat() string {
	if x != nil {
		return x.Stat
	}
	return ""
}

func (x *ProcStatsRequest) GetStatm() string {
	if x != nil {
		return x.Statm
	}
	return ""
}

func (x *ProcStatsRequest) GetCmdline() string {
	if x != nil {
		return x.Cmdline
	}
	return ""
}

func (x *ProcStatsRequest) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *ProcStatsRequest) GetFrameId() string {
	if x != nil {
		return x.FrameId
	}
	return ""
}

type ProcStatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProcStats *ProcStats `protobuf:"bytes,1,opt,name=proc_stats,json=procStats,proto3" json:"proc_stats,omitempty"`
}

func (x *ProcStatsResponse) Reset() {
	*x = ProcStatsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_report_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcStatsResponse) ProtoMessage() {}

func (x *ProcStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_report_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcStatsResponse.ProtoReflect.Descriptor instead.
func (*ProcStatsResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_report_proto_rawDescGZIP(), []int{15}
}

func (x *ProcStatsResponse) GetProcStats() *ProcStats {
	if x != nil {
		return x.ProcStats
	}
	return nil
}

// ReportRqdStartup
type RqdReportRqdStartupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BootReport *BootReport `protobuf:"bytes,1,opt,name=boot_report,json=bootReport,proto3" json:"boot_report,omitempty"`
}

func (x *RqdReportRqdStartupRequest) Reset() {
	*x = RqdReportRqdStartupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_report_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RqdReportRqdStartupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RqdReportRqdStartupRequest) ProtoMessage() {}

func (x *RqdReportRqdStartupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_report_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RqdReportRqdStartupRequest.ProtoReflect.Descriptor instead.
func (*RqdReportRqdStartupRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_report_proto_rawDescGZIP(), []int{16}
}

func (x *RqdReportRqdStartupRequest) GetBootReport() *BootReport {
	if x != nil {
		return x.BootReport
	}
	return nil
}

type RqdReportRqdStartupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RqdReportRqdStartupResponse) Reset() {
	*x = RqdReportRqdStartupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_report_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RqdReportRqdStartupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RqdReportRqdStartupResponse) ProtoMessage() {}

func (x *RqdReportRqdStartupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_report_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RqdReportRqdStartupResponse.ProtoReflect.Descriptor instead.
func (*RqdReportRqdStartupResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_report_proto_rawDescGZIP(), []int{17}
}

// ReportRunningFrameCompletion
type RqdReportRunningFrameCompletionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FrameCompleteReport *FrameCompleteReport `protobuf:"bytes,1,opt,name=frame_complete_report,json=frameCompleteReport,proto3" json:"frame_complete_report,omitempty"`
}

func (x *RqdReportRunningFrameCompletionRequest) Reset() {
	*x = RqdReportRunningFrameCompletionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_report_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RqdReportRunningFrameCompletionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RqdReportRunningFrameCompletionRequest) ProtoMessage() {}

func (x *RqdReportRunningFrameCompletionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_report_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RqdReportRunningFrameCompletionRequest.ProtoReflect.Descriptor instead.
func (*RqdReportRunningFrameCompletionRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_report_proto_rawDescGZIP(), []int{18}
}

func (x *RqdReportRunningFrameCompletionRequest) GetFrameCompleteReport() *FrameCompleteReport {
	if x != nil {
		return x.FrameCompleteReport
	}
	return nil
}

type RqdReportRunningFrameCompletionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RqdReportRunningFrameCompletionResponse) Reset() {
	*x = RqdReportRunningFrameCompletionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_report_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RqdReportRunningFrameCompletionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RqdReportRunningFrameCompletionResponse) ProtoMessage() {}

func (x *RqdReportRunningFrameCompletionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_report_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RqdReportRunningFrameCompletionResponse.ProtoReflect.Descriptor instead.
func (*RqdReportRunningFrameCompletionResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_report_proto_rawDescGZIP(), []int{19}
}

// ReportStatus
type RqdReportStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HostReport *HostReport `protobuf:"bytes,1,opt,name=host_report,json=hostReport,proto3" json:"host_report,omitempty"`
}

func (x *RqdReportStatusRequest) Reset() {
	*x = RqdReportStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_report_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RqdReportStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RqdReportStatusRequest) ProtoMessage() {}

func (x *RqdReportStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_report_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RqdReportStatusRequest.ProtoReflect.Descriptor instead.
func (*RqdReportStatusRequest) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_report_proto_rawDescGZIP(), []int{20}
}

func (x *RqdReportStatusRequest) GetHostReport() *HostReport {
	if x != nil {
		return x.HostReport
	}
	return nil
}

type RqdReportStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RqdReportStatusResponse) Reset() {
	*x = RqdReportStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenCue_proto_report_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RqdReportStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RqdReportStatusResponse) ProtoMessage() {}

func (x *RqdReportStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OpenCue_proto_report_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RqdReportStatusResponse.ProtoReflect.Descriptor instead.
func (*RqdReportStatusResponse) Descriptor() ([]byte, []int) {
	return file_OpenCue_proto_report_proto_rawDescGZIP(), []int{21}
}

var File_OpenCue_proto_report_proto protoreflect.FileDescriptor

var file_OpenCue_proto_report_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x75, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x72, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x1a, 0x18, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x75, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x65,
	0x0a, 0x0a, 0x42, 0x6f, 0x6f, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x26, 0x0a, 0x04,
	0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x2e, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x04,
	0x68, 0x6f, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x09, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x2e, 0x43, 0x6f, 0x72, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x08, 0x63, 0x6f, 0x72,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xb2, 0x02, 0x0a, 0x0a, 0x43, 0x6f, 0x72, 0x65, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f,
	0x72, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x43, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x64, 0x6c, 0x65, 0x5f, 0x63, 0x6f,
	0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x64, 0x6c, 0x65, 0x43,
	0x6f, 0x72, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x5f, 0x63,
	0x6f, 0x72, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6c, 0x6f, 0x63, 0x6b,
	0x65, 0x64, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6f, 0x6f, 0x6b, 0x65,
	0x64, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x62,
	0x6f, 0x6f, 0x6b, 0x65, 0x64, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x4c, 0x0a, 0x0e, 0x72, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x43, 0x6f, 0x72, 0x65,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x43,
	0x6f, 0x72, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x64, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x1a, 0x50, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x64, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x24, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x43, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x20, 0x0a, 0x06, 0x43, 0x6f,
	0x72, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x72, 0x65, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x06, 0x63, 0x6f, 0x72, 0x65, 0x69, 0x64, 0x22, 0xca, 0x01, 0x0a,
	0x13, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x12, 0x26, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x52, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x05,
	0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x72, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x2e, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x46, 0x72, 0x61, 0x6d,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x65, 0x78, 0x69, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x65, 0x78, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a,
	0x0b, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x65, 0x78, 0x69, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x12, 0x19,
	0x0a, 0x08, 0x72, 0x75, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x72, 0x75, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x97, 0x01, 0x0a, 0x0a, 0x48, 0x6f,
	0x73, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x26, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e,
	0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74,
	0x12, 0x30, 0x0a, 0x06, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e,
	0x67, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x66, 0x72, 0x61, 0x6d,
	0x65, 0x73, 0x12, 0x2f, 0x0a, 0x09, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x43,
	0x6f, 0x72, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x08, 0x63, 0x6f, 0x72, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0xc7, 0x05, 0x0a, 0x0a, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x48, 0x6f,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6e, 0x69, 0x6d, 0x62, 0x79, 0x5f,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x6e,
	0x69, 0x6d, 0x62, 0x79, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6e,
	0x69, 0x6d, 0x62, 0x79, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0b, 0x6e, 0x69, 0x6d, 0x62, 0x79, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x75,
	0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6e,
	0x75, 0x6d, 0x50, 0x72, 0x6f, 0x63, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x6f, 0x72, 0x65, 0x73,
	0x5f, 0x70, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x50, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x63, 0x12, 0x1d, 0x0a,
	0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x77, 0x61, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x77, 0x61, 0x70, 0x12, 0x1b, 0x0a, 0x09,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6d, 0x65, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4d, 0x65, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x6d, 0x63, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x4d, 0x63, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x73,
	0x77, 0x61, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x66, 0x72, 0x65, 0x65, 0x53,
	0x77, 0x61, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x6d, 0x65, 0x6d, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x66, 0x72, 0x65, 0x65, 0x4d, 0x65, 0x6d, 0x12, 0x19,
	0x0a, 0x08, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x6d, 0x63, 0x70, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x66, 0x72, 0x65, 0x65, 0x4d, 0x63, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x61,
	0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x62, 0x6f, 0x6f, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x62, 0x6f, 0x6f, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61,
	0x67, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x29,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e,
	0x68, 0x6f, 0x73, 0x74, 0x2e, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x42, 0x0a, 0x0a, 0x61, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x11, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x48, 0x6f, 0x73,
	0x74, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x19, 0x0a,
	0x08, 0x6e, 0x75, 0x6d, 0x5f, 0x67, 0x70, 0x75, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x6e, 0x75, 0x6d, 0x47, 0x70, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0c, 0x66, 0x72, 0x65, 0x65,
	0x5f, 0x67, 0x70, 0x75, 0x5f, 0x6d, 0x65, 0x6d, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x66, 0x72, 0x65, 0x65, 0x47, 0x70, 0x75, 0x4d, 0x65, 0x6d, 0x12, 0x22, 0x0a, 0x0d, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x67, 0x70, 0x75, 0x5f, 0x6d, 0x65, 0x6d, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x47, 0x70, 0x75, 0x4d, 0x65, 0x6d, 0x1a, 0x3d,
	0x0a, 0x0f, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xa1, 0x05,
	0x0a, 0x10, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x6f,
	0x62, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x6f,
	0x62, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x75,
	0x6d, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6e,
	0x75, 0x6d, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x61, 0x78, 0x5f, 0x72, 0x73,
	0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6d, 0x61, 0x78, 0x52, 0x73, 0x73, 0x12,
	0x10, 0x0a, 0x03, 0x72, 0x73, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x72, 0x73,
	0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x76, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x56, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76,
	0x73, 0x69, 0x7a, 0x65, 0x12, 0x48, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x2e, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x19,
	0x0a, 0x08, 0x6c, 0x6c, 0x75, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x6c, 0x6c, 0x75, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x75, 0x6d,
	0x5f, 0x67, 0x70, 0x75, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6e, 0x75, 0x6d,
	0x47, 0x70, 0x75, 0x73, 0x12, 0x2d, 0x0a, 0x13, 0x6d, 0x61, 0x78, 0x5f, 0x75, 0x73, 0x65, 0x64,
	0x5f, 0x67, 0x70, 0x75, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x10, 0x6d, 0x61, 0x78, 0x55, 0x73, 0x65, 0x64, 0x47, 0x70, 0x75, 0x4d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x12, 0x26, 0x0a, 0x0f, 0x75, 0x73, 0x65, 0x64, 0x5f, 0x67, 0x70, 0x75, 0x5f,
	0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x75, 0x73,
	0x65, 0x64, 0x47, 0x70, 0x75, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x35, 0x0a, 0x08, 0x63,
	0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x50,
	0x72, 0x6f, 0x63, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72,
	0x65, 0x6e, 0x1a, 0x3d, 0x0a, 0x0f, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x42, 0x0a, 0x11, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x50, 0x72, 0x6f,
	0x63, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x2d, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x08, 0x63, 0x68, 0x69,
	0x6c, 0x64, 0x72, 0x65, 0x6e, 0x22, 0xb3, 0x01, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x63, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x04, 0x73, 0x74, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x52,
	0x04, 0x73, 0x74, 0x61, 0x74, 0x12, 0x23, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x6d, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x6d, 0x12, 0x26, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6d, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6d, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x6a, 0x0a, 0x04, 0x53,
	0x74, 0x61, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x72, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x70, 0x69, 0x64, 0x22, 0x2d, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x6d,
	0x12, 0x10, 0x0a, 0x03, 0x72, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x72,
	0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x32, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x76, 0x72, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x76, 0x72, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x64, 0x0a, 0x18, 0x43, 0x68,
	0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x50, 0x72, 0x6f, 0x63, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x49,
	0x64, 0x12, 0x2d, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x50, 0x72, 0x6f,
	0x63, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e,
	0x22, 0x68, 0x0a, 0x19, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x50, 0x72, 0x6f, 0x63,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a,
	0x14, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x73, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x72, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x2e, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x50, 0x72, 0x6f,
	0x63, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x12, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e,
	0x50, 0x72, 0x6f, 0x63, 0x73, 0x53, 0x74, 0x61, 0x74, 0x73, 0x22, 0x9b, 0x01, 0x0a, 0x10, 0x50,
	0x72, 0x6f, 0x63, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x73, 0x74, 0x61, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x6d,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x6d, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6d, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6d, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x22, 0x45, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x63,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x63, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x53, 0x74, 0x61, 0x74, 0x73, 0x22,
	0x51, 0x0a, 0x1a, 0x52, 0x71, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x71, 0x64, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a,
	0x0b, 0x62, 0x6f, 0x6f, 0x74, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x42, 0x6f, 0x6f, 0x74,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x0a, 0x62, 0x6f, 0x6f, 0x74, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x22, 0x1d, 0x0a, 0x1b, 0x52, 0x71, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52,
	0x71, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x79, 0x0a, 0x26, 0x52, 0x71, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x75,
	0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4f, 0x0a, 0x15, 0x66,
	0x72, 0x61, 0x6d, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x72, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x13, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x43, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x29, 0x0a, 0x27,
	0x52, 0x71, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67,
	0x46, 0x72, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4d, 0x0a, 0x16, 0x52, 0x71, 0x64, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x33, 0x0a, 0x0b, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e,
	0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x0a, 0x68, 0x6f, 0x73, 0x74,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x19, 0x0a, 0x17, 0x52, 0x71, 0x64, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x32, 0xc3, 0x02, 0x0a, 0x12, 0x52, 0x71, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12, 0x5b, 0x0a, 0x10, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x52, 0x71, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x75, 0x70, 0x12, 0x22, 0x2e, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x52, 0x71, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52,
	0x71, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x23, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x52, 0x71, 0x64, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x52, 0x71, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x75, 0x70, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7f, 0x0a, 0x1c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52,
	0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x52,
	0x71, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x46,
	0x72, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x52,
	0x71, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x46,
	0x72, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x0c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e,
	0x52, 0x71, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e,
	0x52, 0x71, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x32, 0x0a, 0x20, 0x63, 0x6f, 0x6d, 0x2e, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x2e, 0x73, 0x70, 0x63, 0x75, 0x65, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x01, 0x5a, 0x0c, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_OpenCue_proto_report_proto_rawDescOnce sync.Once
	file_OpenCue_proto_report_proto_rawDescData = file_OpenCue_proto_report_proto_rawDesc
)

func file_OpenCue_proto_report_proto_rawDescGZIP() []byte {
	file_OpenCue_proto_report_proto_rawDescOnce.Do(func() {
		file_OpenCue_proto_report_proto_rawDescData = protoimpl.X.CompressGZIP(file_OpenCue_proto_report_proto_rawDescData)
	})
	return file_OpenCue_proto_report_proto_rawDescData
}

var file_OpenCue_proto_report_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_OpenCue_proto_report_proto_goTypes = []interface{}{
	(*BootReport)(nil),                              // 0: report.BootReport
	(*CoreDetail)(nil),                              // 1: report.CoreDetail
	(*CoreId)(nil),                                  // 2: report.CoreId
	(*FrameCompleteReport)(nil),                     // 3: report.FrameCompleteReport
	(*HostReport)(nil),                              // 4: report.HostReport
	(*RenderHost)(nil),                              // 5: report.RenderHost
	(*RunningFrameInfo)(nil),                        // 6: report.RunningFrameInfo
	(*ChildrenProcStats)(nil),                       // 7: report.ChildrenProcStats
	(*ProcStats)(nil),                               // 8: report.ProcStats
	(*Stat)(nil),                                    // 9: report.Stat
	(*Statm)(nil),                                   // 10: report.Statm
	(*Status)(nil),                                  // 11: report.Status
	(*ChildrenProcStatsRequest)(nil),                // 12: report.ChildrenProcStatsRequest
	(*ChildrenProcStatsResponse)(nil),               // 13: report.ChildrenProcStatsResponse
	(*ProcStatsRequest)(nil),                        // 14: report.ProcStatsRequest
	(*ProcStatsResponse)(nil),                       // 15: report.ProcStatsResponse
	(*RqdReportRqdStartupRequest)(nil),              // 16: report.RqdReportRqdStartupRequest
	(*RqdReportRqdStartupResponse)(nil),             // 17: report.RqdReportRqdStartupResponse
	(*RqdReportRunningFrameCompletionRequest)(nil),  // 18: report.RqdReportRunningFrameCompletionRequest
	(*RqdReportRunningFrameCompletionResponse)(nil), // 19: report.RqdReportRunningFrameCompletionResponse
	(*RqdReportStatusRequest)(nil),                  // 20: report.RqdReportStatusRequest
	(*RqdReportStatusResponse)(nil),                 // 21: report.RqdReportStatusResponse
	nil,                                             // 22: report.CoreDetail.ReservedCoresEntry
	nil,                                             // 23: report.RenderHost.AttributesEntry
	nil,                                             // 24: report.RunningFrameInfo.AttributesEntry
	(host.HardwareState)(0),                         // 25: host.HardwareState
}
var file_OpenCue_proto_report_proto_depIdxs = []int32{
	5,  // 0: report.BootReport.host:type_name -> report.RenderHost
	1,  // 1: report.BootReport.core_info:type_name -> report.CoreDetail
	22, // 2: report.CoreDetail.reserved_cores:type_name -> report.CoreDetail.ReservedCoresEntry
	5,  // 3: report.FrameCompleteReport.host:type_name -> report.RenderHost
	6,  // 4: report.FrameCompleteReport.frame:type_name -> report.RunningFrameInfo
	5,  // 5: report.HostReport.host:type_name -> report.RenderHost
	6,  // 6: report.HostReport.frames:type_name -> report.RunningFrameInfo
	1,  // 7: report.HostReport.core_info:type_name -> report.CoreDetail
	25, // 8: report.RenderHost.state:type_name -> host.HardwareState
	23, // 9: report.RenderHost.attributes:type_name -> report.RenderHost.AttributesEntry
	24, // 10: report.RunningFrameInfo.attributes:type_name -> report.RunningFrameInfo.AttributesEntry
	7,  // 11: report.RunningFrameInfo.children:type_name -> report.ChildrenProcStats
	8,  // 12: report.ChildrenProcStats.children:type_name -> report.ProcStats
	9,  // 13: report.ProcStats.stat:type_name -> report.Stat
	10, // 14: report.ProcStats.statm:type_name -> report.Statm
	11, // 15: report.ProcStats.status:type_name -> report.Status
	8,  // 16: report.ChildrenProcStatsRequest.children:type_name -> report.ProcStats
	7,  // 17: report.ChildrenProcStatsResponse.children_procs_stats:type_name -> report.ChildrenProcStats
	8,  // 18: report.ProcStatsResponse.proc_stats:type_name -> report.ProcStats
	0,  // 19: report.RqdReportRqdStartupRequest.boot_report:type_name -> report.BootReport
	3,  // 20: report.RqdReportRunningFrameCompletionRequest.frame_complete_report:type_name -> report.FrameCompleteReport
	4,  // 21: report.RqdReportStatusRequest.host_report:type_name -> report.HostReport
	2,  // 22: report.CoreDetail.ReservedCoresEntry.value:type_name -> report.CoreId
	16, // 23: report.RqdReportInterface.ReportRqdStartup:input_type -> report.RqdReportRqdStartupRequest
	18, // 24: report.RqdReportInterface.ReportRunningFrameCompletion:input_type -> report.RqdReportRunningFrameCompletionRequest
	20, // 25: report.RqdReportInterface.ReportStatus:input_type -> report.RqdReportStatusRequest
	17, // 26: report.RqdReportInterface.ReportRqdStartup:output_type -> report.RqdReportRqdStartupResponse
	19, // 27: report.RqdReportInterface.ReportRunningFrameCompletion:output_type -> report.RqdReportRunningFrameCompletionResponse
	21, // 28: report.RqdReportInterface.ReportStatus:output_type -> report.RqdReportStatusResponse
	26, // [26:29] is the sub-list for method output_type
	23, // [23:26] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_OpenCue_proto_report_proto_init() }
func file_OpenCue_proto_report_proto_init() {
	if File_OpenCue_proto_report_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_OpenCue_proto_report_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BootReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_report_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoreDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_report_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoreId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_report_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrameCompleteReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_report_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_report_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RenderHost); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_report_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunningFrameInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_report_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChildrenProcStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_report_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_report_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_report_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Statm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_report_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Status); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_report_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChildrenProcStatsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_report_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChildrenProcStatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_report_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcStatsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_report_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcStatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_report_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RqdReportRqdStartupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_report_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RqdReportRqdStartupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_report_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RqdReportRunningFrameCompletionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_report_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RqdReportRunningFrameCompletionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_report_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RqdReportStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenCue_proto_report_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RqdReportStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_OpenCue_proto_report_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_OpenCue_proto_report_proto_goTypes,
		DependencyIndexes: file_OpenCue_proto_report_proto_depIdxs,
		MessageInfos:      file_OpenCue_proto_report_proto_msgTypes,
	}.Build()
	File_OpenCue_proto_report_proto = out.File
	file_OpenCue_proto_report_proto_rawDesc = nil
	file_OpenCue_proto_report_proto_goTypes = nil
	file_OpenCue_proto_report_proto_depIdxs = nil
}
